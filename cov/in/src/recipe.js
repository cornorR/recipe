/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['recipe.js']) {
  _$jscoverage['recipe.js'] = [];
  _$jscoverage['recipe.js'][1] = 0;
  _$jscoverage['recipe.js'][3] = 0;
  _$jscoverage['recipe.js'][11] = 0;
  _$jscoverage['recipe.js'][14] = 0;
  _$jscoverage['recipe.js'][15] = 0;
  _$jscoverage['recipe.js'][16] = 0;
  _$jscoverage['recipe.js'][19] = 0;
  _$jscoverage['recipe.js'][22] = 0;
  _$jscoverage['recipe.js'][34] = 0;
  _$jscoverage['recipe.js'][35] = 0;
  _$jscoverage['recipe.js'][36] = 0;
  _$jscoverage['recipe.js'][37] = 0;
  _$jscoverage['recipe.js'][38] = 0;
  _$jscoverage['recipe.js'][40] = 0;
  _$jscoverage['recipe.js'][43] = 0;
  _$jscoverage['recipe.js'][44] = 0;
  _$jscoverage['recipe.js'][45] = 0;
  _$jscoverage['recipe.js'][46] = 0;
  _$jscoverage['recipe.js'][47] = 0;
  _$jscoverage['recipe.js'][48] = 0;
  _$jscoverage['recipe.js'][50] = 0;
  _$jscoverage['recipe.js'][53] = 0;
  _$jscoverage['recipe.js'][54] = 0;
  _$jscoverage['recipe.js'][55] = 0;
  _$jscoverage['recipe.js'][57] = 0;
  _$jscoverage['recipe.js'][59] = 0;
  _$jscoverage['recipe.js'][61] = 0;
  _$jscoverage['recipe.js'][65] = 0;
  _$jscoverage['recipe.js'][68] = 0;
  _$jscoverage['recipe.js'][69] = 0;
  _$jscoverage['recipe.js'][70] = 0;
  _$jscoverage['recipe.js'][72] = 0;
  _$jscoverage['recipe.js'][73] = 0;
  _$jscoverage['recipe.js'][74] = 0;
  _$jscoverage['recipe.js'][80] = 0;
  _$jscoverage['recipe.js'][81] = 0;
  _$jscoverage['recipe.js'][85] = 0;
  _$jscoverage['recipe.js'][86] = 0;
  _$jscoverage['recipe.js'][87] = 0;
  _$jscoverage['recipe.js'][90] = 0;
  _$jscoverage['recipe.js'][92] = 0;
  _$jscoverage['recipe.js'][95] = 0;
  _$jscoverage['recipe.js'][96] = 0;
  _$jscoverage['recipe.js'][97] = 0;
  _$jscoverage['recipe.js'][100] = 0;
  _$jscoverage['recipe.js'][102] = 0;
  _$jscoverage['recipe.js'][107] = 0;
  _$jscoverage['recipe.js'][108] = 0;
  _$jscoverage['recipe.js'][111] = 0;
  _$jscoverage['recipe.js'][112] = 0;
}
_$jscoverage['recipe.js'][1]++;
(function (globals, $, head) {
  _$jscoverage['recipe.js'][3]++;
  var base = "", method = "", cache = {}, dfd = {version: new $.Deferred(), dependencies: new $.Deferred()}, uniq = (function (array) {
  _$jscoverage['recipe.js'][11]++;
  var i, len, uniqued = [];
  _$jscoverage['recipe.js'][14]++;
  for (i = 0, len = array.length; i < len; i++) {
    _$jscoverage['recipe.js'][15]++;
    if ($.inArray(array[i], uniqued) === -1) {
      _$jscoverage['recipe.js'][16]++;
      uniqued.push(array[i]);
    }
}
  _$jscoverage['recipe.js'][19]++;
  return uniqued;
}), recipe = (function (options) {
  _$jscoverage['recipe.js'][22]++;
  var namespace, libraries = (options || {}).libraries || [], scripts = (options || {}).scripts || [], dependencies = recipe.dependencies, urls = [], args = [], dfd = new $.Deferred(), len, deps, set, i;
  _$jscoverage['recipe.js'][34]++;
  for (i = 0, len = libraries.length; i < len; i++) {
    _$jscoverage['recipe.js'][35]++;
    deps = dependencies[libraries[i]];
    _$jscoverage['recipe.js'][36]++;
    if (! deps) {
      _$jscoverage['recipe.js'][37]++;
      dfd.reject("Ingredients not found. namespace[" + libraries[i] + "]");
      _$jscoverage['recipe.js'][38]++;
      return dfd;
    }
    _$jscoverage['recipe.js'][40]++;
    urls = urls.concat(deps);
}
  _$jscoverage['recipe.js'][43]++;
  urls = uniq(urls.concat(scripts));
  _$jscoverage['recipe.js'][44]++;
  for (i = 0, len = urls.length; i < len; i++) {
    _$jscoverage['recipe.js'][45]++;
    set = urls[i].split("#");
    _$jscoverage['recipe.js'][46]++;
    if (! set[0]) {
      _$jscoverage['recipe.js'][47]++;
      dfd.reject("Illegal URL were exists. [\"" + urls.join("\", \"") + "\"]");
      _$jscoverage['recipe.js'][48]++;
      return dfd;
    }
    _$jscoverage['recipe.js'][50]++;
    args.push(set[0] + "?_=" + recipe.version + (set[1]? "#" + set[1]: ""));
}
  _$jscoverage['recipe.js'][53]++;
  if (args.length) {
    _$jscoverage['recipe.js'][54]++;
    args.push((function () {
  _$jscoverage['recipe.js'][55]++;
  dfd.resolve();
}));
    _$jscoverage['recipe.js'][57]++;
    head.js.apply(head, args);
  }
  else {
    _$jscoverage['recipe.js'][59]++;
    dfd.resolve();
  }
  _$jscoverage['recipe.js'][61]++;
  return dfd;
}), methods = {init: (function () {
  _$jscoverage['recipe.js'][65]++;
  var script = $("script[src$='/recipe.js'][data-menu]"), url = script.data("menu") || "";
  _$jscoverage['recipe.js'][68]++;
  base = url.replace(/[^\/]+$/, "");
  _$jscoverage['recipe.js'][69]++;
  if (! url) {
    _$jscoverage['recipe.js'][70]++;
    throw new ReferenceError("You might forget to order because of menu was not founded.");
  }
  _$jscoverage['recipe.js'][72]++;
  recipe.get.version().then((function () {
  _$jscoverage['recipe.js'][73]++;
  recipe.get.dependencies().then((function () {
  _$jscoverage['recipe.js'][74]++;
  recipe.resolve(url);
}));
}));
}), resolve: (function (url) {
  _$jscoverage['recipe.js'][80]++;
  var set = url.split("#");
  _$jscoverage['recipe.js'][81]++;
  head.js(set[0] + "?_=" + recipe.version + (set[1]? "#" + set[1]: ""));
}), get: {version: (function () {
  _$jscoverage['recipe.js'][85]++;
  if (! recipe.version) {
    _$jscoverage['recipe.js'][86]++;
    head.js(base + "/recipe.version.js?_=" + new Date().getTime(), (function () {
  _$jscoverage['recipe.js'][87]++;
  dfd.version.resolve(recipe.version);
}));
  }
  else {
    _$jscoverage['recipe.js'][90]++;
    dfd.version.resolve(recipe.version);
  }
  _$jscoverage['recipe.js'][92]++;
  return dfd.version;
}), dependencies: (function () {
  _$jscoverage['recipe.js'][95]++;
  if (! recipe.dependencies) {
    _$jscoverage['recipe.js'][96]++;
    head.js(base + "/recipe.dependencies.js?_=" + recipe.version, (function () {
  _$jscoverage['recipe.js'][97]++;
  dfd.dependencies.resolve(recipe.dependencies);
}));
  }
  else {
    _$jscoverage['recipe.js'][100]++;
    dfd.dependencies.resolve(recipe.dependencies);
  }
  _$jscoverage['recipe.js'][102]++;
  return dfd.dependencies;
})}};
  _$jscoverage['recipe.js'][107]++;
  for (method in methods) {
    _$jscoverage['recipe.js'][108]++;
    recipe[method] = methods[method];
}
  _$jscoverage['recipe.js'][111]++;
  globals.recipe = recipe;
  _$jscoverage['recipe.js'][112]++;
  recipe.init();
})(this, jQuery, head);
_$jscoverage['recipe.js'].source = ["(function(globals, $, head){","","  var base = '',","      method = '',","      cache = {},","      dfd = {","        version: new $.Deferred(),","        dependencies: new $.Deferred()","      },","      uniq = function(array){","        var i,","            len,","            uniqued = [];","        for(i = 0, len = array.length; i &lt; len; i++){","          if( $.inArray(array[i], uniqued) === -1 ){","            uniqued.push(array[i]);","          }","        }","        return uniqued;","      },","      recipe = function(options){","        var namespace,","            libraries = (options||{}).libraries||[],","            scripts = (options||{}).scripts||[],","            dependencies = recipe.dependencies,","            urls = [],","            args = [],","            dfd = new $.Deferred(),","            len,","            deps,","            set,","            i;","","        for( i = 0, len = libraries.length; i&lt;len; i++){","          deps = dependencies[libraries[i]];","          if(!deps) {","            dfd.reject(\"Ingredients not found. namespace[\"+libraries[i]+\"]\");","            return dfd;","          }","          urls = urls.concat( deps );","        }","","        urls = uniq( urls.concat(scripts) );","        for( i = 0, len = urls.length; i&lt;len; i++){","          set = urls[i].split(\"#\");","          if(!set[0]){","            dfd.reject(\"Illegal URL were exists. [\\\"\"+urls.join(\"\\\", \\\"\")+\"\\\"]\");","            return dfd;","          }","          args.push(set[0]+\"?_=\"+recipe.version+(set[1]?\"#\"+set[1]:\"\"));","        }","","        if(args.length) {","          args.push(function(){","            dfd.resolve();","          });","          head.js.apply(head, args);","        } else {","          dfd.resolve();","        }","        return dfd;","      },","      methods = {","        init: function(){","          var script = $(\"script[src$='/recipe.js'][data-menu]\"),","              url = script.data(\"menu\")||\"\";","          ","          base = url.replace(/[^\\/]+$/, '');","          if(!url) {","            throw new ReferenceError(\"You might forget to order because of menu was not founded.\");","          }","          recipe.get.version().then(function(){","            recipe.get.dependencies().then(function(){","              recipe.resolve(url);","            });","          });","","        },","        resolve: function(url){","          var set = url.split(\"#\");","          head.js(set[0]+\"?_=\"+recipe.version+(set[1]?\"#\"+set[1]:\"\"));","        },","        get: {","          version: function(){","            if( !recipe.version ) {","              head.js(base+'/recipe.version.js?_='+(new Date().getTime()), function(){","                dfd.version.resolve(recipe.version);","              });","            } else {","              dfd.version.resolve(recipe.version);","            }","            return dfd.version;","          },","          dependencies: function(){","            if(!recipe.dependencies) {","              head.js(base+'/recipe.dependencies.js?_='+recipe.version, function(){","                dfd.dependencies.resolve(recipe.dependencies);","              });","            } else {","              dfd.dependencies.resolve(recipe.dependencies);","            }","            return dfd.dependencies;","          }","        }","      };","","  for(method in methods){","    recipe[method] = methods[method];","  }","","  globals.recipe = recipe;","  recipe.init();","})(this, jQuery, head);"];
