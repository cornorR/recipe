/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['recipe.unpack.js']) {
  _$jscoverage['recipe.unpack.js'] = [];
  _$jscoverage['recipe.unpack.js'][9] = 0;
  _$jscoverage['recipe.unpack.js'][10] = 0;
  _$jscoverage['recipe.unpack.js'][39] = 0;
  _$jscoverage['recipe.unpack.js'][49] = 0;
  _$jscoverage['recipe.unpack.js'][50] = 0;
  _$jscoverage['recipe.unpack.js'][53] = 0;
  _$jscoverage['recipe.unpack.js'][54] = 0;
  _$jscoverage['recipe.unpack.js'][57] = 0;
  _$jscoverage['recipe.unpack.js'][58] = 0;
  _$jscoverage['recipe.unpack.js'][61] = 0;
  _$jscoverage['recipe.unpack.js'][62] = 0;
  _$jscoverage['recipe.unpack.js'][63] = 0;
  _$jscoverage['recipe.unpack.js'][65] = 0;
  _$jscoverage['recipe.unpack.js'][70] = 0;
  _$jscoverage['recipe.unpack.js'][74] = 0;
  _$jscoverage['recipe.unpack.js'][76] = 0;
  _$jscoverage['recipe.unpack.js'][77] = 0;
  _$jscoverage['recipe.unpack.js'][78] = 0;
  _$jscoverage['recipe.unpack.js'][80] = 0;
  _$jscoverage['recipe.unpack.js'][85] = 0;
  _$jscoverage['recipe.unpack.js'][86] = 0;
  _$jscoverage['recipe.unpack.js'][91] = 0;
  _$jscoverage['recipe.unpack.js'][95] = 0;
  _$jscoverage['recipe.unpack.js'][97] = 0;
  _$jscoverage['recipe.unpack.js'][98] = 0;
  _$jscoverage['recipe.unpack.js'][99] = 0;
  _$jscoverage['recipe.unpack.js'][100] = 0;
  _$jscoverage['recipe.unpack.js'][101] = 0;
  _$jscoverage['recipe.unpack.js'][103] = 0;
  _$jscoverage['recipe.unpack.js'][106] = 0;
  _$jscoverage['recipe.unpack.js'][107] = 0;
  _$jscoverage['recipe.unpack.js'][108] = 0;
  _$jscoverage['recipe.unpack.js'][109] = 0;
  _$jscoverage['recipe.unpack.js'][110] = 0;
  _$jscoverage['recipe.unpack.js'][112] = 0;
  _$jscoverage['recipe.unpack.js'][113] = 0;
  _$jscoverage['recipe.unpack.js'][114] = 0;
  _$jscoverage['recipe.unpack.js'][117] = 0;
  _$jscoverage['recipe.unpack.js'][118] = 0;
  _$jscoverage['recipe.unpack.js'][121] = 0;
  _$jscoverage['recipe.unpack.js'][128] = 0;
  _$jscoverage['recipe.unpack.js'][129] = 0;
  _$jscoverage['recipe.unpack.js'][131] = 0;
  _$jscoverage['recipe.unpack.js'][132] = 0;
  _$jscoverage['recipe.unpack.js'][133] = 0;
  _$jscoverage['recipe.unpack.js'][136] = 0;
  _$jscoverage['recipe.unpack.js'][141] = 0;
  _$jscoverage['recipe.unpack.js'][142] = 0;
  _$jscoverage['recipe.unpack.js'][147] = 0;
  _$jscoverage['recipe.unpack.js'][148] = 0;
  _$jscoverage['recipe.unpack.js'][152] = 0;
  _$jscoverage['recipe.unpack.js'][155] = 0;
  _$jscoverage['recipe.unpack.js'][156] = 0;
  _$jscoverage['recipe.unpack.js'][162] = 0;
  _$jscoverage['recipe.unpack.js'][163] = 0;
  _$jscoverage['recipe.unpack.js'][164] = 0;
  _$jscoverage['recipe.unpack.js'][168] = 0;
  _$jscoverage['recipe.unpack.js'][171] = 0;
  _$jscoverage['recipe.unpack.js'][173] = 0;
  _$jscoverage['recipe.unpack.js'][174] = 0;
  _$jscoverage['recipe.unpack.js'][177] = 0;
  _$jscoverage['recipe.unpack.js'][179] = 0;
  _$jscoverage['recipe.unpack.js'][180] = 0;
  _$jscoverage['recipe.unpack.js'][182] = 0;
  _$jscoverage['recipe.unpack.js'][183] = 0;
  _$jscoverage['recipe.unpack.js'][187] = 0;
  _$jscoverage['recipe.unpack.js'][190] = 0;
  _$jscoverage['recipe.unpack.js'][193] = 0;
  _$jscoverage['recipe.unpack.js'][194] = 0;
  _$jscoverage['recipe.unpack.js'][195] = 0;
  _$jscoverage['recipe.unpack.js'][196] = 0;
  _$jscoverage['recipe.unpack.js'][198] = 0;
  _$jscoverage['recipe.unpack.js'][201] = 0;
  _$jscoverage['recipe.unpack.js'][203] = 0;
  _$jscoverage['recipe.unpack.js'][204] = 0;
  _$jscoverage['recipe.unpack.js'][205] = 0;
  _$jscoverage['recipe.unpack.js'][210] = 0;
  _$jscoverage['recipe.unpack.js'][211] = 0;
  _$jscoverage['recipe.unpack.js'][215] = 0;
  _$jscoverage['recipe.unpack.js'][229] = 0;
  _$jscoverage['recipe.unpack.js'][230] = 0;
  _$jscoverage['recipe.unpack.js'][231] = 0;
  _$jscoverage['recipe.unpack.js'][232] = 0;
  _$jscoverage['recipe.unpack.js'][239] = 0;
  _$jscoverage['recipe.unpack.js'][241] = 0;
  _$jscoverage['recipe.unpack.js'][243] = 0;
  _$jscoverage['recipe.unpack.js'][246] = 0;
  _$jscoverage['recipe.unpack.js'][249] = 0;
  _$jscoverage['recipe.unpack.js'][250] = 0;
  _$jscoverage['recipe.unpack.js'][251] = 0;
  _$jscoverage['recipe.unpack.js'][252] = 0;
  _$jscoverage['recipe.unpack.js'][254] = 0;
  _$jscoverage['recipe.unpack.js'][255] = 0;
  _$jscoverage['recipe.unpack.js'][260] = 0;
  _$jscoverage['recipe.unpack.js'][262] = 0;
  _$jscoverage['recipe.unpack.js'][263] = 0;
  _$jscoverage['recipe.unpack.js'][266] = 0;
  _$jscoverage['recipe.unpack.js'][270] = 0;
  _$jscoverage['recipe.unpack.js'][273] = 0;
  _$jscoverage['recipe.unpack.js'][274] = 0;
  _$jscoverage['recipe.unpack.js'][275] = 0;
  _$jscoverage['recipe.unpack.js'][278] = 0;
  _$jscoverage['recipe.unpack.js'][282] = 0;
  _$jscoverage['recipe.unpack.js'][284] = 0;
  _$jscoverage['recipe.unpack.js'][285] = 0;
  _$jscoverage['recipe.unpack.js'][286] = 0;
  _$jscoverage['recipe.unpack.js'][287] = 0;
  _$jscoverage['recipe.unpack.js'][289] = 0;
  _$jscoverage['recipe.unpack.js'][293] = 0;
  _$jscoverage['recipe.unpack.js'][294] = 0;
  _$jscoverage['recipe.unpack.js'][295] = 0;
  _$jscoverage['recipe.unpack.js'][296] = 0;
  _$jscoverage['recipe.unpack.js'][299] = 0;
  _$jscoverage['recipe.unpack.js'][301] = 0;
  _$jscoverage['recipe.unpack.js'][302] = 0;
  _$jscoverage['recipe.unpack.js'][303] = 0;
  _$jscoverage['recipe.unpack.js'][304] = 0;
  _$jscoverage['recipe.unpack.js'][305] = 0;
  _$jscoverage['recipe.unpack.js'][308] = 0;
  _$jscoverage['recipe.unpack.js'][311] = 0;
  _$jscoverage['recipe.unpack.js'][313] = 0;
  _$jscoverage['recipe.unpack.js'][314] = 0;
  _$jscoverage['recipe.unpack.js'][320] = 0;
  _$jscoverage['recipe.unpack.js'][321] = 0;
  _$jscoverage['recipe.unpack.js'][329] = 0;
  _$jscoverage['recipe.unpack.js'][330] = 0;
  _$jscoverage['recipe.unpack.js'][331] = 0;
  _$jscoverage['recipe.unpack.js'][333] = 0;
  _$jscoverage['recipe.unpack.js'][334] = 0;
  _$jscoverage['recipe.unpack.js'][345] = 0;
  _$jscoverage['recipe.unpack.js'][346] = 0;
  _$jscoverage['recipe.unpack.js'][348] = 0;
  _$jscoverage['recipe.unpack.js'][349] = 0;
  _$jscoverage['recipe.unpack.js'][351] = 0;
  _$jscoverage['recipe.unpack.js'][356] = 0;
  _$jscoverage['recipe.unpack.js'][358] = 0;
  _$jscoverage['recipe.unpack.js'][361] = 0;
  _$jscoverage['recipe.unpack.js'][368] = 0;
  _$jscoverage['recipe.unpack.js'][369] = 0;
  _$jscoverage['recipe.unpack.js'][370] = 0;
  _$jscoverage['recipe.unpack.js'][371] = 0;
  _$jscoverage['recipe.unpack.js'][374] = 0;
  _$jscoverage['recipe.unpack.js'][376] = 0;
  _$jscoverage['recipe.unpack.js'][377] = 0;
  _$jscoverage['recipe.unpack.js'][381] = 0;
  _$jscoverage['recipe.unpack.js'][382] = 0;
  _$jscoverage['recipe.unpack.js'][383] = 0;
  _$jscoverage['recipe.unpack.js'][384] = 0;
  _$jscoverage['recipe.unpack.js'][385] = 0;
  _$jscoverage['recipe.unpack.js'][387] = 0;
  _$jscoverage['recipe.unpack.js'][388] = 0;
  _$jscoverage['recipe.unpack.js'][391] = 0;
  _$jscoverage['recipe.unpack.js'][394] = 0;
  _$jscoverage['recipe.unpack.js'][395] = 0;
  _$jscoverage['recipe.unpack.js'][399] = 0;
  _$jscoverage['recipe.unpack.js'][402] = 0;
  _$jscoverage['recipe.unpack.js'][403] = 0;
  _$jscoverage['recipe.unpack.js'][404] = 0;
  _$jscoverage['recipe.unpack.js'][408] = 0;
  _$jscoverage['recipe.unpack.js'][409] = 0;
  _$jscoverage['recipe.unpack.js'][410] = 0;
  _$jscoverage['recipe.unpack.js'][414] = 0;
  _$jscoverage['recipe.unpack.js'][415] = 0;
  _$jscoverage['recipe.unpack.js'][416] = 0;
  _$jscoverage['recipe.unpack.js'][420] = 0;
  _$jscoverage['recipe.unpack.js'][421] = 0;
  _$jscoverage['recipe.unpack.js'][423] = 0;
  _$jscoverage['recipe.unpack.js'][424] = 0;
  _$jscoverage['recipe.unpack.js'][427] = 0;
  _$jscoverage['recipe.unpack.js'][428] = 0;
  _$jscoverage['recipe.unpack.js'][430] = 0;
  _$jscoverage['recipe.unpack.js'][437] = 0;
  _$jscoverage['recipe.unpack.js'][438] = 0;
  _$jscoverage['recipe.unpack.js'][439] = 0;
  _$jscoverage['recipe.unpack.js'][442] = 0;
  _$jscoverage['recipe.unpack.js'][443] = 0;
  _$jscoverage['recipe.unpack.js'][445] = 0;
  _$jscoverage['recipe.unpack.js'][446] = 0;
  _$jscoverage['recipe.unpack.js'][447] = 0;
  _$jscoverage['recipe.unpack.js'][448] = 0;
  _$jscoverage['recipe.unpack.js'][449] = 0;
  _$jscoverage['recipe.unpack.js'][452] = 0;
  _$jscoverage['recipe.unpack.js'][453] = 0;
  _$jscoverage['recipe.unpack.js'][457] = 0;
  _$jscoverage['recipe.unpack.js'][458] = 0;
  _$jscoverage['recipe.unpack.js'][459] = 0;
  _$jscoverage['recipe.unpack.js'][461] = 0;
  _$jscoverage['recipe.unpack.js'][464] = 0;
  _$jscoverage['recipe.unpack.js'][476] = 0;
  _$jscoverage['recipe.unpack.js'][480] = 0;
  _$jscoverage['recipe.unpack.js'][481] = 0;
  _$jscoverage['recipe.unpack.js'][485] = 0;
  _$jscoverage['recipe.unpack.js'][486] = 0;
  _$jscoverage['recipe.unpack.js'][488] = 0;
  _$jscoverage['recipe.unpack.js'][491] = 0;
  _$jscoverage['recipe.unpack.js'][497] = 0;
  _$jscoverage['recipe.unpack.js'][502] = 0;
  _$jscoverage['recipe.unpack.js'][514] = 0;
  _$jscoverage['recipe.unpack.js'][515] = 0;
  _$jscoverage['recipe.unpack.js'][522] = 0;
  _$jscoverage['recipe.unpack.js'][524] = 0;
  _$jscoverage['recipe.unpack.js'][525] = 0;
  _$jscoverage['recipe.unpack.js'][527] = 0;
  _$jscoverage['recipe.unpack.js'][528] = 0;
  _$jscoverage['recipe.unpack.js'][529] = 0;
  _$jscoverage['recipe.unpack.js'][530] = 0;
  _$jscoverage['recipe.unpack.js'][531] = 0;
  _$jscoverage['recipe.unpack.js'][532] = 0;
  _$jscoverage['recipe.unpack.js'][535] = 0;
  _$jscoverage['recipe.unpack.js'][536] = 0;
  _$jscoverage['recipe.unpack.js'][542] = 0;
  _$jscoverage['recipe.unpack.js'][543] = 0;
  _$jscoverage['recipe.unpack.js'][544] = 0;
  _$jscoverage['recipe.unpack.js'][546] = 0;
  _$jscoverage['recipe.unpack.js'][547] = 0;
  _$jscoverage['recipe.unpack.js'][548] = 0;
  _$jscoverage['recipe.unpack.js'][550] = 0;
  _$jscoverage['recipe.unpack.js'][553] = 0;
  _$jscoverage['recipe.unpack.js'][554] = 0;
  _$jscoverage['recipe.unpack.js'][555] = 0;
  _$jscoverage['recipe.unpack.js'][557] = 0;
  _$jscoverage['recipe.unpack.js'][560] = 0;
  _$jscoverage['recipe.unpack.js'][561] = 0;
  _$jscoverage['recipe.unpack.js'][562] = 0;
  _$jscoverage['recipe.unpack.js'][570] = 0;
  _$jscoverage['recipe.unpack.js'][578] = 0;
  _$jscoverage['recipe.unpack.js'][579] = 0;
  _$jscoverage['recipe.unpack.js'][580] = 0;
  _$jscoverage['recipe.unpack.js'][582] = 0;
  _$jscoverage['recipe.unpack.js'][583] = 0;
  _$jscoverage['recipe.unpack.js'][584] = 0;
  _$jscoverage['recipe.unpack.js'][588] = 0;
  _$jscoverage['recipe.unpack.js'][589] = 0;
  _$jscoverage['recipe.unpack.js'][592] = 0;
  _$jscoverage['recipe.unpack.js'][593] = 0;
  _$jscoverage['recipe.unpack.js'][594] = 0;
  _$jscoverage['recipe.unpack.js'][595] = 0;
  _$jscoverage['recipe.unpack.js'][598] = 0;
  _$jscoverage['recipe.unpack.js'][601] = 0;
  _$jscoverage['recipe.unpack.js'][602] = 0;
  _$jscoverage['recipe.unpack.js'][603] = 0;
  _$jscoverage['recipe.unpack.js'][606] = 0;
  _$jscoverage['recipe.unpack.js'][608] = 0;
  _$jscoverage['recipe.unpack.js'][609] = 0;
  _$jscoverage['recipe.unpack.js'][610] = 0;
  _$jscoverage['recipe.unpack.js'][613] = 0;
  _$jscoverage['recipe.unpack.js'][615] = 0;
  _$jscoverage['recipe.unpack.js'][616] = 0;
  _$jscoverage['recipe.unpack.js'][617] = 0;
  _$jscoverage['recipe.unpack.js'][620] = 0;
  _$jscoverage['recipe.unpack.js'][621] = 0;
  _$jscoverage['recipe.unpack.js'][622] = 0;
  _$jscoverage['recipe.unpack.js'][627] = 0;
  _$jscoverage['recipe.unpack.js'][635] = 0;
  _$jscoverage['recipe.unpack.js'][636] = 0;
  _$jscoverage['recipe.unpack.js'][637] = 0;
  _$jscoverage['recipe.unpack.js'][638] = 0;
  _$jscoverage['recipe.unpack.js'][639] = 0;
  _$jscoverage['recipe.unpack.js'][640] = 0;
  _$jscoverage['recipe.unpack.js'][641] = 0;
  _$jscoverage['recipe.unpack.js'][643] = 0;
  _$jscoverage['recipe.unpack.js'][654] = 0;
  _$jscoverage['recipe.unpack.js'][655] = 0;
  _$jscoverage['recipe.unpack.js'][656] = 0;
  _$jscoverage['recipe.unpack.js'][657] = 0;
  _$jscoverage['recipe.unpack.js'][659] = 0;
  _$jscoverage['recipe.unpack.js'][660] = 0;
  _$jscoverage['recipe.unpack.js'][661] = 0;
  _$jscoverage['recipe.unpack.js'][663] = 0;
  _$jscoverage['recipe.unpack.js'][665] = 0;
  _$jscoverage['recipe.unpack.js'][671] = 0;
  _$jscoverage['recipe.unpack.js'][674] = 0;
  _$jscoverage['recipe.unpack.js'][677] = 0;
  _$jscoverage['recipe.unpack.js'][680] = 0;
  _$jscoverage['recipe.unpack.js'][692] = 0;
  _$jscoverage['recipe.unpack.js'][693] = 0;
  _$jscoverage['recipe.unpack.js'][696] = 0;
  _$jscoverage['recipe.unpack.js'][697] = 0;
  _$jscoverage['recipe.unpack.js'][698] = 0;
  _$jscoverage['recipe.unpack.js'][700] = 0;
  _$jscoverage['recipe.unpack.js'][702] = 0;
  _$jscoverage['recipe.unpack.js'][712] = 0;
  _$jscoverage['recipe.unpack.js'][713] = 0;
  _$jscoverage['recipe.unpack.js'][714] = 0;
  _$jscoverage['recipe.unpack.js'][720] = 0;
  _$jscoverage['recipe.unpack.js'][721] = 0;
  _$jscoverage['recipe.unpack.js'][726] = 0;
  _$jscoverage['recipe.unpack.js'][727] = 0;
  _$jscoverage['recipe.unpack.js'][741] = 0;
  _$jscoverage['recipe.unpack.js'][742] = 0;
  _$jscoverage['recipe.unpack.js'][743] = 0;
  _$jscoverage['recipe.unpack.js'][744] = 0;
  _$jscoverage['recipe.unpack.js'][745] = 0;
  _$jscoverage['recipe.unpack.js'][750] = 0;
  _$jscoverage['recipe.unpack.js'][751] = 0;
  _$jscoverage['recipe.unpack.js'][752] = 0;
  _$jscoverage['recipe.unpack.js'][756] = 0;
  _$jscoverage['recipe.unpack.js'][758] = 0;
  _$jscoverage['recipe.unpack.js'][759] = 0;
  _$jscoverage['recipe.unpack.js'][760] = 0;
  _$jscoverage['recipe.unpack.js'][761] = 0;
  _$jscoverage['recipe.unpack.js'][762] = 0;
  _$jscoverage['recipe.unpack.js'][764] = 0;
  _$jscoverage['recipe.unpack.js'][767] = 0;
  _$jscoverage['recipe.unpack.js'][769] = 0;
  _$jscoverage['recipe.unpack.js'][770] = 0;
  _$jscoverage['recipe.unpack.js'][774] = 0;
  _$jscoverage['recipe.unpack.js'][777] = 0;
  _$jscoverage['recipe.unpack.js'][778] = 0;
  _$jscoverage['recipe.unpack.js'][779] = 0;
  _$jscoverage['recipe.unpack.js'][780] = 0;
  _$jscoverage['recipe.unpack.js'][783] = 0;
  _$jscoverage['recipe.unpack.js'][784] = 0;
  _$jscoverage['recipe.unpack.js'][785] = 0;
  _$jscoverage['recipe.unpack.js'][787] = 0;
  _$jscoverage['recipe.unpack.js'][789] = 0;
  _$jscoverage['recipe.unpack.js'][793] = 0;
  _$jscoverage['recipe.unpack.js'][796] = 0;
  _$jscoverage['recipe.unpack.js'][797] = 0;
  _$jscoverage['recipe.unpack.js'][800] = 0;
  _$jscoverage['recipe.unpack.js'][801] = 0;
  _$jscoverage['recipe.unpack.js'][802] = 0;
  _$jscoverage['recipe.unpack.js'][803] = 0;
  _$jscoverage['recipe.unpack.js'][806] = 0;
  _$jscoverage['recipe.unpack.js'][807] = 0;
  _$jscoverage['recipe.unpack.js'][808] = 0;
  _$jscoverage['recipe.unpack.js'][810] = 0;
  _$jscoverage['recipe.unpack.js'][814] = 0;
  _$jscoverage['recipe.unpack.js'][815] = 0;
  _$jscoverage['recipe.unpack.js'][816] = 0;
  _$jscoverage['recipe.unpack.js'][817] = 0;
  _$jscoverage['recipe.unpack.js'][818] = 0;
  _$jscoverage['recipe.unpack.js'][820] = 0;
  _$jscoverage['recipe.unpack.js'][823] = 0;
  _$jscoverage['recipe.unpack.js'][826] = 0;
  _$jscoverage['recipe.unpack.js'][827] = 0;
  _$jscoverage['recipe.unpack.js'][830] = 0;
  _$jscoverage['recipe.unpack.js'][831] = 0;
  _$jscoverage['recipe.unpack.js'][832] = 0;
  _$jscoverage['recipe.unpack.js'][833] = 0;
  _$jscoverage['recipe.unpack.js'][835] = 0;
  _$jscoverage['recipe.unpack.js'][837] = 0;
  _$jscoverage['recipe.unpack.js'][839] = 0;
  _$jscoverage['recipe.unpack.js'][840] = 0;
  _$jscoverage['recipe.unpack.js'][842] = 0;
  _$jscoverage['recipe.unpack.js'][844] = 0;
  _$jscoverage['recipe.unpack.js'][849] = 0;
  _$jscoverage['recipe.unpack.js'][850] = 0;
  _$jscoverage['recipe.unpack.js'][851] = 0;
  _$jscoverage['recipe.unpack.js'][852] = 0;
  _$jscoverage['recipe.unpack.js'][853] = 0;
  _$jscoverage['recipe.unpack.js'][855] = 0;
  _$jscoverage['recipe.unpack.js'][856] = 0;
  _$jscoverage['recipe.unpack.js'][857] = 0;
  _$jscoverage['recipe.unpack.js'][859] = 0;
  _$jscoverage['recipe.unpack.js'][863] = 0;
  _$jscoverage['recipe.unpack.js'][864] = 0;
  _$jscoverage['recipe.unpack.js'][868] = 0;
  _$jscoverage['recipe.unpack.js'][887] = 0;
  _$jscoverage['recipe.unpack.js'][888] = 0;
  _$jscoverage['recipe.unpack.js'][889] = 0;
  _$jscoverage['recipe.unpack.js'][892] = 0;
  _$jscoverage['recipe.unpack.js'][893] = 0;
  _$jscoverage['recipe.unpack.js'][896] = 0;
  _$jscoverage['recipe.unpack.js'][897] = 0;
  _$jscoverage['recipe.unpack.js'][900] = 0;
  _$jscoverage['recipe.unpack.js'][901] = 0;
  _$jscoverage['recipe.unpack.js'][904] = 0;
  _$jscoverage['recipe.unpack.js'][905] = 0;
  _$jscoverage['recipe.unpack.js'][919] = 0;
  _$jscoverage['recipe.unpack.js'][920] = 0;
  _$jscoverage['recipe.unpack.js'][921] = 0;
  _$jscoverage['recipe.unpack.js'][922] = 0;
  _$jscoverage['recipe.unpack.js'][923] = 0;
  _$jscoverage['recipe.unpack.js'][924] = 0;
  _$jscoverage['recipe.unpack.js'][927] = 0;
  _$jscoverage['recipe.unpack.js'][934] = 0;
  _$jscoverage['recipe.unpack.js'][935] = 0;
  _$jscoverage['recipe.unpack.js'][936] = 0;
  _$jscoverage['recipe.unpack.js'][941] = 0;
  _$jscoverage['recipe.unpack.js'][942] = 0;
  _$jscoverage['recipe.unpack.js'][943] = 0;
  _$jscoverage['recipe.unpack.js'][950] = 0;
  _$jscoverage['recipe.unpack.js'][951] = 0;
  _$jscoverage['recipe.unpack.js'][952] = 0;
  _$jscoverage['recipe.unpack.js'][955] = 0;
  _$jscoverage['recipe.unpack.js'][956] = 0;
  _$jscoverage['recipe.unpack.js'][963] = 0;
  _$jscoverage['recipe.unpack.js'][964] = 0;
  _$jscoverage['recipe.unpack.js'][965] = 0;
  _$jscoverage['recipe.unpack.js'][968] = 0;
  _$jscoverage['recipe.unpack.js'][969] = 0;
  _$jscoverage['recipe.unpack.js'][975] = 0;
  _$jscoverage['recipe.unpack.js'][976] = 0;
  _$jscoverage['recipe.unpack.js'][977] = 0;
  _$jscoverage['recipe.unpack.js'][980] = 0;
  _$jscoverage['recipe.unpack.js'][981] = 0;
  _$jscoverage['recipe.unpack.js'][990] = 0;
  _$jscoverage['recipe.unpack.js'][991] = 0;
  _$jscoverage['recipe.unpack.js'][992] = 0;
  _$jscoverage['recipe.unpack.js'][993] = 0;
  _$jscoverage['recipe.unpack.js'][994] = 0;
  _$jscoverage['recipe.unpack.js'][995] = 0;
  _$jscoverage['recipe.unpack.js'][1001] = 0;
  _$jscoverage['recipe.unpack.js'][1005] = 0;
  _$jscoverage['recipe.unpack.js'][1008] = 0;
  _$jscoverage['recipe.unpack.js'][1009] = 0;
  _$jscoverage['recipe.unpack.js'][1010] = 0;
  _$jscoverage['recipe.unpack.js'][1011] = 0;
  _$jscoverage['recipe.unpack.js'][1015] = 0;
  _$jscoverage['recipe.unpack.js'][1016] = 0;
  _$jscoverage['recipe.unpack.js'][1017] = 0;
  _$jscoverage['recipe.unpack.js'][1018] = 0;
  _$jscoverage['recipe.unpack.js'][1020] = 0;
  _$jscoverage['recipe.unpack.js'][1021] = 0;
  _$jscoverage['recipe.unpack.js'][1026] = 0;
  _$jscoverage['recipe.unpack.js'][1027] = 0;
  _$jscoverage['recipe.unpack.js'][1032] = 0;
  _$jscoverage['recipe.unpack.js'][1033] = 0;
  _$jscoverage['recipe.unpack.js'][1034] = 0;
  _$jscoverage['recipe.unpack.js'][1037] = 0;
  _$jscoverage['recipe.unpack.js'][1038] = 0;
  _$jscoverage['recipe.unpack.js'][1039] = 0;
  _$jscoverage['recipe.unpack.js'][1041] = 0;
  _$jscoverage['recipe.unpack.js'][1043] = 0;
  _$jscoverage['recipe.unpack.js'][1046] = 0;
  _$jscoverage['recipe.unpack.js'][1047] = 0;
  _$jscoverage['recipe.unpack.js'][1048] = 0;
  _$jscoverage['recipe.unpack.js'][1051] = 0;
  _$jscoverage['recipe.unpack.js'][1052] = 0;
  _$jscoverage['recipe.unpack.js'][1053] = 0;
  _$jscoverage['recipe.unpack.js'][1054] = 0;
  _$jscoverage['recipe.unpack.js'][1058] = 0;
  _$jscoverage['recipe.unpack.js'][1060] = 0;
  _$jscoverage['recipe.unpack.js'][1062] = 0;
  _$jscoverage['recipe.unpack.js'][1065] = 0;
  _$jscoverage['recipe.unpack.js'][1066] = 0;
  _$jscoverage['recipe.unpack.js'][1067] = 0;
  _$jscoverage['recipe.unpack.js'][1068] = 0;
  _$jscoverage['recipe.unpack.js'][1070] = 0;
  _$jscoverage['recipe.unpack.js'][1073] = 0;
  _$jscoverage['recipe.unpack.js'][1081] = 0;
  _$jscoverage['recipe.unpack.js'][1082] = 0;
  _$jscoverage['recipe.unpack.js'][1083] = 0;
  _$jscoverage['recipe.unpack.js'][1086] = 0;
  _$jscoverage['recipe.unpack.js'][1087] = 0;
  _$jscoverage['recipe.unpack.js'][1089] = 0;
  _$jscoverage['recipe.unpack.js'][1092] = 0;
  _$jscoverage['recipe.unpack.js'][1094] = 0;
  _$jscoverage['recipe.unpack.js'][1098] = 0;
  _$jscoverage['recipe.unpack.js'][1100] = 0;
  _$jscoverage['recipe.unpack.js'][1107] = 0;
  _$jscoverage['recipe.unpack.js'][1108] = 0;
  _$jscoverage['recipe.unpack.js'][1109] = 0;
  _$jscoverage['recipe.unpack.js'][1111] = 0;
  _$jscoverage['recipe.unpack.js'][1114] = 0;
  _$jscoverage['recipe.unpack.js'][1117] = 0;
  _$jscoverage['recipe.unpack.js'][1120] = 0;
  _$jscoverage['recipe.unpack.js'][1125] = 0;
  _$jscoverage['recipe.unpack.js'][1126] = 0;
  _$jscoverage['recipe.unpack.js'][1128] = 0;
  _$jscoverage['recipe.unpack.js'][1132] = 0;
  _$jscoverage['recipe.unpack.js'][1135] = 0;
  _$jscoverage['recipe.unpack.js'][1138] = 0;
  _$jscoverage['recipe.unpack.js'][1147] = 0;
  _$jscoverage['recipe.unpack.js'][1148] = 0;
  _$jscoverage['recipe.unpack.js'][1149] = 0;
  _$jscoverage['recipe.unpack.js'][1150] = 0;
  _$jscoverage['recipe.unpack.js'][1151] = 0;
  _$jscoverage['recipe.unpack.js'][1153] = 0;
  _$jscoverage['recipe.unpack.js'][1156] = 0;
  _$jscoverage['recipe.unpack.js'][1168] = 0;
  _$jscoverage['recipe.unpack.js'][1169] = 0;
  _$jscoverage['recipe.unpack.js'][1170] = 0;
  _$jscoverage['recipe.unpack.js'][1173] = 0;
  _$jscoverage['recipe.unpack.js'][1175] = 0;
  _$jscoverage['recipe.unpack.js'][1189] = 0;
  _$jscoverage['recipe.unpack.js'][1190] = 0;
  _$jscoverage['recipe.unpack.js'][1191] = 0;
  _$jscoverage['recipe.unpack.js'][1194] = 0;
  _$jscoverage['recipe.unpack.js'][1195] = 0;
  _$jscoverage['recipe.unpack.js'][1196] = 0;
  _$jscoverage['recipe.unpack.js'][1226] = 0;
  _$jscoverage['recipe.unpack.js'][1227] = 0;
  _$jscoverage['recipe.unpack.js'][1228] = 0;
  _$jscoverage['recipe.unpack.js'][1231] = 0;
  _$jscoverage['recipe.unpack.js'][1232] = 0;
  _$jscoverage['recipe.unpack.js'][1233] = 0;
  _$jscoverage['recipe.unpack.js'][1234] = 0;
  _$jscoverage['recipe.unpack.js'][1235] = 0;
  _$jscoverage['recipe.unpack.js'][1237] = 0;
  _$jscoverage['recipe.unpack.js'][1239] = 0;
  _$jscoverage['recipe.unpack.js'][1240] = 0;
  _$jscoverage['recipe.unpack.js'][1242] = 0;
  _$jscoverage['recipe.unpack.js'][1246] = 0;
  _$jscoverage['recipe.unpack.js'][1247] = 0;
  _$jscoverage['recipe.unpack.js'][1249] = 0;
  _$jscoverage['recipe.unpack.js'][1250] = 0;
  _$jscoverage['recipe.unpack.js'][1252] = 0;
  _$jscoverage['recipe.unpack.js'][1255] = 0;
  _$jscoverage['recipe.unpack.js'][1258] = 0;
  _$jscoverage['recipe.unpack.js'][1259] = 0;
  _$jscoverage['recipe.unpack.js'][1260] = 0;
  _$jscoverage['recipe.unpack.js'][1261] = 0;
  _$jscoverage['recipe.unpack.js'][1272] = 0;
  _$jscoverage['recipe.unpack.js'][1273] = 0;
  _$jscoverage['recipe.unpack.js'][1274] = 0;
  _$jscoverage['recipe.unpack.js'][1302] = 0;
  _$jscoverage['recipe.unpack.js'][1303] = 0;
  _$jscoverage['recipe.unpack.js'][1304] = 0;
  _$jscoverage['recipe.unpack.js'][1322] = 0;
  _$jscoverage['recipe.unpack.js'][1323] = 0;
  _$jscoverage['recipe.unpack.js'][1324] = 0;
  _$jscoverage['recipe.unpack.js'][1325] = 0;
  _$jscoverage['recipe.unpack.js'][1326] = 0;
  _$jscoverage['recipe.unpack.js'][1338] = 0;
  _$jscoverage['recipe.unpack.js'][1339] = 0;
  _$jscoverage['recipe.unpack.js'][1340] = 0;
  _$jscoverage['recipe.unpack.js'][1343] = 0;
  _$jscoverage['recipe.unpack.js'][1344] = 0;
  _$jscoverage['recipe.unpack.js'][1345] = 0;
  _$jscoverage['recipe.unpack.js'][1346] = 0;
  _$jscoverage['recipe.unpack.js'][1347] = 0;
  _$jscoverage['recipe.unpack.js'][1349] = 0;
  _$jscoverage['recipe.unpack.js'][1358] = 0;
  _$jscoverage['recipe.unpack.js'][1359] = 0;
  _$jscoverage['recipe.unpack.js'][1362] = 0;
  _$jscoverage['recipe.unpack.js'][1363] = 0;
  _$jscoverage['recipe.unpack.js'][1373] = 0;
  _$jscoverage['recipe.unpack.js'][1374] = 0;
  _$jscoverage['recipe.unpack.js'][1377] = 0;
  _$jscoverage['recipe.unpack.js'][1378] = 0;
  _$jscoverage['recipe.unpack.js'][1387] = 0;
  _$jscoverage['recipe.unpack.js'][1389] = 0;
  _$jscoverage['recipe.unpack.js'][1392] = 0;
  _$jscoverage['recipe.unpack.js'][1394] = 0;
  _$jscoverage['recipe.unpack.js'][1410] = 0;
  _$jscoverage['recipe.unpack.js'][1412] = 0;
  _$jscoverage['recipe.unpack.js'][1415] = 0;
  _$jscoverage['recipe.unpack.js'][1417] = 0;
  _$jscoverage['recipe.unpack.js'][1427] = 0;
  _$jscoverage['recipe.unpack.js'][1430] = 0;
  _$jscoverage['recipe.unpack.js'][1433] = 0;
  _$jscoverage['recipe.unpack.js'][1436] = 0;
  _$jscoverage['recipe.unpack.js'][1444] = 0;
  _$jscoverage['recipe.unpack.js'][1445] = 0;
  _$jscoverage['recipe.unpack.js'][1448] = 0;
  _$jscoverage['recipe.unpack.js'][1449] = 0;
  _$jscoverage['recipe.unpack.js'][1457] = 0;
  _$jscoverage['recipe.unpack.js'][1459] = 0;
  _$jscoverage['recipe.unpack.js'][1462] = 0;
  _$jscoverage['recipe.unpack.js'][1463] = 0;
  _$jscoverage['recipe.unpack.js'][1472] = 0;
  _$jscoverage['recipe.unpack.js'][1473] = 0;
  _$jscoverage['recipe.unpack.js'][1474] = 0;
  _$jscoverage['recipe.unpack.js'][1475] = 0;
  _$jscoverage['recipe.unpack.js'][1476] = 0;
  _$jscoverage['recipe.unpack.js'][1482] = 0;
  _$jscoverage['recipe.unpack.js'][1483] = 0;
  _$jscoverage['recipe.unpack.js'][1484] = 0;
  _$jscoverage['recipe.unpack.js'][1485] = 0;
  _$jscoverage['recipe.unpack.js'][1486] = 0;
  _$jscoverage['recipe.unpack.js'][1499] = 0;
  _$jscoverage['recipe.unpack.js'][1500] = 0;
  _$jscoverage['recipe.unpack.js'][1503] = 0;
  _$jscoverage['recipe.unpack.js'][1504] = 0;
  _$jscoverage['recipe.unpack.js'][1516] = 0;
  _$jscoverage['recipe.unpack.js'][1517] = 0;
  _$jscoverage['recipe.unpack.js'][1518] = 0;
  _$jscoverage['recipe.unpack.js'][1519] = 0;
  _$jscoverage['recipe.unpack.js'][1520] = 0;
  _$jscoverage['recipe.unpack.js'][1521] = 0;
  _$jscoverage['recipe.unpack.js'][1522] = 0;
  _$jscoverage['recipe.unpack.js'][1523] = 0;
  _$jscoverage['recipe.unpack.js'][1527] = 0;
  _$jscoverage['recipe.unpack.js'][1529] = 0;
  _$jscoverage['recipe.unpack.js'][1530] = 0;
  _$jscoverage['recipe.unpack.js'][1533] = 0;
  _$jscoverage['recipe.unpack.js'][1534] = 0;
  _$jscoverage['recipe.unpack.js'][1535] = 0;
  _$jscoverage['recipe.unpack.js'][1540] = 0;
  _$jscoverage['recipe.unpack.js'][1545] = 0;
  _$jscoverage['recipe.unpack.js'][1546] = 0;
  _$jscoverage['recipe.unpack.js'][1548] = 0;
  _$jscoverage['recipe.unpack.js'][1552] = 0;
  _$jscoverage['recipe.unpack.js'][1553] = 0;
  _$jscoverage['recipe.unpack.js'][1565] = 0;
  _$jscoverage['recipe.unpack.js'][1566] = 0;
  _$jscoverage['recipe.unpack.js'][1567] = 0;
  _$jscoverage['recipe.unpack.js'][1568] = 0;
  _$jscoverage['recipe.unpack.js'][1569] = 0;
  _$jscoverage['recipe.unpack.js'][1570] = 0;
  _$jscoverage['recipe.unpack.js'][1572] = 0;
  _$jscoverage['recipe.unpack.js'][1577] = 0;
  _$jscoverage['recipe.unpack.js'][1578] = 0;
  _$jscoverage['recipe.unpack.js'][1584] = 0;
  _$jscoverage['recipe.unpack.js'][1585] = 0;
  _$jscoverage['recipe.unpack.js'][1586] = 0;
  _$jscoverage['recipe.unpack.js'][1596] = 0;
  _$jscoverage['recipe.unpack.js'][1597] = 0;
  _$jscoverage['recipe.unpack.js'][1598] = 0;
  _$jscoverage['recipe.unpack.js'][1599] = 0;
  _$jscoverage['recipe.unpack.js'][1600] = 0;
  _$jscoverage['recipe.unpack.js'][1601] = 0;
  _$jscoverage['recipe.unpack.js'][1603] = 0;
  _$jscoverage['recipe.unpack.js'][1617] = 0;
  _$jscoverage['recipe.unpack.js'][1619] = 0;
  _$jscoverage['recipe.unpack.js'][1622] = 0;
  _$jscoverage['recipe.unpack.js'][1624] = 0;
  _$jscoverage['recipe.unpack.js'][1635] = 0;
  _$jscoverage['recipe.unpack.js'][1636] = 0;
  _$jscoverage['recipe.unpack.js'][1637] = 0;
  _$jscoverage['recipe.unpack.js'][1640] = 0;
  _$jscoverage['recipe.unpack.js'][1641] = 0;
  _$jscoverage['recipe.unpack.js'][1655] = 0;
  _$jscoverage['recipe.unpack.js'][1657] = 0;
  _$jscoverage['recipe.unpack.js'][1660] = 0;
  _$jscoverage['recipe.unpack.js'][1662] = 0;
  _$jscoverage['recipe.unpack.js'][1663] = 0;
  _$jscoverage['recipe.unpack.js'][1664] = 0;
  _$jscoverage['recipe.unpack.js'][1665] = 0;
  _$jscoverage['recipe.unpack.js'][1669] = 0;
  _$jscoverage['recipe.unpack.js'][1670] = 0;
  _$jscoverage['recipe.unpack.js'][1681] = 0;
  _$jscoverage['recipe.unpack.js'][1682] = 0;
  _$jscoverage['recipe.unpack.js'][1685] = 0;
  _$jscoverage['recipe.unpack.js'][1686] = 0;
  _$jscoverage['recipe.unpack.js'][1689] = 0;
  _$jscoverage['recipe.unpack.js'][1690] = 0;
  _$jscoverage['recipe.unpack.js'][1691] = 0;
  _$jscoverage['recipe.unpack.js'][1692] = 0;
  _$jscoverage['recipe.unpack.js'][1694] = 0;
  _$jscoverage['recipe.unpack.js'][1700] = 0;
  _$jscoverage['recipe.unpack.js'][1704] = 0;
  _$jscoverage['recipe.unpack.js'][1705] = 0;
  _$jscoverage['recipe.unpack.js'][1708] = 0;
  _$jscoverage['recipe.unpack.js'][1720] = 0;
  _$jscoverage['recipe.unpack.js'][1721] = 0;
  _$jscoverage['recipe.unpack.js'][1724] = 0;
  _$jscoverage['recipe.unpack.js'][1725] = 0;
  _$jscoverage['recipe.unpack.js'][1726] = 0;
  _$jscoverage['recipe.unpack.js'][1727] = 0;
  _$jscoverage['recipe.unpack.js'][1730] = 0;
  _$jscoverage['recipe.unpack.js'][1731] = 0;
  _$jscoverage['recipe.unpack.js'][1732] = 0;
  _$jscoverage['recipe.unpack.js'][1734] = 0;
  _$jscoverage['recipe.unpack.js'][1735] = 0;
  _$jscoverage['recipe.unpack.js'][1738] = 0;
  _$jscoverage['recipe.unpack.js'][1750] = 0;
  _$jscoverage['recipe.unpack.js'][1751] = 0;
  _$jscoverage['recipe.unpack.js'][1752] = 0;
  _$jscoverage['recipe.unpack.js'][1753] = 0;
  _$jscoverage['recipe.unpack.js'][1755] = 0;
  _$jscoverage['recipe.unpack.js'][1758] = 0;
  _$jscoverage['recipe.unpack.js'][1759] = 0;
  _$jscoverage['recipe.unpack.js'][1760] = 0;
  _$jscoverage['recipe.unpack.js'][1761] = 0;
  _$jscoverage['recipe.unpack.js'][1762] = 0;
  _$jscoverage['recipe.unpack.js'][1764] = 0;
  _$jscoverage['recipe.unpack.js'][1777] = 0;
  _$jscoverage['recipe.unpack.js'][1778] = 0;
  _$jscoverage['recipe.unpack.js'][1781] = 0;
  _$jscoverage['recipe.unpack.js'][1782] = 0;
  _$jscoverage['recipe.unpack.js'][1783] = 0;
  _$jscoverage['recipe.unpack.js'][1784] = 0;
  _$jscoverage['recipe.unpack.js'][1785] = 0;
  _$jscoverage['recipe.unpack.js'][1786] = 0;
  _$jscoverage['recipe.unpack.js'][1798] = 0;
  _$jscoverage['recipe.unpack.js'][1799] = 0;
  _$jscoverage['recipe.unpack.js'][1800] = 0;
  _$jscoverage['recipe.unpack.js'][1803] = 0;
  _$jscoverage['recipe.unpack.js'][1804] = 0;
  _$jscoverage['recipe.unpack.js'][1805] = 0;
  _$jscoverage['recipe.unpack.js'][1806] = 0;
  _$jscoverage['recipe.unpack.js'][1807] = 0;
  _$jscoverage['recipe.unpack.js'][1808] = 0;
  _$jscoverage['recipe.unpack.js'][1819] = 0;
  _$jscoverage['recipe.unpack.js'][1821] = 0;
  _$jscoverage['recipe.unpack.js'][1822] = 0;
  _$jscoverage['recipe.unpack.js'][1823] = 0;
  _$jscoverage['recipe.unpack.js'][1824] = 0;
  _$jscoverage['recipe.unpack.js'][1825] = 0;
  _$jscoverage['recipe.unpack.js'][1826] = 0;
  _$jscoverage['recipe.unpack.js'][1827] = 0;
  _$jscoverage['recipe.unpack.js'][1831] = 0;
  _$jscoverage['recipe.unpack.js'][1833] = 0;
  _$jscoverage['recipe.unpack.js'][1834] = 0;
  _$jscoverage['recipe.unpack.js'][1835] = 0;
  _$jscoverage['recipe.unpack.js'][1838] = 0;
  _$jscoverage['recipe.unpack.js'][1839] = 0;
  _$jscoverage['recipe.unpack.js'][1840] = 0;
  _$jscoverage['recipe.unpack.js'][1841] = 0;
  _$jscoverage['recipe.unpack.js'][1842] = 0;
  _$jscoverage['recipe.unpack.js'][1843] = 0;
  _$jscoverage['recipe.unpack.js'][1844] = 0;
  _$jscoverage['recipe.unpack.js'][1845] = 0;
  _$jscoverage['recipe.unpack.js'][1847] = 0;
  _$jscoverage['recipe.unpack.js'][1848] = 0;
  _$jscoverage['recipe.unpack.js'][1852] = 0;
  _$jscoverage['recipe.unpack.js'][1853] = 0;
  _$jscoverage['recipe.unpack.js'][1854] = 0;
  _$jscoverage['recipe.unpack.js'][1855] = 0;
  _$jscoverage['recipe.unpack.js'][1867] = 0;
  _$jscoverage['recipe.unpack.js'][1869] = 0;
  _$jscoverage['recipe.unpack.js'][1872] = 0;
  _$jscoverage['recipe.unpack.js'][1874] = 0;
  _$jscoverage['recipe.unpack.js'][1875] = 0;
  _$jscoverage['recipe.unpack.js'][1876] = 0;
  _$jscoverage['recipe.unpack.js'][1877] = 0;
  _$jscoverage['recipe.unpack.js'][1878] = 0;
  _$jscoverage['recipe.unpack.js'][1891] = 0;
  _$jscoverage['recipe.unpack.js'][1894] = 0;
  _$jscoverage['recipe.unpack.js'][1895] = 0;
  _$jscoverage['recipe.unpack.js'][1896] = 0;
  _$jscoverage['recipe.unpack.js'][1897] = 0;
  _$jscoverage['recipe.unpack.js'][1898] = 0;
  _$jscoverage['recipe.unpack.js'][1901] = 0;
  _$jscoverage['recipe.unpack.js'][1904] = 0;
  _$jscoverage['recipe.unpack.js'][1905] = 0;
  _$jscoverage['recipe.unpack.js'][1906] = 0;
  _$jscoverage['recipe.unpack.js'][1907] = 0;
  _$jscoverage['recipe.unpack.js'][1908] = 0;
  _$jscoverage['recipe.unpack.js'][1921] = 0;
  _$jscoverage['recipe.unpack.js'][1922] = 0;
  _$jscoverage['recipe.unpack.js'][1923] = 0;
  _$jscoverage['recipe.unpack.js'][1926] = 0;
  _$jscoverage['recipe.unpack.js'][1927] = 0;
  _$jscoverage['recipe.unpack.js'][1928] = 0;
  _$jscoverage['recipe.unpack.js'][1929] = 0;
  _$jscoverage['recipe.unpack.js'][1930] = 0;
  _$jscoverage['recipe.unpack.js'][1933] = 0;
  _$jscoverage['recipe.unpack.js'][1934] = 0;
  _$jscoverage['recipe.unpack.js'][1938] = 0;
  _$jscoverage['recipe.unpack.js'][1943] = 0;
  _$jscoverage['recipe.unpack.js'][1945] = 0;
  _$jscoverage['recipe.unpack.js'][1958] = 0;
  _$jscoverage['recipe.unpack.js'][1959] = 0;
  _$jscoverage['recipe.unpack.js'][1961] = 0;
  _$jscoverage['recipe.unpack.js'][1972] = 0;
  _$jscoverage['recipe.unpack.js'][1981] = 0;
  _$jscoverage['recipe.unpack.js'][1982] = 0;
  _$jscoverage['recipe.unpack.js'][1988] = 0;
  _$jscoverage['recipe.unpack.js'][1992] = 0;
  _$jscoverage['recipe.unpack.js'][1993] = 0;
  _$jscoverage['recipe.unpack.js'][1996] = 0;
  _$jscoverage['recipe.unpack.js'][1997] = 0;
  _$jscoverage['recipe.unpack.js'][1998] = 0;
  _$jscoverage['recipe.unpack.js'][1999] = 0;
  _$jscoverage['recipe.unpack.js'][2001] = 0;
  _$jscoverage['recipe.unpack.js'][2002] = 0;
  _$jscoverage['recipe.unpack.js'][2003] = 0;
  _$jscoverage['recipe.unpack.js'][2010] = 0;
  _$jscoverage['recipe.unpack.js'][2016] = 0;
  _$jscoverage['recipe.unpack.js'][2017] = 0;
  _$jscoverage['recipe.unpack.js'][2022] = 0;
  _$jscoverage['recipe.unpack.js'][2023] = 0;
  _$jscoverage['recipe.unpack.js'][2024] = 0;
  _$jscoverage['recipe.unpack.js'][2027] = 0;
  _$jscoverage['recipe.unpack.js'][2031] = 0;
  _$jscoverage['recipe.unpack.js'][2037] = 0;
  _$jscoverage['recipe.unpack.js'][2038] = 0;
  _$jscoverage['recipe.unpack.js'][2039] = 0;
  _$jscoverage['recipe.unpack.js'][2044] = 0;
  _$jscoverage['recipe.unpack.js'][2045] = 0;
  _$jscoverage['recipe.unpack.js'][2050] = 0;
  _$jscoverage['recipe.unpack.js'][2053] = 0;
  _$jscoverage['recipe.unpack.js'][2058] = 0;
  _$jscoverage['recipe.unpack.js'][2060] = 0;
  _$jscoverage['recipe.unpack.js'][2080] = 0;
  _$jscoverage['recipe.unpack.js'][2088] = 0;
  _$jscoverage['recipe.unpack.js'][2091] = 0;
  _$jscoverage['recipe.unpack.js'][2092] = 0;
  _$jscoverage['recipe.unpack.js'][2093] = 0;
  _$jscoverage['recipe.unpack.js'][2096] = 0;
  _$jscoverage['recipe.unpack.js'][2097] = 0;
  _$jscoverage['recipe.unpack.js'][2098] = 0;
  _$jscoverage['recipe.unpack.js'][2101] = 0;
  _$jscoverage['recipe.unpack.js'][2104] = 0;
  _$jscoverage['recipe.unpack.js'][2107] = 0;
  _$jscoverage['recipe.unpack.js'][2117] = 0;
  _$jscoverage['recipe.unpack.js'][2118] = 0;
  _$jscoverage['recipe.unpack.js'][2119] = 0;
  _$jscoverage['recipe.unpack.js'][2122] = 0;
  _$jscoverage['recipe.unpack.js'][2125] = 0;
  _$jscoverage['recipe.unpack.js'][2129] = 0;
  _$jscoverage['recipe.unpack.js'][2130] = 0;
  _$jscoverage['recipe.unpack.js'][2131] = 0;
  _$jscoverage['recipe.unpack.js'][2135] = 0;
  _$jscoverage['recipe.unpack.js'][2136] = 0;
  _$jscoverage['recipe.unpack.js'][2140] = 0;
  _$jscoverage['recipe.unpack.js'][2143] = 0;
  _$jscoverage['recipe.unpack.js'][2144] = 0;
  _$jscoverage['recipe.unpack.js'][2145] = 0;
  _$jscoverage['recipe.unpack.js'][2148] = 0;
  _$jscoverage['recipe.unpack.js'][2149] = 0;
  _$jscoverage['recipe.unpack.js'][2150] = 0;
  _$jscoverage['recipe.unpack.js'][2153] = 0;
  _$jscoverage['recipe.unpack.js'][2156] = 0;
  _$jscoverage['recipe.unpack.js'][2161] = 0;
  _$jscoverage['recipe.unpack.js'][2163] = 0;
  _$jscoverage['recipe.unpack.js'][2164] = 0;
  _$jscoverage['recipe.unpack.js'][2165] = 0;
  _$jscoverage['recipe.unpack.js'][2169] = 0;
  _$jscoverage['recipe.unpack.js'][2170] = 0;
  _$jscoverage['recipe.unpack.js'][2177] = 0;
  _$jscoverage['recipe.unpack.js'][2181] = 0;
  _$jscoverage['recipe.unpack.js'][2182] = 0;
  _$jscoverage['recipe.unpack.js'][2183] = 0;
  _$jscoverage['recipe.unpack.js'][2187] = 0;
  _$jscoverage['recipe.unpack.js'][2188] = 0;
  _$jscoverage['recipe.unpack.js'][2192] = 0;
  _$jscoverage['recipe.unpack.js'][2193] = 0;
  _$jscoverage['recipe.unpack.js'][2199] = 0;
  _$jscoverage['recipe.unpack.js'][2200] = 0;
  _$jscoverage['recipe.unpack.js'][2201] = 0;
  _$jscoverage['recipe.unpack.js'][2204] = 0;
  _$jscoverage['recipe.unpack.js'][2205] = 0;
  _$jscoverage['recipe.unpack.js'][2208] = 0;
  _$jscoverage['recipe.unpack.js'][2209] = 0;
  _$jscoverage['recipe.unpack.js'][2212] = 0;
  _$jscoverage['recipe.unpack.js'][2214] = 0;
  _$jscoverage['recipe.unpack.js'][2218] = 0;
  _$jscoverage['recipe.unpack.js'][2223] = 0;
  _$jscoverage['recipe.unpack.js'][2225] = 0;
  _$jscoverage['recipe.unpack.js'][2227] = 0;
  _$jscoverage['recipe.unpack.js'][2228] = 0;
  _$jscoverage['recipe.unpack.js'][2231] = 0;
  _$jscoverage['recipe.unpack.js'][2232] = 0;
  _$jscoverage['recipe.unpack.js'][2235] = 0;
  _$jscoverage['recipe.unpack.js'][2244] = 0;
  _$jscoverage['recipe.unpack.js'][2246] = 0;
  _$jscoverage['recipe.unpack.js'][2247] = 0;
  _$jscoverage['recipe.unpack.js'][2248] = 0;
  _$jscoverage['recipe.unpack.js'][2249] = 0;
  _$jscoverage['recipe.unpack.js'][2258] = 0;
  _$jscoverage['recipe.unpack.js'][2266] = 0;
  _$jscoverage['recipe.unpack.js'][2267] = 0;
  _$jscoverage['recipe.unpack.js'][2268] = 0;
  _$jscoverage['recipe.unpack.js'][2271] = 0;
  _$jscoverage['recipe.unpack.js'][2272] = 0;
  _$jscoverage['recipe.unpack.js'][2275] = 0;
  _$jscoverage['recipe.unpack.js'][2276] = 0;
  _$jscoverage['recipe.unpack.js'][2278] = 0;
  _$jscoverage['recipe.unpack.js'][2279] = 0;
  _$jscoverage['recipe.unpack.js'][2280] = 0;
  _$jscoverage['recipe.unpack.js'][2284] = 0;
  _$jscoverage['recipe.unpack.js'][2288] = 0;
  _$jscoverage['recipe.unpack.js'][2289] = 0;
  _$jscoverage['recipe.unpack.js'][2291] = 0;
  _$jscoverage['recipe.unpack.js'][2292] = 0;
  _$jscoverage['recipe.unpack.js'][2296] = 0;
  _$jscoverage['recipe.unpack.js'][2297] = 0;
  _$jscoverage['recipe.unpack.js'][2299] = 0;
  _$jscoverage['recipe.unpack.js'][2300] = 0;
  _$jscoverage['recipe.unpack.js'][2302] = 0;
  _$jscoverage['recipe.unpack.js'][2303] = 0;
  _$jscoverage['recipe.unpack.js'][2308] = 0;
  _$jscoverage['recipe.unpack.js'][2310] = 0;
  _$jscoverage['recipe.unpack.js'][2312] = 0;
  _$jscoverage['recipe.unpack.js'][2313] = 0;
  _$jscoverage['recipe.unpack.js'][2314] = 0;
  _$jscoverage['recipe.unpack.js'][2318] = 0;
  _$jscoverage['recipe.unpack.js'][2319] = 0;
  _$jscoverage['recipe.unpack.js'][2320] = 0;
  _$jscoverage['recipe.unpack.js'][2323] = 0;
  _$jscoverage['recipe.unpack.js'][2324] = 0;
  _$jscoverage['recipe.unpack.js'][2325] = 0;
  _$jscoverage['recipe.unpack.js'][2327] = 0;
  _$jscoverage['recipe.unpack.js'][2330] = 0;
  _$jscoverage['recipe.unpack.js'][2332] = 0;
  _$jscoverage['recipe.unpack.js'][2333] = 0;
  _$jscoverage['recipe.unpack.js'][2334] = 0;
  _$jscoverage['recipe.unpack.js'][2337] = 0;
  _$jscoverage['recipe.unpack.js'][2338] = 0;
  _$jscoverage['recipe.unpack.js'][2343] = 0;
  _$jscoverage['recipe.unpack.js'][2344] = 0;
  _$jscoverage['recipe.unpack.js'][2345] = 0;
  _$jscoverage['recipe.unpack.js'][2353] = 0;
  _$jscoverage['recipe.unpack.js'][2354] = 0;
  _$jscoverage['recipe.unpack.js'][2356] = 0;
  _$jscoverage['recipe.unpack.js'][2357] = 0;
  _$jscoverage['recipe.unpack.js'][2358] = 0;
  _$jscoverage['recipe.unpack.js'][2359] = 0;
  _$jscoverage['recipe.unpack.js'][2360] = 0;
  _$jscoverage['recipe.unpack.js'][2361] = 0;
  _$jscoverage['recipe.unpack.js'][2364] = 0;
  _$jscoverage['recipe.unpack.js'][2365] = 0;
  _$jscoverage['recipe.unpack.js'][2366] = 0;
  _$jscoverage['recipe.unpack.js'][2367] = 0;
  _$jscoverage['recipe.unpack.js'][2370] = 0;
  _$jscoverage['recipe.unpack.js'][2371] = 0;
  _$jscoverage['recipe.unpack.js'][2380] = 0;
  _$jscoverage['recipe.unpack.js'][2382] = 0;
  _$jscoverage['recipe.unpack.js'][2384] = 0;
  _$jscoverage['recipe.unpack.js'][2385] = 0;
  _$jscoverage['recipe.unpack.js'][2390] = 0;
  _$jscoverage['recipe.unpack.js'][2393] = 0;
  _$jscoverage['recipe.unpack.js'][2396] = 0;
  _$jscoverage['recipe.unpack.js'][2397] = 0;
  _$jscoverage['recipe.unpack.js'][2443] = 0;
  _$jscoverage['recipe.unpack.js'][2445] = 0;
  _$jscoverage['recipe.unpack.js'][2448] = 0;
  _$jscoverage['recipe.unpack.js'][2459] = 0;
  _$jscoverage['recipe.unpack.js'][2461] = 0;
  _$jscoverage['recipe.unpack.js'][2467] = 0;
  _$jscoverage['recipe.unpack.js'][2469] = 0;
  _$jscoverage['recipe.unpack.js'][2471] = 0;
  _$jscoverage['recipe.unpack.js'][2472] = 0;
  _$jscoverage['recipe.unpack.js'][2473] = 0;
  _$jscoverage['recipe.unpack.js'][2476] = 0;
  _$jscoverage['recipe.unpack.js'][2477] = 0;
  _$jscoverage['recipe.unpack.js'][2478] = 0;
  _$jscoverage['recipe.unpack.js'][2479] = 0;
  _$jscoverage['recipe.unpack.js'][2484] = 0;
  _$jscoverage['recipe.unpack.js'][2486] = 0;
  _$jscoverage['recipe.unpack.js'][2487] = 0;
  _$jscoverage['recipe.unpack.js'][2488] = 0;
  _$jscoverage['recipe.unpack.js'][2492] = 0;
  _$jscoverage['recipe.unpack.js'][2495] = 0;
  _$jscoverage['recipe.unpack.js'][2496] = 0;
  _$jscoverage['recipe.unpack.js'][2503] = 0;
  _$jscoverage['recipe.unpack.js'][2504] = 0;
  _$jscoverage['recipe.unpack.js'][2508] = 0;
  _$jscoverage['recipe.unpack.js'][2509] = 0;
  _$jscoverage['recipe.unpack.js'][2512] = 0;
  _$jscoverage['recipe.unpack.js'][2518] = 0;
  _$jscoverage['recipe.unpack.js'][2521] = 0;
  _$jscoverage['recipe.unpack.js'][2525] = 0;
  _$jscoverage['recipe.unpack.js'][2527] = 0;
  _$jscoverage['recipe.unpack.js'][2528] = 0;
  _$jscoverage['recipe.unpack.js'][2531] = 0;
  _$jscoverage['recipe.unpack.js'][2532] = 0;
  _$jscoverage['recipe.unpack.js'][2533] = 0;
  _$jscoverage['recipe.unpack.js'][2534] = 0;
  _$jscoverage['recipe.unpack.js'][2537] = 0;
  _$jscoverage['recipe.unpack.js'][2540] = 0;
  _$jscoverage['recipe.unpack.js'][2541] = 0;
  _$jscoverage['recipe.unpack.js'][2542] = 0;
  _$jscoverage['recipe.unpack.js'][2546] = 0;
  _$jscoverage['recipe.unpack.js'][2558] = 0;
  _$jscoverage['recipe.unpack.js'][2559] = 0;
  _$jscoverage['recipe.unpack.js'][2560] = 0;
  _$jscoverage['recipe.unpack.js'][2561] = 0;
  _$jscoverage['recipe.unpack.js'][2567] = 0;
  _$jscoverage['recipe.unpack.js'][2568] = 0;
  _$jscoverage['recipe.unpack.js'][2570] = 0;
  _$jscoverage['recipe.unpack.js'][2574] = 0;
  _$jscoverage['recipe.unpack.js'][2576] = 0;
  _$jscoverage['recipe.unpack.js'][2577] = 0;
  _$jscoverage['recipe.unpack.js'][2578] = 0;
  _$jscoverage['recipe.unpack.js'][2581] = 0;
  _$jscoverage['recipe.unpack.js'][2588] = 0;
  _$jscoverage['recipe.unpack.js'][2591] = 0;
  _$jscoverage['recipe.unpack.js'][2592] = 0;
  _$jscoverage['recipe.unpack.js'][2593] = 0;
  _$jscoverage['recipe.unpack.js'][2596] = 0;
  _$jscoverage['recipe.unpack.js'][2599] = 0;
  _$jscoverage['recipe.unpack.js'][2605] = 0;
  _$jscoverage['recipe.unpack.js'][2606] = 0;
  _$jscoverage['recipe.unpack.js'][2607] = 0;
  _$jscoverage['recipe.unpack.js'][2609] = 0;
  _$jscoverage['recipe.unpack.js'][2610] = 0;
  _$jscoverage['recipe.unpack.js'][2614] = 0;
  _$jscoverage['recipe.unpack.js'][2617] = 0;
  _$jscoverage['recipe.unpack.js'][2630] = 0;
  _$jscoverage['recipe.unpack.js'][2631] = 0;
  _$jscoverage['recipe.unpack.js'][2633] = 0;
  _$jscoverage['recipe.unpack.js'][2634] = 0;
  _$jscoverage['recipe.unpack.js'][2638] = 0;
  _$jscoverage['recipe.unpack.js'][2639] = 0;
  _$jscoverage['recipe.unpack.js'][2640] = 0;
  _$jscoverage['recipe.unpack.js'][2641] = 0;
  _$jscoverage['recipe.unpack.js'][2642] = 0;
  _$jscoverage['recipe.unpack.js'][2643] = 0;
  _$jscoverage['recipe.unpack.js'][2644] = 0;
  _$jscoverage['recipe.unpack.js'][2645] = 0;
  _$jscoverage['recipe.unpack.js'][2647] = 0;
  _$jscoverage['recipe.unpack.js'][2648] = 0;
  _$jscoverage['recipe.unpack.js'][2652] = 0;
  _$jscoverage['recipe.unpack.js'][2653] = 0;
  _$jscoverage['recipe.unpack.js'][2654] = 0;
  _$jscoverage['recipe.unpack.js'][2655] = 0;
  _$jscoverage['recipe.unpack.js'][2656] = 0;
  _$jscoverage['recipe.unpack.js'][2657] = 0;
  _$jscoverage['recipe.unpack.js'][2659] = 0;
  _$jscoverage['recipe.unpack.js'][2662] = 0;
  _$jscoverage['recipe.unpack.js'][2663] = 0;
  _$jscoverage['recipe.unpack.js'][2664] = 0;
  _$jscoverage['recipe.unpack.js'][2666] = 0;
  _$jscoverage['recipe.unpack.js'][2668] = 0;
  _$jscoverage['recipe.unpack.js'][2673] = 0;
  _$jscoverage['recipe.unpack.js'][2677] = 0;
  _$jscoverage['recipe.unpack.js'][2679] = 0;
  _$jscoverage['recipe.unpack.js'][2680] = 0;
  _$jscoverage['recipe.unpack.js'][2681] = 0;
  _$jscoverage['recipe.unpack.js'][2684] = 0;
  _$jscoverage['recipe.unpack.js'][2685] = 0;
  _$jscoverage['recipe.unpack.js'][2686] = 0;
  _$jscoverage['recipe.unpack.js'][2691] = 0;
  _$jscoverage['recipe.unpack.js'][2692] = 0;
  _$jscoverage['recipe.unpack.js'][2695] = 0;
  _$jscoverage['recipe.unpack.js'][2703] = 0;
  _$jscoverage['recipe.unpack.js'][2704] = 0;
  _$jscoverage['recipe.unpack.js'][2705] = 0;
  _$jscoverage['recipe.unpack.js'][2706] = 0;
  _$jscoverage['recipe.unpack.js'][2707] = 0;
  _$jscoverage['recipe.unpack.js'][2708] = 0;
  _$jscoverage['recipe.unpack.js'][2710] = 0;
  _$jscoverage['recipe.unpack.js'][2716] = 0;
  _$jscoverage['recipe.unpack.js'][2722] = 0;
  _$jscoverage['recipe.unpack.js'][2723] = 0;
  _$jscoverage['recipe.unpack.js'][2725] = 0;
  _$jscoverage['recipe.unpack.js'][2727] = 0;
  _$jscoverage['recipe.unpack.js'][2728] = 0;
  _$jscoverage['recipe.unpack.js'][2729] = 0;
  _$jscoverage['recipe.unpack.js'][2730] = 0;
  _$jscoverage['recipe.unpack.js'][2731] = 0;
  _$jscoverage['recipe.unpack.js'][2732] = 0;
  _$jscoverage['recipe.unpack.js'][2733] = 0;
  _$jscoverage['recipe.unpack.js'][2739] = 0;
  _$jscoverage['recipe.unpack.js'][2742] = 0;
  _$jscoverage['recipe.unpack.js'][2745] = 0;
  _$jscoverage['recipe.unpack.js'][2746] = 0;
  _$jscoverage['recipe.unpack.js'][2747] = 0;
  _$jscoverage['recipe.unpack.js'][2750] = 0;
  _$jscoverage['recipe.unpack.js'][2752] = 0;
  _$jscoverage['recipe.unpack.js'][2755] = 0;
  _$jscoverage['recipe.unpack.js'][2756] = 0;
  _$jscoverage['recipe.unpack.js'][2757] = 0;
  _$jscoverage['recipe.unpack.js'][2760] = 0;
  _$jscoverage['recipe.unpack.js'][2762] = 0;
  _$jscoverage['recipe.unpack.js'][2765] = 0;
  _$jscoverage['recipe.unpack.js'][2770] = 0;
  _$jscoverage['recipe.unpack.js'][2771] = 0;
  _$jscoverage['recipe.unpack.js'][2772] = 0;
  _$jscoverage['recipe.unpack.js'][2773] = 0;
  _$jscoverage['recipe.unpack.js'][2775] = 0;
  _$jscoverage['recipe.unpack.js'][2781] = 0;
  _$jscoverage['recipe.unpack.js'][2782] = 0;
  _$jscoverage['recipe.unpack.js'][2784] = 0;
  _$jscoverage['recipe.unpack.js'][2786] = 0;
  _$jscoverage['recipe.unpack.js'][2787] = 0;
}
_$jscoverage['recipe.unpack.js'][9]++;
(function () {
  _$jscoverage['recipe.unpack.js'][10]++;
  var Q;
  _$jscoverage['recipe.unpack.js'][39]++;
  (function (definition) {
  _$jscoverage['recipe.unpack.js'][49]++;
  if (typeof bootstrap === "function") {
    _$jscoverage['recipe.unpack.js'][50]++;
    bootstrap("promise", definition);
  }
  else {
    _$jscoverage['recipe.unpack.js'][53]++;
    if (typeof exports === "object") {
      _$jscoverage['recipe.unpack.js'][54]++;
      module.exports = definition();
    }
    else {
      _$jscoverage['recipe.unpack.js'][57]++;
      if (typeof define === "function" && define.amd) {
        _$jscoverage['recipe.unpack.js'][58]++;
        define(definition);
      }
      else {
        _$jscoverage['recipe.unpack.js'][61]++;
        if (typeof ses !== "undefined") {
          _$jscoverage['recipe.unpack.js'][62]++;
          if (! ses.ok()) {
            _$jscoverage['recipe.unpack.js'][63]++;
            return;
          }
          else {
            _$jscoverage['recipe.unpack.js'][65]++;
            ses.makeQ = definition;
          }
        }
        else {
          _$jscoverage['recipe.unpack.js'][70]++;
          Q = definition();
        }
      }
    }
  }
})((function () {
  _$jscoverage['recipe.unpack.js'][74]++;
  "use strict";
  _$jscoverage['recipe.unpack.js'][76]++;
  var hasStacks = false;
  _$jscoverage['recipe.unpack.js'][77]++;
  try {
    _$jscoverage['recipe.unpack.js'][78]++;
    throw new Error();
  }
  catch (e) {
    _$jscoverage['recipe.unpack.js'][80]++;
    hasStacks = ! ! e.stack;
  }
  _$jscoverage['recipe.unpack.js'][85]++;
  var qStartingLine = captureLine();
  _$jscoverage['recipe.unpack.js'][86]++;
  var qFileName;
  _$jscoverage['recipe.unpack.js'][91]++;
  var noop = (function () {
});
  _$jscoverage['recipe.unpack.js'][95]++;
  var nextTick = (function () {
  _$jscoverage['recipe.unpack.js'][97]++;
  var head = {task: void 0, next: null};
  _$jscoverage['recipe.unpack.js'][98]++;
  var tail = head;
  _$jscoverage['recipe.unpack.js'][99]++;
  var flushing = false;
  _$jscoverage['recipe.unpack.js'][100]++;
  var requestTick = void 0;
  _$jscoverage['recipe.unpack.js'][101]++;
  var isNodeJS = false;
  _$jscoverage['recipe.unpack.js'][103]++;
  function flush() {
    _$jscoverage['recipe.unpack.js'][106]++;
    while (head.next) {
      _$jscoverage['recipe.unpack.js'][107]++;
      head = head.next;
      _$jscoverage['recipe.unpack.js'][108]++;
      var task = head.task;
      _$jscoverage['recipe.unpack.js'][109]++;
      head.task = void 0;
      _$jscoverage['recipe.unpack.js'][110]++;
      var domain = head.domain;
      _$jscoverage['recipe.unpack.js'][112]++;
      if (domain) {
        _$jscoverage['recipe.unpack.js'][113]++;
        head.domain = void 0;
        _$jscoverage['recipe.unpack.js'][114]++;
        domain.enter();
      }
      _$jscoverage['recipe.unpack.js'][117]++;
      try {
        _$jscoverage['recipe.unpack.js'][118]++;
        task();
      }
      catch (e) {
        _$jscoverage['recipe.unpack.js'][121]++;
        if (isNodeJS) {
          _$jscoverage['recipe.unpack.js'][128]++;
          if (domain) {
            _$jscoverage['recipe.unpack.js'][129]++;
            domain.exit();
          }
          _$jscoverage['recipe.unpack.js'][131]++;
          setTimeout(flush, 0);
          _$jscoverage['recipe.unpack.js'][132]++;
          if (domain) {
            _$jscoverage['recipe.unpack.js'][133]++;
            domain.enter();
          }
          _$jscoverage['recipe.unpack.js'][136]++;
          throw e;
        }
        else {
          _$jscoverage['recipe.unpack.js'][141]++;
          setTimeout((function () {
  _$jscoverage['recipe.unpack.js'][142]++;
  throw e;
}), 0);
        }
      }
      _$jscoverage['recipe.unpack.js'][147]++;
      if (domain) {
        _$jscoverage['recipe.unpack.js'][148]++;
        domain.exit();
      }
}
    _$jscoverage['recipe.unpack.js'][152]++;
    flushing = false;
}
  _$jscoverage['recipe.unpack.js'][155]++;
  nextTick = (function (task) {
  _$jscoverage['recipe.unpack.js'][156]++;
  tail = tail.next = {task: task, domain: isNodeJS && process.domain, next: null};
  _$jscoverage['recipe.unpack.js'][162]++;
  if (! flushing) {
    _$jscoverage['recipe.unpack.js'][163]++;
    flushing = true;
    _$jscoverage['recipe.unpack.js'][164]++;
    requestTick();
  }
});
  _$jscoverage['recipe.unpack.js'][168]++;
  if (typeof process !== "undefined" && process.nextTick) {
    _$jscoverage['recipe.unpack.js'][171]++;
    isNodeJS = true;
    _$jscoverage['recipe.unpack.js'][173]++;
    requestTick = (function () {
  _$jscoverage['recipe.unpack.js'][174]++;
  process.nextTick(flush);
});
  }
  else {
    _$jscoverage['recipe.unpack.js'][177]++;
    if (typeof setImmediate === "function") {
      _$jscoverage['recipe.unpack.js'][179]++;
      if (typeof window !== "undefined") {
        _$jscoverage['recipe.unpack.js'][180]++;
        requestTick = setImmediate.bind(window, flush);
      }
      else {
        _$jscoverage['recipe.unpack.js'][182]++;
        requestTick = (function () {
  _$jscoverage['recipe.unpack.js'][183]++;
  setImmediate(flush);
});
      }
    }
    else {
      _$jscoverage['recipe.unpack.js'][187]++;
      if (typeof MessageChannel !== "undefined") {
        _$jscoverage['recipe.unpack.js'][190]++;
        var channel = new MessageChannel();
        _$jscoverage['recipe.unpack.js'][193]++;
        channel.port1.onmessage = (function () {
  _$jscoverage['recipe.unpack.js'][194]++;
  requestTick = requestPortTick;
  _$jscoverage['recipe.unpack.js'][195]++;
  channel.port1.onmessage = flush;
  _$jscoverage['recipe.unpack.js'][196]++;
  flush();
});
        _$jscoverage['recipe.unpack.js'][198]++;
        var requestPortTick = (function () {
  _$jscoverage['recipe.unpack.js'][201]++;
  channel.port2.postMessage(0);
});
        _$jscoverage['recipe.unpack.js'][203]++;
        requestTick = (function () {
  _$jscoverage['recipe.unpack.js'][204]++;
  setTimeout(flush, 0);
  _$jscoverage['recipe.unpack.js'][205]++;
  requestPortTick();
});
      }
      else {
        _$jscoverage['recipe.unpack.js'][210]++;
        requestTick = (function () {
  _$jscoverage['recipe.unpack.js'][211]++;
  setTimeout(flush, 0);
});
      }
    }
  }
  _$jscoverage['recipe.unpack.js'][215]++;
  return nextTick;
})();
  _$jscoverage['recipe.unpack.js'][229]++;
  var call = Function.call;
  _$jscoverage['recipe.unpack.js'][230]++;
  function uncurryThis(f) {
    _$jscoverage['recipe.unpack.js'][231]++;
    return (function () {
  _$jscoverage['recipe.unpack.js'][232]++;
  return call.apply(f, arguments);
});
}
  _$jscoverage['recipe.unpack.js'][239]++;
  var array_slice = uncurryThis(Array.prototype.slice);
  _$jscoverage['recipe.unpack.js'][241]++;
  var array_reduce = uncurryThis(Array.prototype.reduce || (function (callback, basis) {
  _$jscoverage['recipe.unpack.js'][243]++;
  var index = 0, length = this.length;
  _$jscoverage['recipe.unpack.js'][246]++;
  if (arguments.length === 1) {
    _$jscoverage['recipe.unpack.js'][249]++;
    do {
      _$jscoverage['recipe.unpack.js'][250]++;
      if (index in this) {
        _$jscoverage['recipe.unpack.js'][251]++;
        basis = this[index++];
        _$jscoverage['recipe.unpack.js'][252]++;
        break;
      }
      _$jscoverage['recipe.unpack.js'][254]++;
      if (++index >= length) {
        _$jscoverage['recipe.unpack.js'][255]++;
        throw new TypeError();
      }
}
    while (true);
  }
  _$jscoverage['recipe.unpack.js'][260]++;
  for (; index < length; index++) {
    _$jscoverage['recipe.unpack.js'][262]++;
    if (index in this) {
      _$jscoverage['recipe.unpack.js'][263]++;
      basis = callback(basis, this[index], index);
    }
}
  _$jscoverage['recipe.unpack.js'][266]++;
  return basis;
}));
  _$jscoverage['recipe.unpack.js'][270]++;
  var array_indexOf = uncurryThis(Array.prototype.indexOf || (function (value) {
  _$jscoverage['recipe.unpack.js'][273]++;
  for (var i = 0; i < this.length; i++) {
    _$jscoverage['recipe.unpack.js'][274]++;
    if (this[i] === value) {
      _$jscoverage['recipe.unpack.js'][275]++;
      return i;
    }
}
  _$jscoverage['recipe.unpack.js'][278]++;
  return -1;
}));
  _$jscoverage['recipe.unpack.js'][282]++;
  var array_map = uncurryThis(Array.prototype.map || (function (callback, thisp) {
  _$jscoverage['recipe.unpack.js'][284]++;
  var self = this;
  _$jscoverage['recipe.unpack.js'][285]++;
  var collect = [];
  _$jscoverage['recipe.unpack.js'][286]++;
  array_reduce(self, (function (undefined, value, index) {
  _$jscoverage['recipe.unpack.js'][287]++;
  collect.push(callback.call(thisp, value, index, self));
}), void 0);
  _$jscoverage['recipe.unpack.js'][289]++;
  return collect;
}));
  _$jscoverage['recipe.unpack.js'][293]++;
  var object_create = Object.create || (function (prototype) {
  _$jscoverage['recipe.unpack.js'][294]++;
  function Type() {
}
  _$jscoverage['recipe.unpack.js'][295]++;
  Type.prototype = prototype;
  _$jscoverage['recipe.unpack.js'][296]++;
  return new Type();
});
  _$jscoverage['recipe.unpack.js'][299]++;
  var object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);
  _$jscoverage['recipe.unpack.js'][301]++;
  var object_keys = Object.keys || (function (object) {
  _$jscoverage['recipe.unpack.js'][302]++;
  var keys = [];
  _$jscoverage['recipe.unpack.js'][303]++;
  for (var key in object) {
    _$jscoverage['recipe.unpack.js'][304]++;
    if (object_hasOwnProperty(object, key)) {
      _$jscoverage['recipe.unpack.js'][305]++;
      keys.push(key);
    }
}
  _$jscoverage['recipe.unpack.js'][308]++;
  return keys;
});
  _$jscoverage['recipe.unpack.js'][311]++;
  var object_toString = uncurryThis(Object.prototype.toString);
  _$jscoverage['recipe.unpack.js'][313]++;
  function isObject(value) {
    _$jscoverage['recipe.unpack.js'][314]++;
    return value === Object(value);
}
  _$jscoverage['recipe.unpack.js'][320]++;
  function isStopIteration(exception) {
    _$jscoverage['recipe.unpack.js'][321]++;
    return (object_toString(exception) === "[object StopIteration]" || exception instanceof QReturnValue);
}
  _$jscoverage['recipe.unpack.js'][329]++;
  var QReturnValue;
  _$jscoverage['recipe.unpack.js'][330]++;
  if (typeof ReturnValue !== "undefined") {
    _$jscoverage['recipe.unpack.js'][331]++;
    QReturnValue = ReturnValue;
  }
  else {
    _$jscoverage['recipe.unpack.js'][333]++;
    QReturnValue = (function (value) {
  _$jscoverage['recipe.unpack.js'][334]++;
  this.value = value;
});
  }
  _$jscoverage['recipe.unpack.js'][345]++;
  var hasES6Generators;
  _$jscoverage['recipe.unpack.js'][346]++;
  try {
    _$jscoverage['recipe.unpack.js'][348]++;
    new Function("(function* (){ yield 1; })");
    _$jscoverage['recipe.unpack.js'][349]++;
    hasES6Generators = true;
  }
  catch (e) {
    _$jscoverage['recipe.unpack.js'][351]++;
    hasES6Generators = false;
  }
  _$jscoverage['recipe.unpack.js'][356]++;
  var STACK_JUMP_SEPARATOR = "From previous event:";
  _$jscoverage['recipe.unpack.js'][358]++;
  function makeStackTraceLong(error, promise) {
    _$jscoverage['recipe.unpack.js'][361]++;
    if (hasStacks && promise.stack && typeof error === "object" && error !== null && error.stack && error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1) {
      _$jscoverage['recipe.unpack.js'][368]++;
      var stacks = [];
      _$jscoverage['recipe.unpack.js'][369]++;
      for (var p = promise; ! ! p; p = p.source) {
        _$jscoverage['recipe.unpack.js'][370]++;
        if (p.stack) {
          _$jscoverage['recipe.unpack.js'][371]++;
          stacks.unshift(p.stack);
        }
}
      _$jscoverage['recipe.unpack.js'][374]++;
      stacks.unshift(error.stack);
      _$jscoverage['recipe.unpack.js'][376]++;
      var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
      _$jscoverage['recipe.unpack.js'][377]++;
      error.stack = filterStackString(concatedStacks);
    }
}
  _$jscoverage['recipe.unpack.js'][381]++;
  function filterStackString(stackString) {
    _$jscoverage['recipe.unpack.js'][382]++;
    var lines = stackString.split("\n");
    _$jscoverage['recipe.unpack.js'][383]++;
    var desiredLines = [];
    _$jscoverage['recipe.unpack.js'][384]++;
    for (var i = 0; i < lines.length; ++i) {
      _$jscoverage['recipe.unpack.js'][385]++;
      var line = lines[i];
      _$jscoverage['recipe.unpack.js'][387]++;
      if (! isInternalFrame(line) && ! isNodeFrame(line) && line) {
        _$jscoverage['recipe.unpack.js'][388]++;
        desiredLines.push(line);
      }
}
    _$jscoverage['recipe.unpack.js'][391]++;
    return desiredLines.join("\n");
}
  _$jscoverage['recipe.unpack.js'][394]++;
  function isNodeFrame(stackLine) {
    _$jscoverage['recipe.unpack.js'][395]++;
    return stackLine.indexOf("(module.js:") !== -1 || stackLine.indexOf("(node.js:") !== -1;
}
  _$jscoverage['recipe.unpack.js'][399]++;
  function getFileNameAndLineNumber(stackLine) {
    _$jscoverage['recipe.unpack.js'][402]++;
    var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
    _$jscoverage['recipe.unpack.js'][403]++;
    if (attempt1) {
      _$jscoverage['recipe.unpack.js'][404]++;
      return [attempt1[1], Number(attempt1[2])];
    }
    _$jscoverage['recipe.unpack.js'][408]++;
    var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
    _$jscoverage['recipe.unpack.js'][409]++;
    if (attempt2) {
      _$jscoverage['recipe.unpack.js'][410]++;
      return [attempt2[1], Number(attempt2[2])];
    }
    _$jscoverage['recipe.unpack.js'][414]++;
    var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
    _$jscoverage['recipe.unpack.js'][415]++;
    if (attempt3) {
      _$jscoverage['recipe.unpack.js'][416]++;
      return [attempt3[1], Number(attempt3[2])];
    }
}
  _$jscoverage['recipe.unpack.js'][420]++;
  function isInternalFrame(stackLine) {
    _$jscoverage['recipe.unpack.js'][421]++;
    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);
    _$jscoverage['recipe.unpack.js'][423]++;
    if (! fileNameAndLineNumber) {
      _$jscoverage['recipe.unpack.js'][424]++;
      return false;
    }
    _$jscoverage['recipe.unpack.js'][427]++;
    var fileName = fileNameAndLineNumber[0];
    _$jscoverage['recipe.unpack.js'][428]++;
    var lineNumber = fileNameAndLineNumber[1];
    _$jscoverage['recipe.unpack.js'][430]++;
    return fileName === qFileName && lineNumber >= qStartingLine && lineNumber <= qEndingLine;
}
  _$jscoverage['recipe.unpack.js'][437]++;
  function captureLine() {
    _$jscoverage['recipe.unpack.js'][438]++;
    if (! hasStacks) {
      _$jscoverage['recipe.unpack.js'][439]++;
      return;
    }
    _$jscoverage['recipe.unpack.js'][442]++;
    try {
      _$jscoverage['recipe.unpack.js'][443]++;
      throw new Error();
    }
    catch (e) {
      _$jscoverage['recipe.unpack.js'][445]++;
      var lines = e.stack.split("\n");
      _$jscoverage['recipe.unpack.js'][446]++;
      var firstLine = lines[0].indexOf("@") > 0? lines[1]: lines[2];
      _$jscoverage['recipe.unpack.js'][447]++;
      var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
      _$jscoverage['recipe.unpack.js'][448]++;
      if (! fileNameAndLineNumber) {
        _$jscoverage['recipe.unpack.js'][449]++;
        return;
      }
      _$jscoverage['recipe.unpack.js'][452]++;
      qFileName = fileNameAndLineNumber[0];
      _$jscoverage['recipe.unpack.js'][453]++;
      return fileNameAndLineNumber[1];
    }
}
  _$jscoverage['recipe.unpack.js'][457]++;
  function deprecate(callback, name, alternative) {
    _$jscoverage['recipe.unpack.js'][458]++;
    return (function () {
  _$jscoverage['recipe.unpack.js'][459]++;
  if (typeof console !== "undefined" && typeof console.warn === "function") {
    _$jscoverage['recipe.unpack.js'][461]++;
    console.warn(name + " is deprecated, use " + alternative + " instead.", new Error("").stack);
  }
  _$jscoverage['recipe.unpack.js'][464]++;
  return callback.apply(callback, arguments);
});
}
  _$jscoverage['recipe.unpack.js'][476]++;
  function Q(value) {
    _$jscoverage['recipe.unpack.js'][480]++;
    if (isPromise(value)) {
      _$jscoverage['recipe.unpack.js'][481]++;
      return value;
    }
    _$jscoverage['recipe.unpack.js'][485]++;
    if (isPromiseAlike(value)) {
      _$jscoverage['recipe.unpack.js'][486]++;
      return coerce(value);
    }
    else {
      _$jscoverage['recipe.unpack.js'][488]++;
      return fulfill(value);
    }
}
  _$jscoverage['recipe.unpack.js'][491]++;
  Q.resolve = Q;
  _$jscoverage['recipe.unpack.js'][497]++;
  Q.nextTick = nextTick;
  _$jscoverage['recipe.unpack.js'][502]++;
  Q.longStackSupport = false;
  _$jscoverage['recipe.unpack.js'][514]++;
  Q.defer = defer;
  _$jscoverage['recipe.unpack.js'][515]++;
  function defer() {
    _$jscoverage['recipe.unpack.js'][522]++;
    var messages = [], progressListeners = [], resolvedPromise;
    _$jscoverage['recipe.unpack.js'][524]++;
    var deferred = object_create(defer.prototype);
    _$jscoverage['recipe.unpack.js'][525]++;
    var promise = object_create(Promise.prototype);
    _$jscoverage['recipe.unpack.js'][527]++;
    promise.promiseDispatch = (function (resolve, op, operands) {
  _$jscoverage['recipe.unpack.js'][528]++;
  var args = array_slice(arguments);
  _$jscoverage['recipe.unpack.js'][529]++;
  if (messages) {
    _$jscoverage['recipe.unpack.js'][530]++;
    messages.push(args);
    _$jscoverage['recipe.unpack.js'][531]++;
    if (op === "when" && operands[1]) {
      _$jscoverage['recipe.unpack.js'][532]++;
      progressListeners.push(operands[1]);
    }
  }
  else {
    _$jscoverage['recipe.unpack.js'][535]++;
    nextTick((function () {
  _$jscoverage['recipe.unpack.js'][536]++;
  resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
}));
  }
});
    _$jscoverage['recipe.unpack.js'][542]++;
    promise.valueOf = deprecate((function () {
  _$jscoverage['recipe.unpack.js'][543]++;
  if (messages) {
    _$jscoverage['recipe.unpack.js'][544]++;
    return promise;
  }
  _$jscoverage['recipe.unpack.js'][546]++;
  var nearerValue = nearer(resolvedPromise);
  _$jscoverage['recipe.unpack.js'][547]++;
  if (isPromise(nearerValue)) {
    _$jscoverage['recipe.unpack.js'][548]++;
    resolvedPromise = nearerValue;
  }
  _$jscoverage['recipe.unpack.js'][550]++;
  return nearerValue;
}), "valueOf", "inspect");
    _$jscoverage['recipe.unpack.js'][553]++;
    promise.inspect = (function () {
  _$jscoverage['recipe.unpack.js'][554]++;
  if (! resolvedPromise) {
    _$jscoverage['recipe.unpack.js'][555]++;
    return ({state: "pending"});
  }
  _$jscoverage['recipe.unpack.js'][557]++;
  return resolvedPromise.inspect();
});
    _$jscoverage['recipe.unpack.js'][560]++;
    if (Q.longStackSupport && hasStacks) {
      _$jscoverage['recipe.unpack.js'][561]++;
      try {
        _$jscoverage['recipe.unpack.js'][562]++;
        throw new Error();
      }
      catch (e) {
        _$jscoverage['recipe.unpack.js'][570]++;
        promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
      }
    }
    _$jscoverage['recipe.unpack.js'][578]++;
    function become(newPromise) {
      _$jscoverage['recipe.unpack.js'][579]++;
      resolvedPromise = newPromise;
      _$jscoverage['recipe.unpack.js'][580]++;
      promise.source = newPromise;
      _$jscoverage['recipe.unpack.js'][582]++;
      array_reduce(messages, (function (undefined, message) {
  _$jscoverage['recipe.unpack.js'][583]++;
  nextTick((function () {
  _$jscoverage['recipe.unpack.js'][584]++;
  newPromise.promiseDispatch.apply(newPromise, message);
}));
}), void 0);
      _$jscoverage['recipe.unpack.js'][588]++;
      messages = void 0;
      _$jscoverage['recipe.unpack.js'][589]++;
      progressListeners = void 0;
}
    _$jscoverage['recipe.unpack.js'][592]++;
    deferred.promise = promise;
    _$jscoverage['recipe.unpack.js'][593]++;
    deferred.resolve = (function (value) {
  _$jscoverage['recipe.unpack.js'][594]++;
  if (resolvedPromise) {
    _$jscoverage['recipe.unpack.js'][595]++;
    return;
  }
  _$jscoverage['recipe.unpack.js'][598]++;
  become(Q(value));
});
    _$jscoverage['recipe.unpack.js'][601]++;
    deferred.fulfill = (function (value) {
  _$jscoverage['recipe.unpack.js'][602]++;
  if (resolvedPromise) {
    _$jscoverage['recipe.unpack.js'][603]++;
    return;
  }
  _$jscoverage['recipe.unpack.js'][606]++;
  become(fulfill(value));
});
    _$jscoverage['recipe.unpack.js'][608]++;
    deferred.reject = (function (reason) {
  _$jscoverage['recipe.unpack.js'][609]++;
  if (resolvedPromise) {
    _$jscoverage['recipe.unpack.js'][610]++;
    return;
  }
  _$jscoverage['recipe.unpack.js'][613]++;
  become(reject(reason));
});
    _$jscoverage['recipe.unpack.js'][615]++;
    deferred.notify = (function (progress) {
  _$jscoverage['recipe.unpack.js'][616]++;
  if (resolvedPromise) {
    _$jscoverage['recipe.unpack.js'][617]++;
    return;
  }
  _$jscoverage['recipe.unpack.js'][620]++;
  array_reduce(progressListeners, (function (undefined, progressListener) {
  _$jscoverage['recipe.unpack.js'][621]++;
  nextTick((function () {
  _$jscoverage['recipe.unpack.js'][622]++;
  progressListener(progress);
}));
}), void 0);
});
    _$jscoverage['recipe.unpack.js'][627]++;
    return deferred;
}
  _$jscoverage['recipe.unpack.js'][635]++;
  defer.prototype.makeNodeResolver = (function () {
  _$jscoverage['recipe.unpack.js'][636]++;
  var self = this;
  _$jscoverage['recipe.unpack.js'][637]++;
  return (function (error, value) {
  _$jscoverage['recipe.unpack.js'][638]++;
  if (error) {
    _$jscoverage['recipe.unpack.js'][639]++;
    self.reject(error);
  }
  else {
    _$jscoverage['recipe.unpack.js'][640]++;
    if (arguments.length > 2) {
      _$jscoverage['recipe.unpack.js'][641]++;
      self.resolve(array_slice(arguments, 1));
    }
    else {
      _$jscoverage['recipe.unpack.js'][643]++;
      self.resolve(value);
    }
  }
});
});
  _$jscoverage['recipe.unpack.js'][654]++;
  Q.promise = promise;
  _$jscoverage['recipe.unpack.js'][655]++;
  function promise(resolver) {
    _$jscoverage['recipe.unpack.js'][656]++;
    if (typeof resolver !== "function") {
      _$jscoverage['recipe.unpack.js'][657]++;
      throw new TypeError("resolver must be a function.");
    }
    _$jscoverage['recipe.unpack.js'][659]++;
    var deferred = defer();
    _$jscoverage['recipe.unpack.js'][660]++;
    try {
      _$jscoverage['recipe.unpack.js'][661]++;
      resolver(deferred.resolve, deferred.reject, deferred.notify);
    }
    catch (reason) {
      _$jscoverage['recipe.unpack.js'][663]++;
      deferred.reject(reason);
    }
    _$jscoverage['recipe.unpack.js'][665]++;
    return deferred.promise;
}
  _$jscoverage['recipe.unpack.js'][671]++;
  Q.passByCopy = (function (object) {
  _$jscoverage['recipe.unpack.js'][674]++;
  return object;
});
  _$jscoverage['recipe.unpack.js'][677]++;
  Promise.prototype.passByCopy = (function () {
  _$jscoverage['recipe.unpack.js'][680]++;
  return this;
});
  _$jscoverage['recipe.unpack.js'][692]++;
  Q.join = (function (x, y) {
  _$jscoverage['recipe.unpack.js'][693]++;
  return Q(x).join(y);
});
  _$jscoverage['recipe.unpack.js'][696]++;
  Promise.prototype.join = (function (that) {
  _$jscoverage['recipe.unpack.js'][697]++;
  return Q([this, that]).spread((function (x, y) {
  _$jscoverage['recipe.unpack.js'][698]++;
  if (x === y) {
    _$jscoverage['recipe.unpack.js'][700]++;
    return x;
  }
  else {
    _$jscoverage['recipe.unpack.js'][702]++;
    throw new Error("Can't join: not the same: " + x + " " + y);
  }
}));
});
  _$jscoverage['recipe.unpack.js'][712]++;
  Q.race = race;
  _$jscoverage['recipe.unpack.js'][713]++;
  function race(answerPs) {
    _$jscoverage['recipe.unpack.js'][714]++;
    return promise((function (resolve, reject) {
  _$jscoverage['recipe.unpack.js'][720]++;
  for (var i = 0, len = answerPs.length; i < len; i++) {
    _$jscoverage['recipe.unpack.js'][721]++;
    Q(answerPs[i]).then(resolve, reject);
}
}));
}
  _$jscoverage['recipe.unpack.js'][726]++;
  Promise.prototype.race = (function () {
  _$jscoverage['recipe.unpack.js'][727]++;
  return this.then(Q.race);
});
  _$jscoverage['recipe.unpack.js'][741]++;
  Q.makePromise = Promise;
  _$jscoverage['recipe.unpack.js'][742]++;
  function Promise(descriptor, fallback, inspect) {
    _$jscoverage['recipe.unpack.js'][743]++;
    if (fallback === void 0) {
      _$jscoverage['recipe.unpack.js'][744]++;
      fallback = (function (op) {
  _$jscoverage['recipe.unpack.js'][745]++;
  return reject(new Error("Promise does not support operation: " + op));
});
    }
    _$jscoverage['recipe.unpack.js'][750]++;
    if (inspect === void 0) {
      _$jscoverage['recipe.unpack.js'][751]++;
      inspect = (function () {
  _$jscoverage['recipe.unpack.js'][752]++;
  return ({state: "unknown"});
});
    }
    _$jscoverage['recipe.unpack.js'][756]++;
    var promise = object_create(Promise.prototype);
    _$jscoverage['recipe.unpack.js'][758]++;
    promise.promiseDispatch = (function (resolve, op, args) {
  _$jscoverage['recipe.unpack.js'][759]++;
  var result;
  _$jscoverage['recipe.unpack.js'][760]++;
  try {
    _$jscoverage['recipe.unpack.js'][761]++;
    if (descriptor[op]) {
      _$jscoverage['recipe.unpack.js'][762]++;
      result = descriptor[op].apply(promise, args);
    }
    else {
      _$jscoverage['recipe.unpack.js'][764]++;
      result = fallback.call(promise, op, args);
    }
  }
  catch (exception) {
    _$jscoverage['recipe.unpack.js'][767]++;
    result = reject(exception);
  }
  _$jscoverage['recipe.unpack.js'][769]++;
  if (resolve) {
    _$jscoverage['recipe.unpack.js'][770]++;
    resolve(result);
  }
});
    _$jscoverage['recipe.unpack.js'][774]++;
    promise.inspect = inspect;
    _$jscoverage['recipe.unpack.js'][777]++;
    if (inspect) {
      _$jscoverage['recipe.unpack.js'][778]++;
      var inspected = inspect();
      _$jscoverage['recipe.unpack.js'][779]++;
      if (inspected.state === "rejected") {
        _$jscoverage['recipe.unpack.js'][780]++;
        promise.exception = inspected.reason;
      }
      _$jscoverage['recipe.unpack.js'][783]++;
      promise.valueOf = deprecate((function () {
  _$jscoverage['recipe.unpack.js'][784]++;
  var inspected = inspect();
  _$jscoverage['recipe.unpack.js'][785]++;
  if (inspected.state === "pending" || inspected.state === "rejected") {
    _$jscoverage['recipe.unpack.js'][787]++;
    return promise;
  }
  _$jscoverage['recipe.unpack.js'][789]++;
  return inspected.value;
}));
    }
    _$jscoverage['recipe.unpack.js'][793]++;
    return promise;
}
  _$jscoverage['recipe.unpack.js'][796]++;
  Promise.prototype.toString = (function () {
  _$jscoverage['recipe.unpack.js'][797]++;
  return "[object Promise]";
});
  _$jscoverage['recipe.unpack.js'][800]++;
  Promise.prototype.then = (function (fulfilled, rejected, progressed) {
  _$jscoverage['recipe.unpack.js'][801]++;
  var self = this;
  _$jscoverage['recipe.unpack.js'][802]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][803]++;
  var done = false;
  _$jscoverage['recipe.unpack.js'][806]++;
  function _fulfilled(value) {
    _$jscoverage['recipe.unpack.js'][807]++;
    try {
      _$jscoverage['recipe.unpack.js'][808]++;
      return typeof fulfilled === "function"? fulfilled(value): value;
    }
    catch (exception) {
      _$jscoverage['recipe.unpack.js'][810]++;
      return reject(exception);
    }
}
  _$jscoverage['recipe.unpack.js'][814]++;
  function _rejected(exception) {
    _$jscoverage['recipe.unpack.js'][815]++;
    if (typeof rejected === "function") {
      _$jscoverage['recipe.unpack.js'][816]++;
      makeStackTraceLong(exception, self);
      _$jscoverage['recipe.unpack.js'][817]++;
      try {
        _$jscoverage['recipe.unpack.js'][818]++;
        return rejected(exception);
      }
      catch (newException) {
        _$jscoverage['recipe.unpack.js'][820]++;
        return reject(newException);
      }
    }
    _$jscoverage['recipe.unpack.js'][823]++;
    return reject(exception);
}
  _$jscoverage['recipe.unpack.js'][826]++;
  function _progressed(value) {
    _$jscoverage['recipe.unpack.js'][827]++;
    return typeof progressed === "function"? progressed(value): value;
}
  _$jscoverage['recipe.unpack.js'][830]++;
  nextTick((function () {
  _$jscoverage['recipe.unpack.js'][831]++;
  self.promiseDispatch((function (value) {
  _$jscoverage['recipe.unpack.js'][832]++;
  if (done) {
    _$jscoverage['recipe.unpack.js'][833]++;
    return;
  }
  _$jscoverage['recipe.unpack.js'][835]++;
  done = true;
  _$jscoverage['recipe.unpack.js'][837]++;
  deferred.resolve(_fulfilled(value));
}), "when", [(function (exception) {
  _$jscoverage['recipe.unpack.js'][839]++;
  if (done) {
    _$jscoverage['recipe.unpack.js'][840]++;
    return;
  }
  _$jscoverage['recipe.unpack.js'][842]++;
  done = true;
  _$jscoverage['recipe.unpack.js'][844]++;
  deferred.resolve(_rejected(exception));
})]);
}));
  _$jscoverage['recipe.unpack.js'][849]++;
  self.promiseDispatch(void 0, "when", [void 0, (function (value) {
  _$jscoverage['recipe.unpack.js'][850]++;
  var newValue;
  _$jscoverage['recipe.unpack.js'][851]++;
  var threw = false;
  _$jscoverage['recipe.unpack.js'][852]++;
  try {
    _$jscoverage['recipe.unpack.js'][853]++;
    newValue = _progressed(value);
  }
  catch (e) {
    _$jscoverage['recipe.unpack.js'][855]++;
    threw = true;
    _$jscoverage['recipe.unpack.js'][856]++;
    if (Q.onerror) {
      _$jscoverage['recipe.unpack.js'][857]++;
      Q.onerror(e);
    }
    else {
      _$jscoverage['recipe.unpack.js'][859]++;
      throw e;
    }
  }
  _$jscoverage['recipe.unpack.js'][863]++;
  if (! threw) {
    _$jscoverage['recipe.unpack.js'][864]++;
    deferred.notify(newValue);
  }
})]);
  _$jscoverage['recipe.unpack.js'][868]++;
  return deferred.promise;
});
  _$jscoverage['recipe.unpack.js'][887]++;
  Q.when = when;
  _$jscoverage['recipe.unpack.js'][888]++;
  function when(value, fulfilled, rejected, progressed) {
    _$jscoverage['recipe.unpack.js'][889]++;
    return Q(value).then(fulfilled, rejected, progressed);
}
  _$jscoverage['recipe.unpack.js'][892]++;
  Promise.prototype.thenResolve = (function (value) {
  _$jscoverage['recipe.unpack.js'][893]++;
  return this.then((function () {
  _$jscoverage['recipe.unpack.js'][893]++;
  return value;
}));
});
  _$jscoverage['recipe.unpack.js'][896]++;
  Q.thenResolve = (function (promise, value) {
  _$jscoverage['recipe.unpack.js'][897]++;
  return Q(promise).thenResolve(value);
});
  _$jscoverage['recipe.unpack.js'][900]++;
  Promise.prototype.thenReject = (function (reason) {
  _$jscoverage['recipe.unpack.js'][901]++;
  return this.then((function () {
  _$jscoverage['recipe.unpack.js'][901]++;
  throw reason;
}));
});
  _$jscoverage['recipe.unpack.js'][904]++;
  Q.thenReject = (function (promise, reason) {
  _$jscoverage['recipe.unpack.js'][905]++;
  return Q(promise).thenReject(reason);
});
  _$jscoverage['recipe.unpack.js'][919]++;
  Q.nearer = nearer;
  _$jscoverage['recipe.unpack.js'][920]++;
  function nearer(value) {
    _$jscoverage['recipe.unpack.js'][921]++;
    if (isPromise(value)) {
      _$jscoverage['recipe.unpack.js'][922]++;
      var inspected = value.inspect();
      _$jscoverage['recipe.unpack.js'][923]++;
      if (inspected.state === "fulfilled") {
        _$jscoverage['recipe.unpack.js'][924]++;
        return inspected.value;
      }
    }
    _$jscoverage['recipe.unpack.js'][927]++;
    return value;
}
  _$jscoverage['recipe.unpack.js'][934]++;
  Q.isPromise = isPromise;
  _$jscoverage['recipe.unpack.js'][935]++;
  function isPromise(object) {
    _$jscoverage['recipe.unpack.js'][936]++;
    return isObject(object) && typeof object.promiseDispatch === "function" && typeof object.inspect === "function";
}
  _$jscoverage['recipe.unpack.js'][941]++;
  Q.isPromiseAlike = isPromiseAlike;
  _$jscoverage['recipe.unpack.js'][942]++;
  function isPromiseAlike(object) {
    _$jscoverage['recipe.unpack.js'][943]++;
    return isObject(object) && typeof object.then === "function";
}
  _$jscoverage['recipe.unpack.js'][950]++;
  Q.isPending = isPending;
  _$jscoverage['recipe.unpack.js'][951]++;
  function isPending(object) {
    _$jscoverage['recipe.unpack.js'][952]++;
    return isPromise(object) && object.inspect().state === "pending";
}
  _$jscoverage['recipe.unpack.js'][955]++;
  Promise.prototype.isPending = (function () {
  _$jscoverage['recipe.unpack.js'][956]++;
  return this.inspect().state === "pending";
});
  _$jscoverage['recipe.unpack.js'][963]++;
  Q.isFulfilled = isFulfilled;
  _$jscoverage['recipe.unpack.js'][964]++;
  function isFulfilled(object) {
    _$jscoverage['recipe.unpack.js'][965]++;
    return ! isPromise(object) || object.inspect().state === "fulfilled";
}
  _$jscoverage['recipe.unpack.js'][968]++;
  Promise.prototype.isFulfilled = (function () {
  _$jscoverage['recipe.unpack.js'][969]++;
  return this.inspect().state === "fulfilled";
});
  _$jscoverage['recipe.unpack.js'][975]++;
  Q.isRejected = isRejected;
  _$jscoverage['recipe.unpack.js'][976]++;
  function isRejected(object) {
    _$jscoverage['recipe.unpack.js'][977]++;
    return isPromise(object) && object.inspect().state === "rejected";
}
  _$jscoverage['recipe.unpack.js'][980]++;
  Promise.prototype.isRejected = (function () {
  _$jscoverage['recipe.unpack.js'][981]++;
  return this.inspect().state === "rejected";
});
  _$jscoverage['recipe.unpack.js'][990]++;
  var unhandledReasons = [];
  _$jscoverage['recipe.unpack.js'][991]++;
  var unhandledRejections = [];
  _$jscoverage['recipe.unpack.js'][992]++;
  var unhandledReasonsDisplayed = false;
  _$jscoverage['recipe.unpack.js'][993]++;
  var trackUnhandledRejections = true;
  _$jscoverage['recipe.unpack.js'][994]++;
  function displayUnhandledReasons() {
    _$jscoverage['recipe.unpack.js'][995]++;
    if (! unhandledReasonsDisplayed && typeof window !== "undefined" && ! window.Touch && window.console) {
      _$jscoverage['recipe.unpack.js'][1001]++;
      console.warn("[Q] Unhandled rejection reasons (should be empty):", unhandledReasons);
    }
    _$jscoverage['recipe.unpack.js'][1005]++;
    unhandledReasonsDisplayed = true;
}
  _$jscoverage['recipe.unpack.js'][1008]++;
  function logUnhandledReasons() {
    _$jscoverage['recipe.unpack.js'][1009]++;
    for (var i = 0; i < unhandledReasons.length; i++) {
      _$jscoverage['recipe.unpack.js'][1010]++;
      var reason = unhandledReasons[i];
      _$jscoverage['recipe.unpack.js'][1011]++;
      console.warn("Unhandled rejection reason:", reason);
}
}
  _$jscoverage['recipe.unpack.js'][1015]++;
  function resetUnhandledRejections() {
    _$jscoverage['recipe.unpack.js'][1016]++;
    unhandledReasons.length = 0;
    _$jscoverage['recipe.unpack.js'][1017]++;
    unhandledRejections.length = 0;
    _$jscoverage['recipe.unpack.js'][1018]++;
    unhandledReasonsDisplayed = false;
    _$jscoverage['recipe.unpack.js'][1020]++;
    if (! trackUnhandledRejections) {
      _$jscoverage['recipe.unpack.js'][1021]++;
      trackUnhandledRejections = true;
      _$jscoverage['recipe.unpack.js'][1026]++;
      if (typeof process !== "undefined" && process.on) {
        _$jscoverage['recipe.unpack.js'][1027]++;
        process.on("exit", logUnhandledReasons);
      }
    }
}
  _$jscoverage['recipe.unpack.js'][1032]++;
  function trackRejection(promise, reason) {
    _$jscoverage['recipe.unpack.js'][1033]++;
    if (! trackUnhandledRejections) {
      _$jscoverage['recipe.unpack.js'][1034]++;
      return;
    }
    _$jscoverage['recipe.unpack.js'][1037]++;
    unhandledRejections.push(promise);
    _$jscoverage['recipe.unpack.js'][1038]++;
    if (reason && typeof reason.stack !== "undefined") {
      _$jscoverage['recipe.unpack.js'][1039]++;
      unhandledReasons.push(reason.stack);
    }
    else {
      _$jscoverage['recipe.unpack.js'][1041]++;
      unhandledReasons.push("(no stack) " + reason);
    }
    _$jscoverage['recipe.unpack.js'][1043]++;
    displayUnhandledReasons();
}
  _$jscoverage['recipe.unpack.js'][1046]++;
  function untrackRejection(promise) {
    _$jscoverage['recipe.unpack.js'][1047]++;
    if (! trackUnhandledRejections) {
      _$jscoverage['recipe.unpack.js'][1048]++;
      return;
    }
    _$jscoverage['recipe.unpack.js'][1051]++;
    var at = array_indexOf(unhandledRejections, promise);
    _$jscoverage['recipe.unpack.js'][1052]++;
    if (at !== -1) {
      _$jscoverage['recipe.unpack.js'][1053]++;
      unhandledRejections.splice(at, 1);
      _$jscoverage['recipe.unpack.js'][1054]++;
      unhandledReasons.splice(at, 1);
    }
}
  _$jscoverage['recipe.unpack.js'][1058]++;
  Q.resetUnhandledRejections = resetUnhandledRejections;
  _$jscoverage['recipe.unpack.js'][1060]++;
  Q.getUnhandledReasons = (function () {
  _$jscoverage['recipe.unpack.js'][1062]++;
  return unhandledReasons.slice();
});
  _$jscoverage['recipe.unpack.js'][1065]++;
  Q.stopUnhandledRejectionTracking = (function () {
  _$jscoverage['recipe.unpack.js'][1066]++;
  resetUnhandledRejections();
  _$jscoverage['recipe.unpack.js'][1067]++;
  if (typeof process !== "undefined" && process.on) {
    _$jscoverage['recipe.unpack.js'][1068]++;
    process.removeListener("exit", logUnhandledReasons);
  }
  _$jscoverage['recipe.unpack.js'][1070]++;
  trackUnhandledRejections = false;
});
  _$jscoverage['recipe.unpack.js'][1073]++;
  resetUnhandledRejections();
  _$jscoverage['recipe.unpack.js'][1081]++;
  Q.reject = reject;
  _$jscoverage['recipe.unpack.js'][1082]++;
  function reject(reason) {
    _$jscoverage['recipe.unpack.js'][1083]++;
    var rejection = Promise({"when": (function (rejected) {
  _$jscoverage['recipe.unpack.js'][1086]++;
  if (rejected) {
    _$jscoverage['recipe.unpack.js'][1087]++;
    untrackRejection(this);
  }
  _$jscoverage['recipe.unpack.js'][1089]++;
  return rejected? rejected(reason): this;
})}, (function fallback() {
  _$jscoverage['recipe.unpack.js'][1092]++;
  return this;
}), (function inspect() {
  _$jscoverage['recipe.unpack.js'][1094]++;
  return ({state: "rejected", reason: reason});
}));
    _$jscoverage['recipe.unpack.js'][1098]++;
    trackRejection(rejection, reason);
    _$jscoverage['recipe.unpack.js'][1100]++;
    return rejection;
}
  _$jscoverage['recipe.unpack.js'][1107]++;
  Q.fulfill = fulfill;
  _$jscoverage['recipe.unpack.js'][1108]++;
  function fulfill(value) {
    _$jscoverage['recipe.unpack.js'][1109]++;
    return Promise({"when": (function () {
  _$jscoverage['recipe.unpack.js'][1111]++;
  return value;
}), "get": (function (name) {
  _$jscoverage['recipe.unpack.js'][1114]++;
  return value[name];
}), "set": (function (name, rhs) {
  _$jscoverage['recipe.unpack.js'][1117]++;
  value[name] = rhs;
}), "delete": (function (name) {
  _$jscoverage['recipe.unpack.js'][1120]++;
  delete value[name];
}), "post": (function (name, args) {
  _$jscoverage['recipe.unpack.js'][1125]++;
  if (name === null || name === void 0) {
    _$jscoverage['recipe.unpack.js'][1126]++;
    return value.apply(void 0, args);
  }
  else {
    _$jscoverage['recipe.unpack.js'][1128]++;
    return value[name].apply(value, args);
  }
}), "apply": (function (thisp, args) {
  _$jscoverage['recipe.unpack.js'][1132]++;
  return value.apply(thisp, args);
}), "keys": (function () {
  _$jscoverage['recipe.unpack.js'][1135]++;
  return object_keys(value);
})}, void 0, (function inspect() {
  _$jscoverage['recipe.unpack.js'][1138]++;
  return ({state: "fulfilled", value: value});
}));
}
  _$jscoverage['recipe.unpack.js'][1147]++;
  function coerce(promise) {
    _$jscoverage['recipe.unpack.js'][1148]++;
    var deferred = defer();
    _$jscoverage['recipe.unpack.js'][1149]++;
    nextTick((function () {
  _$jscoverage['recipe.unpack.js'][1150]++;
  try {
    _$jscoverage['recipe.unpack.js'][1151]++;
    promise.then(deferred.resolve, deferred.reject, deferred.notify);
  }
  catch (exception) {
    _$jscoverage['recipe.unpack.js'][1153]++;
    deferred.reject(exception);
  }
}));
    _$jscoverage['recipe.unpack.js'][1156]++;
    return deferred.promise;
}
  _$jscoverage['recipe.unpack.js'][1168]++;
  Q.master = master;
  _$jscoverage['recipe.unpack.js'][1169]++;
  function master(object) {
    _$jscoverage['recipe.unpack.js'][1170]++;
    return Promise({"isDef": (function () {
})}, (function fallback(op, args) {
  _$jscoverage['recipe.unpack.js'][1173]++;
  return dispatch(object, op, args);
}), (function () {
  _$jscoverage['recipe.unpack.js'][1175]++;
  return Q(object).inspect();
}));
}
  _$jscoverage['recipe.unpack.js'][1189]++;
  Q.spread = spread;
  _$jscoverage['recipe.unpack.js'][1190]++;
  function spread(value, fulfilled, rejected) {
    _$jscoverage['recipe.unpack.js'][1191]++;
    return Q(value).spread(fulfilled, rejected);
}
  _$jscoverage['recipe.unpack.js'][1194]++;
  Promise.prototype.spread = (function (fulfilled, rejected) {
  _$jscoverage['recipe.unpack.js'][1195]++;
  return this.all().then((function (array) {
  _$jscoverage['recipe.unpack.js'][1196]++;
  return fulfilled.apply(void 0, array);
}), rejected);
});
  _$jscoverage['recipe.unpack.js'][1226]++;
  Q.async = async;
  _$jscoverage['recipe.unpack.js'][1227]++;
  function async(makeGenerator) {
    _$jscoverage['recipe.unpack.js'][1228]++;
    return (function () {
  _$jscoverage['recipe.unpack.js'][1231]++;
  function continuer(verb, arg) {
    _$jscoverage['recipe.unpack.js'][1232]++;
    var result;
    _$jscoverage['recipe.unpack.js'][1233]++;
    if (hasES6Generators) {
      _$jscoverage['recipe.unpack.js'][1234]++;
      try {
        _$jscoverage['recipe.unpack.js'][1235]++;
        result = generator[verb](arg);
      }
      catch (exception) {
        _$jscoverage['recipe.unpack.js'][1237]++;
        return reject(exception);
      }
      _$jscoverage['recipe.unpack.js'][1239]++;
      if (result.done) {
        _$jscoverage['recipe.unpack.js'][1240]++;
        return result.value;
      }
      else {
        _$jscoverage['recipe.unpack.js'][1242]++;
        return when(result.value, callback, errback);
      }
    }
    else {
      _$jscoverage['recipe.unpack.js'][1246]++;
      try {
        _$jscoverage['recipe.unpack.js'][1247]++;
        result = generator[verb](arg);
      }
      catch (exception) {
        _$jscoverage['recipe.unpack.js'][1249]++;
        if (isStopIteration(exception)) {
          _$jscoverage['recipe.unpack.js'][1250]++;
          return exception.value;
        }
        else {
          _$jscoverage['recipe.unpack.js'][1252]++;
          return reject(exception);
        }
      }
      _$jscoverage['recipe.unpack.js'][1255]++;
      return when(result, callback, errback);
    }
}
  _$jscoverage['recipe.unpack.js'][1258]++;
  var generator = makeGenerator.apply(this, arguments);
  _$jscoverage['recipe.unpack.js'][1259]++;
  var callback = continuer.bind(continuer, "next");
  _$jscoverage['recipe.unpack.js'][1260]++;
  var errback = continuer.bind(continuer, "throw");
  _$jscoverage['recipe.unpack.js'][1261]++;
  return callback();
});
}
  _$jscoverage['recipe.unpack.js'][1272]++;
  Q.spawn = spawn;
  _$jscoverage['recipe.unpack.js'][1273]++;
  function spawn(makeGenerator) {
    _$jscoverage['recipe.unpack.js'][1274]++;
    Q.done(Q.async(makeGenerator)());
}
  _$jscoverage['recipe.unpack.js'][1302]++;
  Q["return"] = _return;
  _$jscoverage['recipe.unpack.js'][1303]++;
  function _return(value) {
    _$jscoverage['recipe.unpack.js'][1304]++;
    throw new QReturnValue(value);
}
  _$jscoverage['recipe.unpack.js'][1322]++;
  Q.promised = promised;
  _$jscoverage['recipe.unpack.js'][1323]++;
  function promised(callback) {
    _$jscoverage['recipe.unpack.js'][1324]++;
    return (function () {
  _$jscoverage['recipe.unpack.js'][1325]++;
  return spread([this, all(arguments)], (function (self, args) {
  _$jscoverage['recipe.unpack.js'][1326]++;
  return callback.apply(self, args);
}));
});
}
  _$jscoverage['recipe.unpack.js'][1338]++;
  Q.dispatch = dispatch;
  _$jscoverage['recipe.unpack.js'][1339]++;
  function dispatch(object, op, args) {
    _$jscoverage['recipe.unpack.js'][1340]++;
    return Q(object).dispatch(op, args);
}
  _$jscoverage['recipe.unpack.js'][1343]++;
  Promise.prototype.dispatch = (function (op, args) {
  _$jscoverage['recipe.unpack.js'][1344]++;
  var self = this;
  _$jscoverage['recipe.unpack.js'][1345]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][1346]++;
  nextTick((function () {
  _$jscoverage['recipe.unpack.js'][1347]++;
  self.promiseDispatch(deferred.resolve, op, args);
}));
  _$jscoverage['recipe.unpack.js'][1349]++;
  return deferred.promise;
});
  _$jscoverage['recipe.unpack.js'][1358]++;
  Q.get = (function (object, key) {
  _$jscoverage['recipe.unpack.js'][1359]++;
  return Q(object).dispatch("get", [key]);
});
  _$jscoverage['recipe.unpack.js'][1362]++;
  Promise.prototype.get = (function (key) {
  _$jscoverage['recipe.unpack.js'][1363]++;
  return this.dispatch("get", [key]);
});
  _$jscoverage['recipe.unpack.js'][1373]++;
  Q.set = (function (object, key, value) {
  _$jscoverage['recipe.unpack.js'][1374]++;
  return Q(object).dispatch("set", [key, value]);
});
  _$jscoverage['recipe.unpack.js'][1377]++;
  Promise.prototype.set = (function (key, value) {
  _$jscoverage['recipe.unpack.js'][1378]++;
  return this.dispatch("set", [key, value]);
});
  _$jscoverage['recipe.unpack.js'][1387]++;
  Q.del = Q["delete"] = (function (object, key) {
  _$jscoverage['recipe.unpack.js'][1389]++;
  return Q(object).dispatch("delete", [key]);
});
  _$jscoverage['recipe.unpack.js'][1392]++;
  Promise.prototype.del = Promise.prototype["delete"] = (function (key) {
  _$jscoverage['recipe.unpack.js'][1394]++;
  return this.dispatch("delete", [key]);
});
  _$jscoverage['recipe.unpack.js'][1410]++;
  Q.mapply = Q.post = (function (object, name, args) {
  _$jscoverage['recipe.unpack.js'][1412]++;
  return Q(object).dispatch("post", [name, args]);
});
  _$jscoverage['recipe.unpack.js'][1415]++;
  Promise.prototype.mapply = Promise.prototype.post = (function (name, args) {
  _$jscoverage['recipe.unpack.js'][1417]++;
  return this.dispatch("post", [name, args]);
});
  _$jscoverage['recipe.unpack.js'][1427]++;
  Q.send = Q.mcall = Q.invoke = (function (object, name) {
  _$jscoverage['recipe.unpack.js'][1430]++;
  return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
});
  _$jscoverage['recipe.unpack.js'][1433]++;
  Promise.prototype.send = Promise.prototype.mcall = Promise.prototype.invoke = (function (name) {
  _$jscoverage['recipe.unpack.js'][1436]++;
  return this.dispatch("post", [name, array_slice(arguments, 1)]);
});
  _$jscoverage['recipe.unpack.js'][1444]++;
  Q.fapply = (function (object, args) {
  _$jscoverage['recipe.unpack.js'][1445]++;
  return Q(object).dispatch("apply", [void 0, args]);
});
  _$jscoverage['recipe.unpack.js'][1448]++;
  Promise.prototype.fapply = (function (args) {
  _$jscoverage['recipe.unpack.js'][1449]++;
  return this.dispatch("apply", [void 0, args]);
});
  _$jscoverage['recipe.unpack.js'][1457]++;
  Q["try"] = Q.fcall = (function (object) {
  _$jscoverage['recipe.unpack.js'][1459]++;
  return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
});
  _$jscoverage['recipe.unpack.js'][1462]++;
  Promise.prototype.fcall = (function () {
  _$jscoverage['recipe.unpack.js'][1463]++;
  return this.dispatch("apply", [void 0, array_slice(arguments)]);
});
  _$jscoverage['recipe.unpack.js'][1472]++;
  Q.fbind = (function (object) {
  _$jscoverage['recipe.unpack.js'][1473]++;
  var promise = Q(object);
  _$jscoverage['recipe.unpack.js'][1474]++;
  var args = array_slice(arguments, 1);
  _$jscoverage['recipe.unpack.js'][1475]++;
  return (function fbound() {
  _$jscoverage['recipe.unpack.js'][1476]++;
  return promise.dispatch("apply", [this, args.concat(array_slice(arguments))]);
});
});
  _$jscoverage['recipe.unpack.js'][1482]++;
  Promise.prototype.fbind = (function () {
  _$jscoverage['recipe.unpack.js'][1483]++;
  var promise = this;
  _$jscoverage['recipe.unpack.js'][1484]++;
  var args = array_slice(arguments);
  _$jscoverage['recipe.unpack.js'][1485]++;
  return (function fbound() {
  _$jscoverage['recipe.unpack.js'][1486]++;
  return promise.dispatch("apply", [this, args.concat(array_slice(arguments))]);
});
});
  _$jscoverage['recipe.unpack.js'][1499]++;
  Q.keys = (function (object) {
  _$jscoverage['recipe.unpack.js'][1500]++;
  return Q(object).dispatch("keys", []);
});
  _$jscoverage['recipe.unpack.js'][1503]++;
  Promise.prototype.keys = (function () {
  _$jscoverage['recipe.unpack.js'][1504]++;
  return this.dispatch("keys", []);
});
  _$jscoverage['recipe.unpack.js'][1516]++;
  Q.all = all;
  _$jscoverage['recipe.unpack.js'][1517]++;
  function all(promises) {
    _$jscoverage['recipe.unpack.js'][1518]++;
    return when(promises, (function (promises) {
  _$jscoverage['recipe.unpack.js'][1519]++;
  var countDown = 0;
  _$jscoverage['recipe.unpack.js'][1520]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][1521]++;
  array_reduce(promises, (function (undefined, promise, index) {
  _$jscoverage['recipe.unpack.js'][1522]++;
  var snapshot;
  _$jscoverage['recipe.unpack.js'][1523]++;
  if (isPromise(promise) && (snapshot = promise.inspect()).state === "fulfilled") {
    _$jscoverage['recipe.unpack.js'][1527]++;
    promises[index] = snapshot.value;
  }
  else {
    _$jscoverage['recipe.unpack.js'][1529]++;
    ++countDown;
    _$jscoverage['recipe.unpack.js'][1530]++;
    when(promise, (function (value) {
  _$jscoverage['recipe.unpack.js'][1533]++;
  promises[index] = value;
  _$jscoverage['recipe.unpack.js'][1534]++;
  if (--countDown === 0) {
    _$jscoverage['recipe.unpack.js'][1535]++;
    deferred.resolve(promises);
  }
}), deferred.reject, (function (progress) {
  _$jscoverage['recipe.unpack.js'][1540]++;
  deferred.notify({index: index, value: progress});
}));
  }
}), void 0);
  _$jscoverage['recipe.unpack.js'][1545]++;
  if (countDown === 0) {
    _$jscoverage['recipe.unpack.js'][1546]++;
    deferred.resolve(promises);
  }
  _$jscoverage['recipe.unpack.js'][1548]++;
  return deferred.promise;
}));
}
  _$jscoverage['recipe.unpack.js'][1552]++;
  Promise.prototype.all = (function () {
  _$jscoverage['recipe.unpack.js'][1553]++;
  return all(this);
});
  _$jscoverage['recipe.unpack.js'][1565]++;
  Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
  _$jscoverage['recipe.unpack.js'][1566]++;
  function allResolved(promises) {
    _$jscoverage['recipe.unpack.js'][1567]++;
    return when(promises, (function (promises) {
  _$jscoverage['recipe.unpack.js'][1568]++;
  promises = array_map(promises, Q);
  _$jscoverage['recipe.unpack.js'][1569]++;
  return when(all(array_map(promises, (function (promise) {
  _$jscoverage['recipe.unpack.js'][1570]++;
  return when(promise, noop, noop);
}))), (function () {
  _$jscoverage['recipe.unpack.js'][1572]++;
  return promises;
}));
}));
}
  _$jscoverage['recipe.unpack.js'][1577]++;
  Promise.prototype.allResolved = (function () {
  _$jscoverage['recipe.unpack.js'][1578]++;
  return allResolved(this);
});
  _$jscoverage['recipe.unpack.js'][1584]++;
  Q.allSettled = allSettled;
  _$jscoverage['recipe.unpack.js'][1585]++;
  function allSettled(promises) {
    _$jscoverage['recipe.unpack.js'][1586]++;
    return Q(promises).allSettled();
}
  _$jscoverage['recipe.unpack.js'][1596]++;
  Promise.prototype.allSettled = (function () {
  _$jscoverage['recipe.unpack.js'][1597]++;
  return this.then((function (promises) {
  _$jscoverage['recipe.unpack.js'][1598]++;
  return all(array_map(promises, (function (promise) {
  _$jscoverage['recipe.unpack.js'][1599]++;
  promise = Q(promise);
  _$jscoverage['recipe.unpack.js'][1600]++;
  function regardless() {
    _$jscoverage['recipe.unpack.js'][1601]++;
    return promise.inspect();
}
  _$jscoverage['recipe.unpack.js'][1603]++;
  return promise.then(regardless, regardless);
})));
}));
});
  _$jscoverage['recipe.unpack.js'][1617]++;
  Q.fail = Q["catch"] = (function (object, rejected) {
  _$jscoverage['recipe.unpack.js'][1619]++;
  return Q(object).then(void 0, rejected);
});
  _$jscoverage['recipe.unpack.js'][1622]++;
  Promise.prototype.fail = Promise.prototype["catch"] = (function (rejected) {
  _$jscoverage['recipe.unpack.js'][1624]++;
  return this.then(void 0, rejected);
});
  _$jscoverage['recipe.unpack.js'][1635]++;
  Q.progress = progress;
  _$jscoverage['recipe.unpack.js'][1636]++;
  function progress(object, progressed) {
    _$jscoverage['recipe.unpack.js'][1637]++;
    return Q(object).then(void 0, void 0, progressed);
}
  _$jscoverage['recipe.unpack.js'][1640]++;
  Promise.prototype.progress = (function (progressed) {
  _$jscoverage['recipe.unpack.js'][1641]++;
  return this.then(void 0, void 0, progressed);
});
  _$jscoverage['recipe.unpack.js'][1655]++;
  Q.fin = Q["finally"] = (function (object, callback) {
  _$jscoverage['recipe.unpack.js'][1657]++;
  return Q(object)["finally"](callback);
});
  _$jscoverage['recipe.unpack.js'][1660]++;
  Promise.prototype.fin = Promise.prototype["finally"] = (function (callback) {
  _$jscoverage['recipe.unpack.js'][1662]++;
  callback = Q(callback);
  _$jscoverage['recipe.unpack.js'][1663]++;
  return this.then((function (value) {
  _$jscoverage['recipe.unpack.js'][1664]++;
  return callback.fcall().then((function () {
  _$jscoverage['recipe.unpack.js'][1665]++;
  return value;
}));
}), (function (reason) {
  _$jscoverage['recipe.unpack.js'][1669]++;
  return callback.fcall().then((function () {
  _$jscoverage['recipe.unpack.js'][1670]++;
  throw reason;
}));
}));
});
  _$jscoverage['recipe.unpack.js'][1681]++;
  Q.done = (function (object, fulfilled, rejected, progress) {
  _$jscoverage['recipe.unpack.js'][1682]++;
  return Q(object).done(fulfilled, rejected, progress);
});
  _$jscoverage['recipe.unpack.js'][1685]++;
  Promise.prototype.done = (function (fulfilled, rejected, progress) {
  _$jscoverage['recipe.unpack.js'][1686]++;
  var onUnhandledError = (function (error) {
  _$jscoverage['recipe.unpack.js'][1689]++;
  nextTick((function () {
  _$jscoverage['recipe.unpack.js'][1690]++;
  makeStackTraceLong(error, promise);
  _$jscoverage['recipe.unpack.js'][1691]++;
  if (Q.onerror) {
    _$jscoverage['recipe.unpack.js'][1692]++;
    Q.onerror(error);
  }
  else {
    _$jscoverage['recipe.unpack.js'][1694]++;
    throw error;
  }
}));
});
  _$jscoverage['recipe.unpack.js'][1700]++;
  var promise = fulfilled || rejected || progress? this.then(fulfilled, rejected, progress): this;
  _$jscoverage['recipe.unpack.js'][1704]++;
  if (typeof process === "object" && process && process.domain) {
    _$jscoverage['recipe.unpack.js'][1705]++;
    onUnhandledError = process.domain.bind(onUnhandledError);
  }
  _$jscoverage['recipe.unpack.js'][1708]++;
  promise.then(void 0, onUnhandledError);
});
  _$jscoverage['recipe.unpack.js'][1720]++;
  Q.timeout = (function (object, ms, message) {
  _$jscoverage['recipe.unpack.js'][1721]++;
  return Q(object).timeout(ms, message);
});
  _$jscoverage['recipe.unpack.js'][1724]++;
  Promise.prototype.timeout = (function (ms, message) {
  _$jscoverage['recipe.unpack.js'][1725]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][1726]++;
  var timeoutId = setTimeout((function () {
  _$jscoverage['recipe.unpack.js'][1727]++;
  deferred.reject(new Error(message || "Timed out after " + ms + " ms"));
}), ms);
  _$jscoverage['recipe.unpack.js'][1730]++;
  this.then((function (value) {
  _$jscoverage['recipe.unpack.js'][1731]++;
  clearTimeout(timeoutId);
  _$jscoverage['recipe.unpack.js'][1732]++;
  deferred.resolve(value);
}), (function (exception) {
  _$jscoverage['recipe.unpack.js'][1734]++;
  clearTimeout(timeoutId);
  _$jscoverage['recipe.unpack.js'][1735]++;
  deferred.reject(exception);
}), deferred.notify);
  _$jscoverage['recipe.unpack.js'][1738]++;
  return deferred.promise;
});
  _$jscoverage['recipe.unpack.js'][1750]++;
  Q.delay = (function (object, timeout) {
  _$jscoverage['recipe.unpack.js'][1751]++;
  if (timeout === void 0) {
    _$jscoverage['recipe.unpack.js'][1752]++;
    timeout = object;
    _$jscoverage['recipe.unpack.js'][1753]++;
    object = void 0;
  }
  _$jscoverage['recipe.unpack.js'][1755]++;
  return Q(object).delay(timeout);
});
  _$jscoverage['recipe.unpack.js'][1758]++;
  Promise.prototype.delay = (function (timeout) {
  _$jscoverage['recipe.unpack.js'][1759]++;
  return this.then((function (value) {
  _$jscoverage['recipe.unpack.js'][1760]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][1761]++;
  setTimeout((function () {
  _$jscoverage['recipe.unpack.js'][1762]++;
  deferred.resolve(value);
}), timeout);
  _$jscoverage['recipe.unpack.js'][1764]++;
  return deferred.promise;
}));
});
  _$jscoverage['recipe.unpack.js'][1777]++;
  Q.nfapply = (function (callback, args) {
  _$jscoverage['recipe.unpack.js'][1778]++;
  return Q(callback).nfapply(args);
});
  _$jscoverage['recipe.unpack.js'][1781]++;
  Promise.prototype.nfapply = (function (args) {
  _$jscoverage['recipe.unpack.js'][1782]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][1783]++;
  var nodeArgs = array_slice(args);
  _$jscoverage['recipe.unpack.js'][1784]++;
  nodeArgs.push(deferred.makeNodeResolver());
  _$jscoverage['recipe.unpack.js'][1785]++;
  this.fapply(nodeArgs).fail(deferred.reject);
  _$jscoverage['recipe.unpack.js'][1786]++;
  return deferred.promise;
});
  _$jscoverage['recipe.unpack.js'][1798]++;
  Q.nfcall = (function (callback) {
  _$jscoverage['recipe.unpack.js'][1799]++;
  var args = array_slice(arguments, 1);
  _$jscoverage['recipe.unpack.js'][1800]++;
  return Q(callback).nfapply(args);
});
  _$jscoverage['recipe.unpack.js'][1803]++;
  Promise.prototype.nfcall = (function () {
  _$jscoverage['recipe.unpack.js'][1804]++;
  var nodeArgs = array_slice(arguments);
  _$jscoverage['recipe.unpack.js'][1805]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][1806]++;
  nodeArgs.push(deferred.makeNodeResolver());
  _$jscoverage['recipe.unpack.js'][1807]++;
  this.fapply(nodeArgs).fail(deferred.reject);
  _$jscoverage['recipe.unpack.js'][1808]++;
  return deferred.promise;
});
  _$jscoverage['recipe.unpack.js'][1819]++;
  Q.nfbind = Q.denodeify = (function (callback) {
  _$jscoverage['recipe.unpack.js'][1821]++;
  var baseArgs = array_slice(arguments, 1);
  _$jscoverage['recipe.unpack.js'][1822]++;
  return (function () {
  _$jscoverage['recipe.unpack.js'][1823]++;
  var nodeArgs = baseArgs.concat(array_slice(arguments));
  _$jscoverage['recipe.unpack.js'][1824]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][1825]++;
  nodeArgs.push(deferred.makeNodeResolver());
  _$jscoverage['recipe.unpack.js'][1826]++;
  Q(callback).fapply(nodeArgs).fail(deferred.reject);
  _$jscoverage['recipe.unpack.js'][1827]++;
  return deferred.promise;
});
});
  _$jscoverage['recipe.unpack.js'][1831]++;
  Promise.prototype.nfbind = Promise.prototype.denodeify = (function () {
  _$jscoverage['recipe.unpack.js'][1833]++;
  var args = array_slice(arguments);
  _$jscoverage['recipe.unpack.js'][1834]++;
  args.unshift(this);
  _$jscoverage['recipe.unpack.js'][1835]++;
  return Q.denodeify.apply(void 0, args);
});
  _$jscoverage['recipe.unpack.js'][1838]++;
  Q.nbind = (function (callback, thisp) {
  _$jscoverage['recipe.unpack.js'][1839]++;
  var baseArgs = array_slice(arguments, 2);
  _$jscoverage['recipe.unpack.js'][1840]++;
  return (function () {
  _$jscoverage['recipe.unpack.js'][1841]++;
  var nodeArgs = baseArgs.concat(array_slice(arguments));
  _$jscoverage['recipe.unpack.js'][1842]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][1843]++;
  nodeArgs.push(deferred.makeNodeResolver());
  _$jscoverage['recipe.unpack.js'][1844]++;
  function bound() {
    _$jscoverage['recipe.unpack.js'][1845]++;
    return callback.apply(thisp, arguments);
}
  _$jscoverage['recipe.unpack.js'][1847]++;
  Q(bound).fapply(nodeArgs).fail(deferred.reject);
  _$jscoverage['recipe.unpack.js'][1848]++;
  return deferred.promise;
});
});
  _$jscoverage['recipe.unpack.js'][1852]++;
  Promise.prototype.nbind = (function () {
  _$jscoverage['recipe.unpack.js'][1853]++;
  var args = array_slice(arguments, 0);
  _$jscoverage['recipe.unpack.js'][1854]++;
  args.unshift(this);
  _$jscoverage['recipe.unpack.js'][1855]++;
  return Q.nbind.apply(void 0, args);
});
  _$jscoverage['recipe.unpack.js'][1867]++;
  Q.nmapply = Q.npost = (function (object, name, args) {
  _$jscoverage['recipe.unpack.js'][1869]++;
  return Q(object).npost(name, args);
});
  _$jscoverage['recipe.unpack.js'][1872]++;
  Promise.prototype.nmapply = Promise.prototype.npost = (function (name, args) {
  _$jscoverage['recipe.unpack.js'][1874]++;
  var nodeArgs = array_slice(args || []);
  _$jscoverage['recipe.unpack.js'][1875]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][1876]++;
  nodeArgs.push(deferred.makeNodeResolver());
  _$jscoverage['recipe.unpack.js'][1877]++;
  this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
  _$jscoverage['recipe.unpack.js'][1878]++;
  return deferred.promise;
});
  _$jscoverage['recipe.unpack.js'][1891]++;
  Q.nsend = Q.nmcall = Q.ninvoke = (function (object, name) {
  _$jscoverage['recipe.unpack.js'][1894]++;
  var nodeArgs = array_slice(arguments, 2);
  _$jscoverage['recipe.unpack.js'][1895]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][1896]++;
  nodeArgs.push(deferred.makeNodeResolver());
  _$jscoverage['recipe.unpack.js'][1897]++;
  Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
  _$jscoverage['recipe.unpack.js'][1898]++;
  return deferred.promise;
});
  _$jscoverage['recipe.unpack.js'][1901]++;
  Promise.prototype.nsend = Promise.prototype.nmcall = Promise.prototype.ninvoke = (function (name) {
  _$jscoverage['recipe.unpack.js'][1904]++;
  var nodeArgs = array_slice(arguments, 1);
  _$jscoverage['recipe.unpack.js'][1905]++;
  var deferred = defer();
  _$jscoverage['recipe.unpack.js'][1906]++;
  nodeArgs.push(deferred.makeNodeResolver());
  _$jscoverage['recipe.unpack.js'][1907]++;
  this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
  _$jscoverage['recipe.unpack.js'][1908]++;
  return deferred.promise;
});
  _$jscoverage['recipe.unpack.js'][1921]++;
  Q.nodeify = nodeify;
  _$jscoverage['recipe.unpack.js'][1922]++;
  function nodeify(object, nodeback) {
    _$jscoverage['recipe.unpack.js'][1923]++;
    return Q(object).nodeify(nodeback);
}
  _$jscoverage['recipe.unpack.js'][1926]++;
  Promise.prototype.nodeify = (function (nodeback) {
  _$jscoverage['recipe.unpack.js'][1927]++;
  if (nodeback) {
    _$jscoverage['recipe.unpack.js'][1928]++;
    this.then((function (value) {
  _$jscoverage['recipe.unpack.js'][1929]++;
  nextTick((function () {
  _$jscoverage['recipe.unpack.js'][1930]++;
  nodeback(null, value);
}));
}), (function (error) {
  _$jscoverage['recipe.unpack.js'][1933]++;
  nextTick((function () {
  _$jscoverage['recipe.unpack.js'][1934]++;
  nodeback(error);
}));
}));
  }
  else {
    _$jscoverage['recipe.unpack.js'][1938]++;
    return this;
  }
});
  _$jscoverage['recipe.unpack.js'][1943]++;
  var qEndingLine = captureLine();
  _$jscoverage['recipe.unpack.js'][1945]++;
  return Q;
}));
  _$jscoverage['recipe.unpack.js'][1958]++;
  ;
  _$jscoverage['recipe.unpack.js'][1958]++;
  (function (win, undefined) {
  _$jscoverage['recipe.unpack.js'][1959]++;
  "use strict";
  _$jscoverage['recipe.unpack.js'][1961]++;
  var doc = win.document, domWaiters = [], queue = [], handlers = {}, assets = {}, isAsync = "async" in doc.createElement("script") || "MozAppearance" in doc.documentElement.style || win.opera, isHeadReady, isDomReady, headVar = win.head_conf && win.head_conf.head || "head", api = win[headVar] = (win[headVar] || (function () {
  _$jscoverage['recipe.unpack.js'][1972]++;
  api.ready.apply(null, arguments);
})), PRELOADING = 1, PRELOADED = 2, LOADING = 3, LOADED = 4;
  _$jscoverage['recipe.unpack.js'][1981]++;
  if (isAsync) {
    _$jscoverage['recipe.unpack.js'][1982]++;
    api.load = (function () {
  _$jscoverage['recipe.unpack.js'][1988]++;
  var args = arguments, callback = args[args.length - 1], items = {};
  _$jscoverage['recipe.unpack.js'][1992]++;
  if (! isFunction(callback)) {
    _$jscoverage['recipe.unpack.js'][1993]++;
    callback = null;
  }
  _$jscoverage['recipe.unpack.js'][1996]++;
  each(args, (function (item, i) {
  _$jscoverage['recipe.unpack.js'][1997]++;
  if (item !== callback) {
    _$jscoverage['recipe.unpack.js'][1998]++;
    item = getAsset(item);
    _$jscoverage['recipe.unpack.js'][1999]++;
    items[item.name] = item;
    _$jscoverage['recipe.unpack.js'][2001]++;
    load(item, callback && i === args.length - 2? (function () {
  _$jscoverage['recipe.unpack.js'][2002]++;
  if (allLoaded(items)) {
    _$jscoverage['recipe.unpack.js'][2003]++;
    one(callback);
  }
}): null);
  }
}));
  _$jscoverage['recipe.unpack.js'][2010]++;
  return api;
});
  }
  else {
    _$jscoverage['recipe.unpack.js'][2016]++;
    api.load = (function () {
  _$jscoverage['recipe.unpack.js'][2017]++;
  var args = arguments, rest = [].slice.call(args, 1), next = rest[0];
  _$jscoverage['recipe.unpack.js'][2022]++;
  if (! isHeadReady) {
    _$jscoverage['recipe.unpack.js'][2023]++;
    queue.push((function () {
  _$jscoverage['recipe.unpack.js'][2024]++;
  api.load.apply(null, args);
}));
    _$jscoverage['recipe.unpack.js'][2027]++;
    return api;
  }
  _$jscoverage['recipe.unpack.js'][2031]++;
  if (! ! next) {
    _$jscoverage['recipe.unpack.js'][2037]++;
    each(rest, (function (item) {
  _$jscoverage['recipe.unpack.js'][2038]++;
  if (! isFunction(item)) {
    _$jscoverage['recipe.unpack.js'][2039]++;
    preLoad(getAsset(item));
  }
}));
    _$jscoverage['recipe.unpack.js'][2044]++;
    load(getAsset(args[0]), isFunction(next)? next: (function () {
  _$jscoverage['recipe.unpack.js'][2045]++;
  api.load.apply(null, rest);
}));
  }
  else {
    _$jscoverage['recipe.unpack.js'][2050]++;
    load(getAsset(args[0]));
  }
  _$jscoverage['recipe.unpack.js'][2053]++;
  return api;
});
  }
  _$jscoverage['recipe.unpack.js'][2058]++;
  api.js = api.load;
  _$jscoverage['recipe.unpack.js'][2060]++;
  api.test = (function (test, success, failure, callback) {
  _$jscoverage['recipe.unpack.js'][2080]++;
  var obj = (typeof test === "object")? test: {test: test, success: ! ! success? isArray(success)? success: [success]: false, failure: ! ! failure? isArray(failure)? failure: [failure]: false, callback: callback || noop};
  _$jscoverage['recipe.unpack.js'][2088]++;
  var passed = ! ! obj.test;
  _$jscoverage['recipe.unpack.js'][2091]++;
  if (passed && ! ! obj.success) {
    _$jscoverage['recipe.unpack.js'][2092]++;
    obj.success.push(obj.callback);
    _$jscoverage['recipe.unpack.js'][2093]++;
    api.load.apply(null, obj.success);
  }
  else {
    _$jscoverage['recipe.unpack.js'][2096]++;
    if (! passed && ! ! obj.failure) {
      _$jscoverage['recipe.unpack.js'][2097]++;
      obj.failure.push(obj.callback);
      _$jscoverage['recipe.unpack.js'][2098]++;
      api.load.apply(null, obj.failure);
    }
    else {
      _$jscoverage['recipe.unpack.js'][2101]++;
      callback();
    }
  }
  _$jscoverage['recipe.unpack.js'][2104]++;
  return api;
});
  _$jscoverage['recipe.unpack.js'][2107]++;
  api.ready = (function (key, callback) {
  _$jscoverage['recipe.unpack.js'][2117]++;
  if (key === doc) {
    _$jscoverage['recipe.unpack.js'][2118]++;
    if (isDomReady) {
      _$jscoverage['recipe.unpack.js'][2119]++;
      one(callback);
    }
    else {
      _$jscoverage['recipe.unpack.js'][2122]++;
      domWaiters.push(callback);
    }
    _$jscoverage['recipe.unpack.js'][2125]++;
    return api;
  }
  _$jscoverage['recipe.unpack.js'][2129]++;
  if (isFunction(key)) {
    _$jscoverage['recipe.unpack.js'][2130]++;
    callback = key;
    _$jscoverage['recipe.unpack.js'][2131]++;
    key = "ALL";
  }
  _$jscoverage['recipe.unpack.js'][2135]++;
  if (typeof key !== "string" || ! isFunction(callback)) {
    _$jscoverage['recipe.unpack.js'][2136]++;
    return api;
  }
  _$jscoverage['recipe.unpack.js'][2140]++;
  var asset = assets[key];
  _$jscoverage['recipe.unpack.js'][2143]++;
  if (asset && asset.state === LOADED || key === "ALL" && allLoaded() && isDomReady) {
    _$jscoverage['recipe.unpack.js'][2144]++;
    one(callback);
    _$jscoverage['recipe.unpack.js'][2145]++;
    return api;
  }
  _$jscoverage['recipe.unpack.js'][2148]++;
  var arr = handlers[key];
  _$jscoverage['recipe.unpack.js'][2149]++;
  if (! arr) {
    _$jscoverage['recipe.unpack.js'][2150]++;
    arr = handlers[key] = [callback];
  }
  else {
    _$jscoverage['recipe.unpack.js'][2153]++;
    arr.push(callback);
  }
  _$jscoverage['recipe.unpack.js'][2156]++;
  return api;
});
  _$jscoverage['recipe.unpack.js'][2161]++;
  api.ready(doc, (function () {
  _$jscoverage['recipe.unpack.js'][2163]++;
  if (allLoaded()) {
    _$jscoverage['recipe.unpack.js'][2164]++;
    each(handlers.ALL, (function (callback) {
  _$jscoverage['recipe.unpack.js'][2165]++;
  one(callback);
}));
  }
  _$jscoverage['recipe.unpack.js'][2169]++;
  if (api.feature) {
    _$jscoverage['recipe.unpack.js'][2170]++;
    api.feature("domloaded", true);
  }
}));
  _$jscoverage['recipe.unpack.js'][2177]++;
  function noop() {
}
  _$jscoverage['recipe.unpack.js'][2181]++;
  function each(arr, callback) {
    _$jscoverage['recipe.unpack.js'][2182]++;
    if (! arr) {
      _$jscoverage['recipe.unpack.js'][2183]++;
      return;
    }
    _$jscoverage['recipe.unpack.js'][2187]++;
    if (typeof arr === "object") {
      _$jscoverage['recipe.unpack.js'][2188]++;
      arr = [].slice.call(arr);
    }
    _$jscoverage['recipe.unpack.js'][2192]++;
    for (var i = 0, l = arr.length; i < l; i++) {
      _$jscoverage['recipe.unpack.js'][2193]++;
      callback.call(arr, arr[i], i);
}
}
  _$jscoverage['recipe.unpack.js'][2199]++;
  function is(type, obj) {
    _$jscoverage['recipe.unpack.js'][2200]++;
    var clas = Object.prototype.toString.call(obj).slice(8, -1);
    _$jscoverage['recipe.unpack.js'][2201]++;
    return obj !== undefined && obj !== null && clas === type;
}
  _$jscoverage['recipe.unpack.js'][2204]++;
  function isFunction(item) {
    _$jscoverage['recipe.unpack.js'][2205]++;
    return is("Function", item);
}
  _$jscoverage['recipe.unpack.js'][2208]++;
  function isArray(item) {
    _$jscoverage['recipe.unpack.js'][2209]++;
    return is("Array", item);
}
  _$jscoverage['recipe.unpack.js'][2212]++;
  function toLabel(url) {
    _$jscoverage['recipe.unpack.js'][2214]++;
    var items = url.split("/"), name = items[items.length - 1], i = name.indexOf("?");
    _$jscoverage['recipe.unpack.js'][2218]++;
    return i !== -1? name.substring(0, i): name;
}
  _$jscoverage['recipe.unpack.js'][2223]++;
  function one(callback) {
    _$jscoverage['recipe.unpack.js'][2225]++;
    callback = callback || noop;
    _$jscoverage['recipe.unpack.js'][2227]++;
    if (callback._done) {
      _$jscoverage['recipe.unpack.js'][2228]++;
      return;
    }
    _$jscoverage['recipe.unpack.js'][2231]++;
    callback();
    _$jscoverage['recipe.unpack.js'][2232]++;
    callback._done = 1;
}
  _$jscoverage['recipe.unpack.js'][2235]++;
  function getAsset(item) {
    _$jscoverage['recipe.unpack.js'][2244]++;
    var asset = {};
    _$jscoverage['recipe.unpack.js'][2246]++;
    if (typeof item === "object") {
      _$jscoverage['recipe.unpack.js'][2247]++;
      for (var label in item) {
        _$jscoverage['recipe.unpack.js'][2248]++;
        if (! ! item[label]) {
          _$jscoverage['recipe.unpack.js'][2249]++;
          asset = {name: label, url: item[label], charset: item[label].split("#")[1] || "utf-8"};
        }
}
    }
    else {
      _$jscoverage['recipe.unpack.js'][2258]++;
      asset = {name: toLabel(item), url: item, charset: item.split("#")[1] || "utf-8"};
    }
    _$jscoverage['recipe.unpack.js'][2266]++;
    var existing = assets[asset.name];
    _$jscoverage['recipe.unpack.js'][2267]++;
    if (existing && existing.url === asset.url) {
      _$jscoverage['recipe.unpack.js'][2268]++;
      return existing;
    }
    _$jscoverage['recipe.unpack.js'][2271]++;
    assets[asset.name] = asset;
    _$jscoverage['recipe.unpack.js'][2272]++;
    return asset;
}
  _$jscoverage['recipe.unpack.js'][2275]++;
  function allLoaded(items) {
    _$jscoverage['recipe.unpack.js'][2276]++;
    items = items || assets;
    _$jscoverage['recipe.unpack.js'][2278]++;
    for (var name in items) {
      _$jscoverage['recipe.unpack.js'][2279]++;
      if (items.hasOwnProperty(name) && items[name].state !== LOADED) {
        _$jscoverage['recipe.unpack.js'][2280]++;
        return false;
      }
}
    _$jscoverage['recipe.unpack.js'][2284]++;
    return true;
}
  _$jscoverage['recipe.unpack.js'][2288]++;
  function onPreload(asset) {
    _$jscoverage['recipe.unpack.js'][2289]++;
    asset.state = PRELOADED;
    _$jscoverage['recipe.unpack.js'][2291]++;
    each(asset.onpreload, (function (afterPreload) {
  _$jscoverage['recipe.unpack.js'][2292]++;
  afterPreload.call();
}));
}
  _$jscoverage['recipe.unpack.js'][2296]++;
  function preLoad(asset, callback) {
    _$jscoverage['recipe.unpack.js'][2297]++;
    if (asset.state === undefined) {
      _$jscoverage['recipe.unpack.js'][2299]++;
      asset.state = PRELOADING;
      _$jscoverage['recipe.unpack.js'][2300]++;
      asset.onpreload = [];
      _$jscoverage['recipe.unpack.js'][2302]++;
      loadAsset({url: asset.url, type: "cache", charset: asset.charset}, (function () {
  _$jscoverage['recipe.unpack.js'][2303]++;
  onPreload(asset);
}));
    }
}
  _$jscoverage['recipe.unpack.js'][2308]++;
  function load(asset, callback) {
    _$jscoverage['recipe.unpack.js'][2310]++;
    callback = callback || noop;
    _$jscoverage['recipe.unpack.js'][2312]++;
    if (asset.state === LOADED) {
      _$jscoverage['recipe.unpack.js'][2313]++;
      callback();
      _$jscoverage['recipe.unpack.js'][2314]++;
      return;
    }
    _$jscoverage['recipe.unpack.js'][2318]++;
    if (asset.state === LOADING) {
      _$jscoverage['recipe.unpack.js'][2319]++;
      api.ready(asset.name, callback);
      _$jscoverage['recipe.unpack.js'][2320]++;
      return;
    }
    _$jscoverage['recipe.unpack.js'][2323]++;
    if (asset.state === PRELOADING) {
      _$jscoverage['recipe.unpack.js'][2324]++;
      asset.onpreload.push((function () {
  _$jscoverage['recipe.unpack.js'][2325]++;
  load(asset, callback);
}));
      _$jscoverage['recipe.unpack.js'][2327]++;
      return;
    }
    _$jscoverage['recipe.unpack.js'][2330]++;
    asset.state = LOADING;
    _$jscoverage['recipe.unpack.js'][2332]++;
    loadAsset(asset, (function () {
  _$jscoverage['recipe.unpack.js'][2333]++;
  asset.state = LOADED;
  _$jscoverage['recipe.unpack.js'][2334]++;
  callback();
  _$jscoverage['recipe.unpack.js'][2337]++;
  each(handlers[asset.name], (function (fn) {
  _$jscoverage['recipe.unpack.js'][2338]++;
  one(fn);
}));
  _$jscoverage['recipe.unpack.js'][2343]++;
  if (isDomReady && allLoaded()) {
    _$jscoverage['recipe.unpack.js'][2344]++;
    each(handlers.ALL, (function (fn) {
  _$jscoverage['recipe.unpack.js'][2345]++;
  one(fn);
}));
  }
}));
}
  _$jscoverage['recipe.unpack.js'][2353]++;
  function loadAsset(asset, callback) {
    _$jscoverage['recipe.unpack.js'][2354]++;
    callback = callback || noop;
    _$jscoverage['recipe.unpack.js'][2356]++;
    var ele;
    _$jscoverage['recipe.unpack.js'][2357]++;
    if (/\.css[^\.]*$/.test(asset.url)) {
      _$jscoverage['recipe.unpack.js'][2358]++;
      ele = doc.createElement("link");
      _$jscoverage['recipe.unpack.js'][2359]++;
      ele.type = "text/" + (asset.type || "css");
      _$jscoverage['recipe.unpack.js'][2360]++;
      ele.rel = "stylesheet";
      _$jscoverage['recipe.unpack.js'][2361]++;
      ele.href = asset.url;
    }
    else {
      _$jscoverage['recipe.unpack.js'][2364]++;
      ele = doc.createElement("script");
      _$jscoverage['recipe.unpack.js'][2365]++;
      ele.charset = asset.charset;
      _$jscoverage['recipe.unpack.js'][2366]++;
      ele.type = "text/" + (asset.type || "javascript");
      _$jscoverage['recipe.unpack.js'][2367]++;
      ele.src = asset.url;
    }
    _$jscoverage['recipe.unpack.js'][2370]++;
    ele.onload = ele.onreadystatechange = process;
    _$jscoverage['recipe.unpack.js'][2371]++;
    ele.onerror = error;
    _$jscoverage['recipe.unpack.js'][2380]++;
    ele.async = false;
    _$jscoverage['recipe.unpack.js'][2382]++;
    ele.defer = false;
    _$jscoverage['recipe.unpack.js'][2384]++;
    function error(event) {
      _$jscoverage['recipe.unpack.js'][2385]++;
      event = event || win.event;
      _$jscoverage['recipe.unpack.js'][2390]++;
      ele.onload = ele.onreadystatechange = ele.onerror = null;
      _$jscoverage['recipe.unpack.js'][2393]++;
      callback();
}
    _$jscoverage['recipe.unpack.js'][2396]++;
    function process(event) {
      _$jscoverage['recipe.unpack.js'][2397]++;
      event = event || win.event;
      _$jscoverage['recipe.unpack.js'][2443]++;
      if (event.type === "load" || (/loaded|complete/.test(ele.readyState) && (! doc.documentMode || doc.documentMode < 9))) {
        _$jscoverage['recipe.unpack.js'][2445]++;
        ele.onload = ele.onreadystatechange = ele.onerror = null;
        _$jscoverage['recipe.unpack.js'][2448]++;
        callback();
      }
}
    _$jscoverage['recipe.unpack.js'][2459]++;
    var head = doc.head || doc.getElementsByTagName("head")[0];
    _$jscoverage['recipe.unpack.js'][2461]++;
    head.insertBefore(ele, head.lastChild);
}
  _$jscoverage['recipe.unpack.js'][2467]++;
  function domReady() {
    _$jscoverage['recipe.unpack.js'][2469]++;
    if (! doc.body) {
      _$jscoverage['recipe.unpack.js'][2471]++;
      win.clearTimeout(api.readyTimeout);
      _$jscoverage['recipe.unpack.js'][2472]++;
      api.readyTimeout = win.setTimeout(domReady, 50);
      _$jscoverage['recipe.unpack.js'][2473]++;
      return;
    }
    _$jscoverage['recipe.unpack.js'][2476]++;
    if (! isDomReady) {
      _$jscoverage['recipe.unpack.js'][2477]++;
      isDomReady = true;
      _$jscoverage['recipe.unpack.js'][2478]++;
      each(domWaiters, (function (fn) {
  _$jscoverage['recipe.unpack.js'][2479]++;
  one(fn);
}));
    }
}
  _$jscoverage['recipe.unpack.js'][2484]++;
  function domContentLoaded() {
    _$jscoverage['recipe.unpack.js'][2486]++;
    if (doc.addEventListener) {
      _$jscoverage['recipe.unpack.js'][2487]++;
      doc.removeEventListener("DOMContentLoaded", domContentLoaded, false);
      _$jscoverage['recipe.unpack.js'][2488]++;
      domReady();
    }
    else {
      _$jscoverage['recipe.unpack.js'][2492]++;
      if (doc.readyState === "complete") {
        _$jscoverage['recipe.unpack.js'][2495]++;
        doc.detachEvent("onreadystatechange", domContentLoaded);
        _$jscoverage['recipe.unpack.js'][2496]++;
        domReady();
      }
    }
}
  _$jscoverage['recipe.unpack.js'][2503]++;
  if (doc.readyState === "complete") {
    _$jscoverage['recipe.unpack.js'][2504]++;
    domReady();
  }
  else {
    _$jscoverage['recipe.unpack.js'][2508]++;
    if (doc.addEventListener) {
      _$jscoverage['recipe.unpack.js'][2509]++;
      doc.addEventListener("DOMContentLoaded", domContentLoaded, false);
      _$jscoverage['recipe.unpack.js'][2512]++;
      win.addEventListener("load", domReady, false);
    }
    else {
      _$jscoverage['recipe.unpack.js'][2518]++;
      doc.attachEvent("onreadystatechange", domContentLoaded);
      _$jscoverage['recipe.unpack.js'][2521]++;
      win.attachEvent("onload", domReady);
      _$jscoverage['recipe.unpack.js'][2525]++;
      var top = false;
      _$jscoverage['recipe.unpack.js'][2527]++;
      try {
        _$jscoverage['recipe.unpack.js'][2528]++;
        top = win.frameElement == null && doc.documentElement;
      }
      catch (e) {
      }
      _$jscoverage['recipe.unpack.js'][2531]++;
      if (top && top.doScroll) {
        _$jscoverage['recipe.unpack.js'][2532]++;
        (function doScrollCheck() {
  _$jscoverage['recipe.unpack.js'][2533]++;
  if (! isDomReady) {
    _$jscoverage['recipe.unpack.js'][2534]++;
    try {
      _$jscoverage['recipe.unpack.js'][2537]++;
      top.doScroll("left");
    }
    catch (error) {
      _$jscoverage['recipe.unpack.js'][2540]++;
      win.clearTimeout(api.readyTimeout);
      _$jscoverage['recipe.unpack.js'][2541]++;
      api.readyTimeout = win.setTimeout(doScrollCheck, 50);
      _$jscoverage['recipe.unpack.js'][2542]++;
      return;
    }
    _$jscoverage['recipe.unpack.js'][2546]++;
    domReady();
  }
})();
      }
    }
  }
  _$jscoverage['recipe.unpack.js'][2558]++;
  setTimeout((function () {
  _$jscoverage['recipe.unpack.js'][2559]++;
  isHeadReady = true;
  _$jscoverage['recipe.unpack.js'][2560]++;
  each(queue, (function (fn) {
  _$jscoverage['recipe.unpack.js'][2561]++;
  fn();
}));
}), 300);
})(window);
  _$jscoverage['recipe.unpack.js'][2567]++;
  recipe = (function (global, head, Q) {
  _$jscoverage['recipe.unpack.js'][2568]++;
  "use strict";
  _$jscoverage['recipe.unpack.js'][2570]++;
  var base = "", method = "", cache = {}, hasValue = (function (value, array) {
  _$jscoverage['recipe.unpack.js'][2574]++;
  var i, len;
  _$jscoverage['recipe.unpack.js'][2576]++;
  for (i = 0, len = array.length; i < len; i++) {
    _$jscoverage['recipe.unpack.js'][2577]++;
    if (value === array[i]) {
      _$jscoverage['recipe.unpack.js'][2578]++;
      return true;
    }
}
  _$jscoverage['recipe.unpack.js'][2581]++;
  return false;
}), dfd = {version: Q.defer(), dependencies: Q.defer()}, uniq = (function (array) {
  _$jscoverage['recipe.unpack.js'][2588]++;
  var i, len, uniqued = [];
  _$jscoverage['recipe.unpack.js'][2591]++;
  for (i = 0, len = array.length; i < len; i++) {
    _$jscoverage['recipe.unpack.js'][2592]++;
    if (! hasValue(array[i], uniqued)) {
      _$jscoverage['recipe.unpack.js'][2593]++;
      uniqued.push(array[i]);
    }
}
  _$jscoverage['recipe.unpack.js'][2596]++;
  return uniqued;
}), define = (function (dependencies, callback) {
  _$jscoverage['recipe.unpack.js'][2599]++;
  var exports = recipe.exports, variables = [], variable, i, length = dependencies.length;
  _$jscoverage['recipe.unpack.js'][2605]++;
  for (i = 0; i < length; i++) {
    _$jscoverage['recipe.unpack.js'][2606]++;
    if (dependencies[i] === "exports") {
      _$jscoverage['recipe.unpack.js'][2607]++;
      variables.push(recipe.exports);
    }
    else {
      _$jscoverage['recipe.unpack.js'][2609]++;
      variable = recipe.exports[dependencies[i]];
      _$jscoverage['recipe.unpack.js'][2610]++;
      variables.push(variable);
    }
}
  _$jscoverage['recipe.unpack.js'][2614]++;
  callback.apply(global, variables);
}), recipe = (function (options) {
  _$jscoverage['recipe.unpack.js'][2617]++;
  var namespace, exports = (options || {}).exports || {}, libraries = (options || {}).libraries || [], scripts = (options || {}).scripts || [], isAmd = (options || {}).amd || false, urls = [], args = [], dfd = Q.defer(), len, deps, set, i;
  _$jscoverage['recipe.unpack.js'][2630]++;
  if (isAmd) {
    _$jscoverage['recipe.unpack.js'][2631]++;
    global.define = define;
    _$jscoverage['recipe.unpack.js'][2633]++;
    for (namespace in exports) {
      _$jscoverage['recipe.unpack.js'][2634]++;
      recipe.exports[namespace] = exports[namespace];
}
  }
  _$jscoverage['recipe.unpack.js'][2638]++;
  recipe.get.version().promise.then((function (version) {
  _$jscoverage['recipe.unpack.js'][2639]++;
  recipe.get.dependencies(isAmd).promise.then((function (dependencies) {
  _$jscoverage['recipe.unpack.js'][2640]++;
  for (i = 0, len = libraries.length; i < len; i++) {
    _$jscoverage['recipe.unpack.js'][2641]++;
    namespace = libraries[i];
    _$jscoverage['recipe.unpack.js'][2642]++;
    deps = dependencies[namespace];
    _$jscoverage['recipe.unpack.js'][2643]++;
    if (! deps && ! recipe.exports[namespace]) {
      _$jscoverage['recipe.unpack.js'][2644]++;
      dfd.reject("Ingredients not found. namespace[" + libraries[i] + "]");
      _$jscoverage['recipe.unpack.js'][2645]++;
      return dfd;
    }
    _$jscoverage['recipe.unpack.js'][2647]++;
    if (deps) {
      _$jscoverage['recipe.unpack.js'][2648]++;
      urls = urls.concat(deps);
    }
}
  _$jscoverage['recipe.unpack.js'][2652]++;
  urls = uniq(urls.concat(scripts));
  _$jscoverage['recipe.unpack.js'][2653]++;
  for (i = 0, len = urls.length; i < len; i++) {
    _$jscoverage['recipe.unpack.js'][2654]++;
    set = urls[i].split("#");
    _$jscoverage['recipe.unpack.js'][2655]++;
    if (! set[0]) {
      _$jscoverage['recipe.unpack.js'][2656]++;
      dfd.reject("Illegal URL were exists. [\"" + urls.join("\", \"") + "\"]");
      _$jscoverage['recipe.unpack.js'][2657]++;
      return dfd;
    }
    _$jscoverage['recipe.unpack.js'][2659]++;
    args.push(set[0] + "?_=" + version + (set[1]? "#" + set[1]: ""));
}
  _$jscoverage['recipe.unpack.js'][2662]++;
  if (args.length) {
    _$jscoverage['recipe.unpack.js'][2663]++;
    args.push((function () {
  _$jscoverage['recipe.unpack.js'][2664]++;
  dfd.resolve(recipe.get.variables(libraries, isAmd));
}));
    _$jscoverage['recipe.unpack.js'][2666]++;
    head.js.apply(head, args);
  }
  else {
    _$jscoverage['recipe.unpack.js'][2668]++;
    dfd.resolve(recipe.get.variables(libraries, isAmd));
  }
}));
}));
  _$jscoverage['recipe.unpack.js'][2673]++;
  return dfd.promise;
}), methods = {init: (function () {
  _$jscoverage['recipe.unpack.js'][2677]++;
  var menu = recipe.get.menu();
  _$jscoverage['recipe.unpack.js'][2679]++;
  base = menu.replace(/\/[^\/]+$/, "");
  _$jscoverage['recipe.unpack.js'][2680]++;
  if (! menu) {
    _$jscoverage['recipe.unpack.js'][2681]++;
    throw "You might forget to order because of menu was not founded.";
  }
  _$jscoverage['recipe.unpack.js'][2684]++;
  recipe.setExportsFromAttribute();
  _$jscoverage['recipe.unpack.js'][2685]++;
  recipe.get.version().promise.then((function (version) {
  _$jscoverage['recipe.unpack.js'][2686]++;
  recipe.resolve(menu, version);
}));
}), resolve: (function (url, version) {
  _$jscoverage['recipe.unpack.js'][2691]++;
  var set = url.split("#");
  _$jscoverage['recipe.unpack.js'][2692]++;
  head.js(set[0] + "?_=" + version + (set[1]? "#" + set[1]: ""));
}), setExportsFromAttribute: (function () {
  _$jscoverage['recipe.unpack.js'][2695]++;
  var script = recipe.get.recipeTag() || {getAttribute: (function () {
})}, exports = (script.getAttribute("data-exports") || "").split(","), jQueryNoConflict = script.getAttribute("data-jquery-noconflict"), i, len, namespace, variable;
  _$jscoverage['recipe.unpack.js'][2703]++;
  for (i = 0, len = exports.length; i < len; i++) {
    _$jscoverage['recipe.unpack.js'][2704]++;
    namespace = exports[i];
    _$jscoverage['recipe.unpack.js'][2705]++;
    if (namespace) {
      _$jscoverage['recipe.unpack.js'][2706]++;
      variable = global[namespace];
      _$jscoverage['recipe.unpack.js'][2707]++;
      if (namespace === "jQuery" && jQueryNoConflict) {
        _$jscoverage['recipe.unpack.js'][2708]++;
        variable = global.jQuery.noConflict(jQueryNoConflict === "true"? true: undefined);
      }
      _$jscoverage['recipe.unpack.js'][2710]++;
      recipe.exports[namespace] = variable;
    }
}
}), get: {recipeTag: (function () {
  _$jscoverage['recipe.unpack.js'][2716]++;
  var scripts, i, len, script, src;
  _$jscoverage['recipe.unpack.js'][2722]++;
  if (cache.recipeTag) {
    _$jscoverage['recipe.unpack.js'][2723]++;
    return cache.recipeTag;
  }
  _$jscoverage['recipe.unpack.js'][2725]++;
  scripts = document.getElementsByTagName("script");
  _$jscoverage['recipe.unpack.js'][2727]++;
  if (scripts) {
    _$jscoverage['recipe.unpack.js'][2728]++;
    for (i = 0, len = scripts.length; i < len; i++) {
      _$jscoverage['recipe.unpack.js'][2729]++;
      script = scripts[i];
      _$jscoverage['recipe.unpack.js'][2730]++;
      src = script.src || "";
      _$jscoverage['recipe.unpack.js'][2731]++;
      if (/\/recipe\.js(\?.*)?$/.test(src) && script.getAttribute("data-menu")) {
        _$jscoverage['recipe.unpack.js'][2732]++;
        cache.recipeTag = script;
        _$jscoverage['recipe.unpack.js'][2733]++;
        return script;
      }
}
  }
}), menu: (function () {
  _$jscoverage['recipe.unpack.js'][2739]++;
  var script = recipe.get.recipeTag() || {getAttribute: (function () {
})}, menu = script.getAttribute("data-menu"), url = (script.getAttribute("src") || "").replace(/[^\/]+$/, "") + menu + ".js";
  _$jscoverage['recipe.unpack.js'][2742]++;
  return menu? url: "";
}), version: (function () {
  _$jscoverage['recipe.unpack.js'][2745]++;
  if (! recipe.version) {
    _$jscoverage['recipe.unpack.js'][2746]++;
    head.js(base + "/recipe.version.js?_=" + new Date().getTime(), (function () {
  _$jscoverage['recipe.unpack.js'][2747]++;
  dfd.version.resolve(recipe.version);
}));
  }
  else {
    _$jscoverage['recipe.unpack.js'][2750]++;
    dfd.version.resolve(recipe.version);
  }
  _$jscoverage['recipe.unpack.js'][2752]++;
  return dfd.version;
}), dependencies: (function (isAmd) {
  _$jscoverage['recipe.unpack.js'][2755]++;
  if (! recipe.dependencies) {
    _$jscoverage['recipe.unpack.js'][2756]++;
    head.js(base + "/recipe." + (isAmd? "amd.": "") + "dependencies.js?_=" + recipe.version, (function () {
  _$jscoverage['recipe.unpack.js'][2757]++;
  dfd.dependencies.resolve(recipe.dependencies);
}));
  }
  else {
    _$jscoverage['recipe.unpack.js'][2760]++;
    dfd.dependencies.resolve(recipe.dependencies);
  }
  _$jscoverage['recipe.unpack.js'][2762]++;
  return dfd.dependencies;
}), variables: (function (libraries, isAmd) {
  _$jscoverage['recipe.unpack.js'][2765]++;
  var variables = {}, exports = recipe.exports, namespace, i, len;
  _$jscoverage['recipe.unpack.js'][2770]++;
  if (isAmd) {
    _$jscoverage['recipe.unpack.js'][2771]++;
    for (i = 0, len = libraries.length; i < len; i++) {
      _$jscoverage['recipe.unpack.js'][2772]++;
      namespace = libraries[i];
      _$jscoverage['recipe.unpack.js'][2773]++;
      variables[namespace] = exports[namespace];
}
    _$jscoverage['recipe.unpack.js'][2775]++;
    return variables;
  }
})}};
  _$jscoverage['recipe.unpack.js'][2781]++;
  for (method in methods) {
    _$jscoverage['recipe.unpack.js'][2782]++;
    recipe[method] = methods[method];
}
  _$jscoverage['recipe.unpack.js'][2784]++;
  recipe.exports = recipe.exports || {Q: Q};
  _$jscoverage['recipe.unpack.js'][2786]++;
  recipe.init();
  _$jscoverage['recipe.unpack.js'][2787]++;
  return recipe;
})(this, head, Q);
})();
_$jscoverage['recipe.unpack.js'].source = ["/*!"," * Recipe.js  Cook your javascript with recipe.js"," * Author     sideroad"," * License    MIT"," *"," * Version    2.0.0"," * https://github.com/sideroad/recipe/"," */","(function(){","var Q;","// vim:ts=4:sts=4:sw=4:","/*!"," *"," * Copyright 2009-2012 Kris Kowal under the terms of the MIT"," * license found at http://github.com/kriskowal/q/raw/master/LICENSE"," *"," * With parts by Tyler Close"," * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found"," * at http://www.opensource.org/licenses/mit-license.html"," * Forked at ref_send.js version: 2009-05-11"," *"," * With parts by Mark Miller"," * Copyright (C) 2011 Google Inc."," *"," * Licensed under the Apache License, Version 2.0 (the \"License\");"," * you may not use this file except in compliance with the License."," * You may obtain a copy of the License at"," *"," * http://www.apache.org/licenses/LICENSE-2.0"," *"," * Unless required by applicable law or agreed to in writing, software"," * distributed under the License is distributed on an \"AS IS\" BASIS,"," * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," * See the License for the specific language governing permissions and"," * limitations under the License."," *"," */","","(function (definition) {","    // Turn off strict mode for this function so we can assign to global.Q","    /* jshint strict: false */","","    // This file will function properly as a &lt;script&gt; tag, or a module","    // using CommonJS and NodeJS or RequireJS module formats.  In","    // Common/Node/RequireJS, the module exports the Q API and when","    // executed as a simple &lt;script&gt;, it creates a Q global instead.","","    // Montage Require","    if (typeof bootstrap === \"function\") {","        bootstrap(\"promise\", definition);","","    // CommonJS","    } else if (typeof exports === \"object\") {","        module.exports = definition();","","    // RequireJS","    } else if (typeof define === \"function\" &amp;&amp; define.amd) {","        define(definition);","","    // SES (Secure EcmaScript)","    } else if (typeof ses !== \"undefined\") {","        if (!ses.ok()) {","            return;","        } else {","            ses.makeQ = definition;","        }","","    // &lt;script&gt;","    } else {","        Q = definition();","    }","","})(function () {","\"use strict\";","","var hasStacks = false;","try {","    throw new Error();","} catch (e) {","    hasStacks = !!e.stack;","}","","// All code after this point will be filtered from stack traces reported","// by Q.","var qStartingLine = captureLine();","var qFileName;","","// shims","","// used for fallback in \"allResolved\"","var noop = function () {};","","// Use the fastest possible means to execute a task in a future turn","// of the event loop.","var nextTick =(function () {","    // linked list of tasks (single, with head node)","    var head = {task: void 0, next: null};","    var tail = head;","    var flushing = false;","    var requestTick = void 0;","    var isNodeJS = false;","","    function flush() {","        /* jshint loopfunc: true */","","        while (head.next) {","            head = head.next;","            var task = head.task;","            head.task = void 0;","            var domain = head.domain;","","            if (domain) {","                head.domain = void 0;","                domain.enter();","            }","","            try {","                task();","","            } catch (e) {","                if (isNodeJS) {","                    // In node, uncaught exceptions are considered fatal errors.","                    // Re-throw them synchronously to interrupt flushing!","","                    // Ensure continuation if the uncaught exception is suppressed","                    // listening \"uncaughtException\" events (as domains does).","                    // Continue in next event to avoid tick recursion.","                    if (domain) {","                        domain.exit();","                    }","                    setTimeout(flush, 0);","                    if (domain) {","                        domain.enter();","                    }","","                    throw e;","","                } else {","                    // In browsers, uncaught exceptions are not fatal.","                    // Re-throw them asynchronously to avoid slow-downs.","                    setTimeout(function() {","                       throw e;","                    }, 0);","                }","            }","","            if (domain) {","                domain.exit();","            }","        }","","        flushing = false;","    }","","    nextTick = function (task) {","        tail = tail.next = {","            task: task,","            domain: isNodeJS &amp;&amp; process.domain,","            next: null","        };","","        if (!flushing) {","            flushing = true;","            requestTick();","        }","    };","","    if (typeof process !== \"undefined\" &amp;&amp; process.nextTick) {","        // Node.js before 0.9. Note that some fake-Node environments, like the","        // Mocha test runner, introduce a `process` global without a `nextTick`.","        isNodeJS = true;","","        requestTick = function () {","            process.nextTick(flush);","        };","","    } else if (typeof setImmediate === \"function\") {","        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate","        if (typeof window !== \"undefined\") {","            requestTick = setImmediate.bind(window, flush);","        } else {","            requestTick = function () {","                setImmediate(flush);","            };","        }","","    } else if (typeof MessageChannel !== \"undefined\") {","        // modern browsers","        // http://www.nonblocking.io/2011/06/windownexttick.html","        var channel = new MessageChannel();","        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create","        // working message ports the first time a page loads.","        channel.port1.onmessage = function () {","            requestTick = requestPortTick;","            channel.port1.onmessage = flush;","            flush();","        };","        var requestPortTick = function () {","            // Opera requires us to provide a message payload, regardless of","            // whether we use it.","            channel.port2.postMessage(0);","        };","        requestTick = function () {","            setTimeout(flush, 0);","            requestPortTick();","        };","","    } else {","        // old browsers","        requestTick = function () {","            setTimeout(flush, 0);","        };","    }","","    return nextTick;","})();","","// Attempt to make generics safe in the face of downstream","// modifications.","// There is no situation where this is necessary.","// If you need a security guarantee, these primordials need to be","// deeply frozen anyway, and if you don&#226;&#128;&#153;t need a security guarantee,","// this is just plain paranoid.","// However, this does have the nice side-effect of reducing the size","// of the code by reducing x.call() to merely x(), eliminating many","// hard-to-minify characters.","// See Mark Miller&#226;&#128;&#153;s explanation of what this does.","// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming","var call = Function.call;","function uncurryThis(f) {","    return function () {","        return call.apply(f, arguments);","    };","}","// This is equivalent, but slower:","// uncurryThis = Function_bind.bind(Function_bind.call);","// http://jsperf.com/uncurrythis","","var array_slice = uncurryThis(Array.prototype.slice);","","var array_reduce = uncurryThis(","    Array.prototype.reduce || function (callback, basis) {","        var index = 0,","            length = this.length;","        // concerning the initial value, if one is not provided","        if (arguments.length === 1) {","            // seek to the first value in the array, accounting","            // for the possibility that is is a sparse array","            do {","                if (index in this) {","                    basis = this[index++];","                    break;","                }","                if (++index &gt;= length) {","                    throw new TypeError();","                }","            } while (1);","        }","        // reduce","        for (; index &lt; length; index++) {","            // account for the possibility that the array is sparse","            if (index in this) {","                basis = callback(basis, this[index], index);","            }","        }","        return basis;","    }",");","","var array_indexOf = uncurryThis(","    Array.prototype.indexOf || function (value) {","        // not a very good shim, but good enough for our one use of it","        for (var i = 0; i &lt; this.length; i++) {","            if (this[i] === value) {","                return i;","            }","        }","        return -1;","    }",");","","var array_map = uncurryThis(","    Array.prototype.map || function (callback, thisp) {","        var self = this;","        var collect = [];","        array_reduce(self, function (undefined, value, index) {","            collect.push(callback.call(thisp, value, index, self));","        }, void 0);","        return collect;","    }",");","","var object_create = Object.create || function (prototype) {","    function Type() { }","    Type.prototype = prototype;","    return new Type();","};","","var object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);","","var object_keys = Object.keys || function (object) {","    var keys = [];","    for (var key in object) {","        if (object_hasOwnProperty(object, key)) {","            keys.push(key);","        }","    }","    return keys;","};","","var object_toString = uncurryThis(Object.prototype.toString);","","function isObject(value) {","    return value === Object(value);","}","","// generator related shims","","// FIXME: Remove this function once ES6 generators are in SpiderMonkey.","function isStopIteration(exception) {","    return (","        object_toString(exception) === \"[object StopIteration]\" ||","        exception instanceof QReturnValue","    );","}","","// FIXME: Remove this helper and Q.return once ES6 generators are in","// SpiderMonkey.","var QReturnValue;","if (typeof ReturnValue !== \"undefined\") {","    QReturnValue = ReturnValue;","} else {","    QReturnValue = function (value) {","        this.value = value;","    };","}","","// Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only","// engine that has a deployed base of browsers that support generators.","// However, SM's generators use the Python-inspired semantics of","// outdated ES6 drafts.  We would like to support ES6, but we'd also","// like to make it possible to use generators in deployed browsers, so","// we also support Python-style generators.  At some point we can remove","// this block.","var hasES6Generators;","try {","    /* jshint evil: true, nonew: false */","    new Function(\"(function* (){ yield 1; })\");","    hasES6Generators = true;","} catch (e) {","    hasES6Generators = false;","}","","// long stack traces","","var STACK_JUMP_SEPARATOR = \"From previous event:\";","","function makeStackTraceLong(error, promise) {","    // If possible, transform the error stack trace by removing Node and Q","    // cruft, then concatenating with the stack trace of `promise`. See #57.","    if (hasStacks &amp;&amp;","        promise.stack &amp;&amp;","        typeof error === \"object\" &amp;&amp;","        error !== null &amp;&amp;","        error.stack &amp;&amp;","        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1","    ) {","        var stacks = [];","        for (var p = promise; !!p; p = p.source) {","            if (p.stack) {","                stacks.unshift(p.stack);","            }","        }","        stacks.unshift(error.stack);","","        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");","        error.stack = filterStackString(concatedStacks);","    }","}","","function filterStackString(stackString) {","    var lines = stackString.split(\"\\n\");","    var desiredLines = [];","    for (var i = 0; i &lt; lines.length; ++i) {","        var line = lines[i];","","        if (!isInternalFrame(line) &amp;&amp; !isNodeFrame(line) &amp;&amp; line) {","            desiredLines.push(line);","        }","    }","    return desiredLines.join(\"\\n\");","}","","function isNodeFrame(stackLine) {","    return stackLine.indexOf(\"(module.js:\") !== -1 ||","           stackLine.indexOf(\"(node.js:\") !== -1;","}","","function getFileNameAndLineNumber(stackLine) {","    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"","    // In IE10 function name can have spaces (\"Anonymous function\") O_o","    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);","    if (attempt1) {","        return [attempt1[1], Number(attempt1[2])];","    }","","    // Anonymous functions: \"at filename:lineNumber:columnNumber\"","    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);","    if (attempt2) {","        return [attempt2[1], Number(attempt2[2])];","    }","","    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"","    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);","    if (attempt3) {","        return [attempt3[1], Number(attempt3[2])];","    }","}","","function isInternalFrame(stackLine) {","    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);","","    if (!fileNameAndLineNumber) {","        return false;","    }","","    var fileName = fileNameAndLineNumber[0];","    var lineNumber = fileNameAndLineNumber[1];","","    return fileName === qFileName &amp;&amp;","        lineNumber &gt;= qStartingLine &amp;&amp;","        lineNumber &lt;= qEndingLine;","}","","// discover own file name and line number range for filtering stack","// traces","function captureLine() {","    if (!hasStacks) {","        return;","    }","","    try {","        throw new Error();","    } catch (e) {","        var lines = e.stack.split(\"\\n\");","        var firstLine = lines[0].indexOf(\"@\") &gt; 0 ? lines[1] : lines[2];","        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);","        if (!fileNameAndLineNumber) {","            return;","        }","","        qFileName = fileNameAndLineNumber[0];","        return fileNameAndLineNumber[1];","    }","}","","function deprecate(callback, name, alternative) {","    return function () {","        if (typeof console !== \"undefined\" &amp;&amp;","            typeof console.warn === \"function\") {","            console.warn(name + \" is deprecated, use \" + alternative +","                         \" instead.\", new Error(\"\").stack);","        }","        return callback.apply(callback, arguments);","    };","}","","// end of shims","// beginning of real work","","/**"," * Constructs a promise for an immediate reference, passes promises through, or"," * coerces promises from different systems."," * @param value immediate reference or promise"," */","function Q(value) {","    // If the object is already a Promise, return it directly.  This enables","    // the resolve function to both be used to created references from objects,","    // but to tolerably coerce non-promises to promises.","    if (isPromise(value)) {","        return value;","    }","","    // assimilate thenables","    if (isPromiseAlike(value)) {","        return coerce(value);","    } else {","        return fulfill(value);","    }","}","Q.resolve = Q;","","/**"," * Performs a task in a future turn of the event loop."," * @param {Function} task"," */","Q.nextTick = nextTick;","","/**"," * Controls whether or not long stack traces will be on"," */","Q.longStackSupport = false;","","/**"," * Constructs a {promise, resolve, reject} object."," *"," * `resolve` is a callback to invoke with a more resolved value for the"," * promise. To fulfill the promise, invoke `resolve` with any value that is"," * not a thenable. To reject the promise, invoke `resolve` with a rejected"," * thenable, or invoke `reject` with the reason directly. To resolve the"," * promise to another thenable, thus putting it in the same state, invoke"," * `resolve` with that other thenable."," */","Q.defer = defer;","function defer() {","    // if \"messages\" is an \"Array\", that indicates that the promise has not yet","    // been resolved.  If it is \"undefined\", it has been resolved.  Each","    // element of the messages array is itself an array of complete arguments to","    // forward to the resolved promise.  We coerce the resolution value to a","    // promise using the `resolve` function because it handles both fully","    // non-thenable values and other thenables gracefully.","    var messages = [], progressListeners = [], resolvedPromise;","","    var deferred = object_create(defer.prototype);","    var promise = object_create(Promise.prototype);","","    promise.promiseDispatch = function (resolve, op, operands) {","        var args = array_slice(arguments);","        if (messages) {","            messages.push(args);","            if (op === \"when\" &amp;&amp; operands[1]) { // progress operand","                progressListeners.push(operands[1]);","            }","        } else {","            nextTick(function () {","                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);","            });","        }","    };","","    // XXX deprecated","    promise.valueOf = deprecate(function () {","        if (messages) {","            return promise;","        }","        var nearerValue = nearer(resolvedPromise);","        if (isPromise(nearerValue)) {","            resolvedPromise = nearerValue; // shorten chain","        }","        return nearerValue;","    }, \"valueOf\", \"inspect\");","","    promise.inspect = function () {","        if (!resolvedPromise) {","            return { state: \"pending\" };","        }","        return resolvedPromise.inspect();","    };","","    if (Q.longStackSupport &amp;&amp; hasStacks) {","        try {","            throw new Error();","        } catch (e) {","            // NOTE: don't try to use `Error.captureStackTrace` or transfer the","            // accessor around; that causes memory leaks as per GH-111. Just","            // reify the stack trace as a string ASAP.","            //","            // At the same time, cut off the first line; it's always just","            // \"[object Promise]\\n\", as per the `toString`.","            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);","        }","    }","","    // NOTE: we do the checks for `resolvedPromise` in each method, instead of","    // consolidating them into `become`, since otherwise we'd create new","    // promises with the lines `become(whatever(value))`. See e.g. GH-252.","","    function become(newPromise) {","        resolvedPromise = newPromise;","        promise.source = newPromise;","","        array_reduce(messages, function (undefined, message) {","            nextTick(function () {","                newPromise.promiseDispatch.apply(newPromise, message);","            });","        }, void 0);","","        messages = void 0;","        progressListeners = void 0;","    }","","    deferred.promise = promise;","    deferred.resolve = function (value) {","        if (resolvedPromise) {","            return;","        }","","        become(Q(value));","    };","","    deferred.fulfill = function (value) {","        if (resolvedPromise) {","            return;","        }","","        become(fulfill(value));","    };","    deferred.reject = function (reason) {","        if (resolvedPromise) {","            return;","        }","","        become(reject(reason));","    };","    deferred.notify = function (progress) {","        if (resolvedPromise) {","            return;","        }","","        array_reduce(progressListeners, function (undefined, progressListener) {","            nextTick(function () {","                progressListener(progress);","            });","        }, void 0);","    };","","    return deferred;","}","","/**"," * Creates a Node-style callback that will resolve or reject the deferred"," * promise."," * @returns a nodeback"," */","defer.prototype.makeNodeResolver = function () {","    var self = this;","    return function (error, value) {","        if (error) {","            self.reject(error);","        } else if (arguments.length &gt; 2) {","            self.resolve(array_slice(arguments, 1));","        } else {","            self.resolve(value);","        }","    };","};","","/**"," * @param resolver {Function} a function that returns nothing and accepts"," * the resolve, reject, and notify functions for a deferred."," * @returns a promise that may be resolved with the given resolve and reject"," * functions, or rejected by a thrown exception in resolver"," */","Q.promise = promise;","function promise(resolver) {","    if (typeof resolver !== \"function\") {","        throw new TypeError(\"resolver must be a function.\");","    }","    var deferred = defer();","    try {","        resolver(deferred.resolve, deferred.reject, deferred.notify);","    } catch (reason) {","        deferred.reject(reason);","    }","    return deferred.promise;","}","","// XXX experimental.  This method is a way to denote that a local value is","// serializable and should be immediately dispatched to a remote upon request,","// instead of passing a reference.","Q.passByCopy = function (object) {","    //freeze(object);","    //passByCopies.set(object, true);","    return object;","};","","Promise.prototype.passByCopy = function () {","    //freeze(object);","    //passByCopies.set(object, true);","    return this;","};","","/**"," * If two promises eventually fulfill to the same value, promises that value,"," * but otherwise rejects."," * @param x {Any*}"," * @param y {Any*}"," * @returns {Any*} a promise for x and y if they are the same, but a rejection"," * otherwise."," *"," */","Q.join = function (x, y) {","    return Q(x).join(y);","};","","Promise.prototype.join = function (that) {","    return Q([this, that]).spread(function (x, y) {","        if (x === y) {","            // TODO: \"===\" should be Object.is or equiv","            return x;","        } else {","            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);","        }","    });","};","","/**"," * Returns a promise for the first of an array of promises to become fulfilled."," * @param answers {Array[Any*]} promises to race"," * @returns {Any*} the first promise to be fulfilled"," */","Q.race = race;","function race(answerPs) {","    return promise(function(resolve, reject) {","        // Switch to this once we can assume at least ES5","        // answerPs.forEach(function(answerP) {","        //     Q(answerP).then(resolve, reject);","        // });","        // Use this in the meantime","        for (var i = 0, len = answerPs.length; i &lt; len; i++) {","            Q(answerPs[i]).then(resolve, reject);","        }","    });","}","","Promise.prototype.race = function () {","    return this.then(Q.race);","};","","/**"," * Constructs a Promise with a promise descriptor object and optional fallback"," * function.  The descriptor contains methods like when(rejected), get(name),"," * set(name, value), post(name, args), and delete(name), which all"," * return either a value, a promise for a value, or a rejection.  The fallback"," * accepts the operation name, a resolver, and any further arguments that would"," * have been forwarded to the appropriate method above had a method been"," * provided with the proper name.  The API makes no guarantees about the nature"," * of the returned object, apart from that it is usable whereever promises are"," * bought and sold."," */","Q.makePromise = Promise;","function Promise(descriptor, fallback, inspect) {","    if (fallback === void 0) {","        fallback = function (op) {","            return reject(new Error(","                \"Promise does not support operation: \" + op","            ));","        };","    }","    if (inspect === void 0) {","        inspect = function () {","            return {state: \"unknown\"};","        };","    }","","    var promise = object_create(Promise.prototype);","","    promise.promiseDispatch = function (resolve, op, args) {","        var result;","        try {","            if (descriptor[op]) {","                result = descriptor[op].apply(promise, args);","            } else {","                result = fallback.call(promise, op, args);","            }","        } catch (exception) {","            result = reject(exception);","        }","        if (resolve) {","            resolve(result);","        }","    };","","    promise.inspect = inspect;","","    // XXX deprecated `valueOf` and `exception` support","    if (inspect) {","        var inspected = inspect();","        if (inspected.state === \"rejected\") {","            promise.exception = inspected.reason;","        }","","        promise.valueOf = deprecate(function () {","            var inspected = inspect();","            if (inspected.state === \"pending\" ||","                inspected.state === \"rejected\") {","                return promise;","            }","            return inspected.value;","        });","    }","","    return promise;","}","","Promise.prototype.toString = function () {","    return \"[object Promise]\";","};","","Promise.prototype.then = function (fulfilled, rejected, progressed) {","    var self = this;","    var deferred = defer();","    var done = false;   // ensure the untrusted promise makes at most a","                        // single call to one of the callbacks","","    function _fulfilled(value) {","        try {","            return typeof fulfilled === \"function\" ? fulfilled(value) : value;","        } catch (exception) {","            return reject(exception);","        }","    }","","    function _rejected(exception) {","        if (typeof rejected === \"function\") {","            makeStackTraceLong(exception, self);","            try {","                return rejected(exception);","            } catch (newException) {","                return reject(newException);","            }","        }","        return reject(exception);","    }","","    function _progressed(value) {","        return typeof progressed === \"function\" ? progressed(value) : value;","    }","","    nextTick(function () {","        self.promiseDispatch(function (value) {","            if (done) {","                return;","            }","            done = true;","","            deferred.resolve(_fulfilled(value));","        }, \"when\", [function (exception) {","            if (done) {","                return;","            }","            done = true;","","            deferred.resolve(_rejected(exception));","        }]);","    });","","    // Progress propagator need to be attached in the current tick.","    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {","        var newValue;","        var threw = false;","        try {","            newValue = _progressed(value);","        } catch (e) {","            threw = true;","            if (Q.onerror) {","                Q.onerror(e);","            } else {","                throw e;","            }","        }","","        if (!threw) {","            deferred.notify(newValue);","        }","    }]);","","    return deferred.promise;","};","","/**"," * Registers an observer on a promise."," *"," * Guarantees:"," *"," * 1. that fulfilled and rejected will be called only once."," * 2. that either the fulfilled callback or the rejected callback will be"," *    called, but not both."," * 3. that fulfilled and rejected will not be called in this turn."," *"," * @param value      promise or immediate reference to observe"," * @param fulfilled  function to be called with the fulfilled value"," * @param rejected   function to be called with the rejection exception"," * @param progressed function to be called on any progress notifications"," * @return promise for the return value from the invoked callback"," */","Q.when = when;","function when(value, fulfilled, rejected, progressed) {","    return Q(value).then(fulfilled, rejected, progressed);","}","","Promise.prototype.thenResolve = function (value) {","    return this.then(function () { return value; });","};","","Q.thenResolve = function (promise, value) {","    return Q(promise).thenResolve(value);","};","","Promise.prototype.thenReject = function (reason) {","    return this.then(function () { throw reason; });","};","","Q.thenReject = function (promise, reason) {","    return Q(promise).thenReject(reason);","};","","/**"," * If an object is not a promise, it is as \"near\" as possible."," * If a promise is rejected, it is as \"near\" as possible too."," * If it&#226;&#128;&#153;s a fulfilled promise, the fulfillment value is nearer."," * If it&#226;&#128;&#153;s a deferred promise and the deferred has been resolved, the"," * resolution is \"nearer\"."," * @param object"," * @returns most resolved (nearest) form of the object"," */","","// XXX should we re-do this?","Q.nearer = nearer;","function nearer(value) {","    if (isPromise(value)) {","        var inspected = value.inspect();","        if (inspected.state === \"fulfilled\") {","            return inspected.value;","        }","    }","    return value;","}","","/**"," * @returns whether the given object is a promise."," * Otherwise it is a fulfilled value."," */","Q.isPromise = isPromise;","function isPromise(object) {","    return isObject(object) &amp;&amp;","        typeof object.promiseDispatch === \"function\" &amp;&amp;","        typeof object.inspect === \"function\";","}","","Q.isPromiseAlike = isPromiseAlike;","function isPromiseAlike(object) {","    return isObject(object) &amp;&amp; typeof object.then === \"function\";","}","","/**"," * @returns whether the given object is a pending promise, meaning not"," * fulfilled or rejected."," */","Q.isPending = isPending;","function isPending(object) {","    return isPromise(object) &amp;&amp; object.inspect().state === \"pending\";","}","","Promise.prototype.isPending = function () {","    return this.inspect().state === \"pending\";","};","","/**"," * @returns whether the given object is a value or fulfilled"," * promise."," */","Q.isFulfilled = isFulfilled;","function isFulfilled(object) {","    return !isPromise(object) || object.inspect().state === \"fulfilled\";","}","","Promise.prototype.isFulfilled = function () {","    return this.inspect().state === \"fulfilled\";","};","","/**"," * @returns whether the given object is a rejected promise."," */","Q.isRejected = isRejected;","function isRejected(object) {","    return isPromise(object) &amp;&amp; object.inspect().state === \"rejected\";","}","","Promise.prototype.isRejected = function () {","    return this.inspect().state === \"rejected\";","};","","//// BEGIN UNHANDLED REJECTION TRACKING","","// This promise library consumes exceptions thrown in handlers so they can be","// handled by a subsequent promise.  The exceptions get added to this array when","// they are created, and removed when they are handled.  Note that in ES6 or","// shimmed environments, this would naturally be a `Set`.","var unhandledReasons = [];","var unhandledRejections = [];","var unhandledReasonsDisplayed = false;","var trackUnhandledRejections = true;","function displayUnhandledReasons() {","    if (","        !unhandledReasonsDisplayed &amp;&amp;","        typeof window !== \"undefined\" &amp;&amp;","        !window.Touch &amp;&amp;","        window.console","    ) {","        console.warn(\"[Q] Unhandled rejection reasons (should be empty):\",","                     unhandledReasons);","    }","","    unhandledReasonsDisplayed = true;","}","","function logUnhandledReasons() {","    for (var i = 0; i &lt; unhandledReasons.length; i++) {","        var reason = unhandledReasons[i];","        console.warn(\"Unhandled rejection reason:\", reason);","    }","}","","function resetUnhandledRejections() {","    unhandledReasons.length = 0;","    unhandledRejections.length = 0;","    unhandledReasonsDisplayed = false;","","    if (!trackUnhandledRejections) {","        trackUnhandledRejections = true;","","        // Show unhandled rejection reasons if Node exits without handling an","        // outstanding rejection.  (Note that Browserify presently produces a","        // `process` global without the `EventEmitter` `on` method.)","        if (typeof process !== \"undefined\" &amp;&amp; process.on) {","            process.on(\"exit\", logUnhandledReasons);","        }","    }","}","","function trackRejection(promise, reason) {","    if (!trackUnhandledRejections) {","        return;","    }","","    unhandledRejections.push(promise);","    if (reason &amp;&amp; typeof reason.stack !== \"undefined\") {","        unhandledReasons.push(reason.stack);","    } else {","        unhandledReasons.push(\"(no stack) \" + reason);","    }","    displayUnhandledReasons();","}","","function untrackRejection(promise) {","    if (!trackUnhandledRejections) {","        return;","    }","","    var at = array_indexOf(unhandledRejections, promise);","    if (at !== -1) {","        unhandledRejections.splice(at, 1);","        unhandledReasons.splice(at, 1);","    }","}","","Q.resetUnhandledRejections = resetUnhandledRejections;","","Q.getUnhandledReasons = function () {","    // Make a copy so that consumers can't interfere with our internal state.","    return unhandledReasons.slice();","};","","Q.stopUnhandledRejectionTracking = function () {","    resetUnhandledRejections();","    if (typeof process !== \"undefined\" &amp;&amp; process.on) {","        process.removeListener(\"exit\", logUnhandledReasons);","    }","    trackUnhandledRejections = false;","};","","resetUnhandledRejections();","","//// END UNHANDLED REJECTION TRACKING","","/**"," * Constructs a rejected promise."," * @param reason value describing the failure"," */","Q.reject = reject;","function reject(reason) {","    var rejection = Promise({","        \"when\": function (rejected) {","            // note that the error has been handled","            if (rejected) {","                untrackRejection(this);","            }","            return rejected ? rejected(reason) : this;","        }","    }, function fallback() {","        return this;","    }, function inspect() {","        return { state: \"rejected\", reason: reason };","    });","","    // Note that the reason has not been handled.","    trackRejection(rejection, reason);","","    return rejection;","}","","/**"," * Constructs a fulfilled promise for an immediate reference."," * @param value immediate reference"," */","Q.fulfill = fulfill;","function fulfill(value) {","    return Promise({","        \"when\": function () {","            return value;","        },","        \"get\": function (name) {","            return value[name];","        },","        \"set\": function (name, rhs) {","            value[name] = rhs;","        },","        \"delete\": function (name) {","            delete value[name];","        },","        \"post\": function (name, args) {","            // Mark Miller proposes that post with no name should apply a","            // promised function.","            if (name === null || name === void 0) {","                return value.apply(void 0, args);","            } else {","                return value[name].apply(value, args);","            }","        },","        \"apply\": function (thisp, args) {","            return value.apply(thisp, args);","        },","        \"keys\": function () {","            return object_keys(value);","        }","    }, void 0, function inspect() {","        return { state: \"fulfilled\", value: value };","    });","}","","/**"," * Converts thenables to Q promises."," * @param promise thenable promise"," * @returns a Q promise"," */","function coerce(promise) {","    var deferred = defer();","    nextTick(function () {","        try {","            promise.then(deferred.resolve, deferred.reject, deferred.notify);","        } catch (exception) {","            deferred.reject(exception);","        }","    });","    return deferred.promise;","}","","/**"," * Annotates an object such that it will never be"," * transferred away from this process over any promise"," * communication channel."," * @param object"," * @returns promise a wrapping of that object that"," * additionally responds to the \"isDef\" message"," * without a rejection."," */","Q.master = master;","function master(object) {","    return Promise({","        \"isDef\": function () {}","    }, function fallback(op, args) {","        return dispatch(object, op, args);","    }, function () {","        return Q(object).inspect();","    });","}","","/**"," * Spreads the values of a promised array of arguments into the"," * fulfillment callback."," * @param fulfilled callback that receives variadic arguments from the"," * promised array"," * @param rejected callback that receives the exception if the promise"," * is rejected."," * @returns a promise for the return value or thrown exception of"," * either callback."," */","Q.spread = spread;","function spread(value, fulfilled, rejected) {","    return Q(value).spread(fulfilled, rejected);","}","","Promise.prototype.spread = function (fulfilled, rejected) {","    return this.all().then(function (array) {","        return fulfilled.apply(void 0, array);","    }, rejected);","};","","/**"," * The async function is a decorator for generator functions, turning"," * them into asynchronous generators.  Although generators are only part"," * of the newest ECMAScript 6 drafts, this code does not cause syntax"," * errors in older engines.  This code should continue to work and will"," * in fact improve over time as the language improves."," *"," * ES6 generators are currently part of V8 version 3.19 with the"," * --harmony-generators runtime flag enabled.  SpiderMonkey has had them"," * for longer, but under an older Python-inspired form.  This function"," * works on both kinds of generators."," *"," * Decorates a generator function such that:"," *  - it may yield promises"," *  - execution will continue when that promise is fulfilled"," *  - the value of the yield expression will be the fulfilled value"," *  - it returns a promise for the return value (when the generator"," *    stops iterating)"," *  - the decorated function returns a promise for the return value"," *    of the generator or the first rejected promise among those"," *    yielded."," *  - if an error is thrown in the generator, it propagates through"," *    every following yield until it is caught, or until it escapes"," *    the generator function altogether, and is translated into a"," *    rejection for the promise returned by the decorated generator."," */","Q.async = async;","function async(makeGenerator) {","    return function () {","        // when verb is \"send\", arg is a value","        // when verb is \"throw\", arg is an exception","        function continuer(verb, arg) {","            var result;","            if (hasES6Generators) {","                try {","                    result = generator[verb](arg);","                } catch (exception) {","                    return reject(exception);","                }","                if (result.done) {","                    return result.value;","                } else {","                    return when(result.value, callback, errback);","                }","            } else {","                // FIXME: Remove this case when SM does ES6 generators.","                try {","                    result = generator[verb](arg);","                } catch (exception) {","                    if (isStopIteration(exception)) {","                        return exception.value;","                    } else {","                        return reject(exception);","                    }","                }","                return when(result, callback, errback);","            }","        }","        var generator = makeGenerator.apply(this, arguments);","        var callback = continuer.bind(continuer, \"next\");","        var errback = continuer.bind(continuer, \"throw\");","        return callback();","    };","}","","/**"," * The spawn function is a small wrapper around async that immediately"," * calls the generator and also ends the promise chain, so that any"," * unhandled errors are thrown instead of forwarded to the error"," * handler. This is useful because it's extremely common to run"," * generators at the top-level to work with libraries."," */","Q.spawn = spawn;","function spawn(makeGenerator) {","    Q.done(Q.async(makeGenerator)());","}","","// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.","/**"," * Throws a ReturnValue exception to stop an asynchronous generator."," *"," * This interface is a stop-gap measure to support generator return"," * values in older Firefox/SpiderMonkey.  In browsers that support ES6"," * generators like Chromium 29, just use \"return\" in your generator"," * functions."," *"," * @param value the return value for the surrounding generator"," * @throws ReturnValue exception with the value."," * @example"," * // ES6 style"," * Q.async(function* () {"," *      var foo = yield getFooPromise();"," *      var bar = yield getBarPromise();"," *      return foo + bar;"," * })"," * // Older SpiderMonkey style"," * Q.async(function () {"," *      var foo = yield getFooPromise();"," *      var bar = yield getBarPromise();"," *      Q.return(foo + bar);"," * })"," */","Q[\"return\"] = _return;","function _return(value) {","    throw new QReturnValue(value);","}","","/**"," * The promised function decorator ensures that any promise arguments"," * are settled and passed as values (`this` is also settled and passed"," * as a value).  It will also ensure that the result of a function is"," * always a promise."," *"," * @example"," * var add = Q.promised(function (a, b) {"," *     return a + b;"," * });"," * add(Q(a), Q(B));"," *"," * @param {function} callback The function to decorate"," * @returns {function} a function that has been decorated."," */","Q.promised = promised;","function promised(callback) {","    return function () {","        return spread([this, all(arguments)], function (self, args) {","            return callback.apply(self, args);","        });","    };","}","","/**"," * sends a message to a value in a future turn"," * @param object* the recipient"," * @param op the name of the message operation, e.g., \"when\","," * @param args further arguments to be forwarded to the operation"," * @returns result {Promise} a promise for the result of the operation"," */","Q.dispatch = dispatch;","function dispatch(object, op, args) {","    return Q(object).dispatch(op, args);","}","","Promise.prototype.dispatch = function (op, args) {","    var self = this;","    var deferred = defer();","    nextTick(function () {","        self.promiseDispatch(deferred.resolve, op, args);","    });","    return deferred.promise;","};","","/**"," * Gets the value of a property in a future turn."," * @param object    promise or immediate reference for target object"," * @param name      name of property to get"," * @return promise for the property value"," */","Q.get = function (object, key) {","    return Q(object).dispatch(\"get\", [key]);","};","","Promise.prototype.get = function (key) {","    return this.dispatch(\"get\", [key]);","};","","/**"," * Sets the value of a property in a future turn."," * @param object    promise or immediate reference for object object"," * @param name      name of property to set"," * @param value     new value of property"," * @return promise for the return value"," */","Q.set = function (object, key, value) {","    return Q(object).dispatch(\"set\", [key, value]);","};","","Promise.prototype.set = function (key, value) {","    return this.dispatch(\"set\", [key, value]);","};","","/**"," * Deletes a property in a future turn."," * @param object    promise or immediate reference for target object"," * @param name      name of property to delete"," * @return promise for the return value"," */","Q.del = // XXX legacy","Q[\"delete\"] = function (object, key) {","    return Q(object).dispatch(\"delete\", [key]);","};","","Promise.prototype.del = // XXX legacy","Promise.prototype[\"delete\"] = function (key) {","    return this.dispatch(\"delete\", [key]);","};","","/**"," * Invokes a method in a future turn."," * @param object    promise or immediate reference for target object"," * @param name      name of method to invoke"," * @param value     a value to post, typically an array of"," *                  invocation arguments for promises that"," *                  are ultimately backed with `resolve` values,"," *                  as opposed to those backed with URLs"," *                  wherein the posted value can be any"," *                  JSON serializable object."," * @return promise for the return value"," */","// bound locally because it is used by other methods","Q.mapply = // XXX As proposed by \"Redsandro\"","Q.post = function (object, name, args) {","    return Q(object).dispatch(\"post\", [name, args]);","};","","Promise.prototype.mapply = // XXX As proposed by \"Redsandro\"","Promise.prototype.post = function (name, args) {","    return this.dispatch(\"post\", [name, args]);","};","","/**"," * Invokes a method in a future turn."," * @param object    promise or immediate reference for target object"," * @param name      name of method to invoke"," * @param ...args   array of invocation arguments"," * @return promise for the return value"," */","Q.send = // XXX Mark Miller's proposed parlance","Q.mcall = // XXX As proposed by \"Redsandro\"","Q.invoke = function (object, name /*...args*/) {","    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);","};","","Promise.prototype.send = // XXX Mark Miller's proposed parlance","Promise.prototype.mcall = // XXX As proposed by \"Redsandro\"","Promise.prototype.invoke = function (name /*...args*/) {","    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);","};","","/**"," * Applies the promised function in a future turn."," * @param object    promise or immediate reference for target function"," * @param args      array of application arguments"," */","Q.fapply = function (object, args) {","    return Q(object).dispatch(\"apply\", [void 0, args]);","};","","Promise.prototype.fapply = function (args) {","    return this.dispatch(\"apply\", [void 0, args]);","};","","/**"," * Calls the promised function in a future turn."," * @param object    promise or immediate reference for target function"," * @param ...args   array of application arguments"," */","Q[\"try\"] =","Q.fcall = function (object /* ...args*/) {","    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);","};","","Promise.prototype.fcall = function (/*...args*/) {","    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);","};","","/**"," * Binds the promised function, transforming return values into a fulfilled"," * promise and thrown errors into a rejected one."," * @param object    promise or immediate reference for target function"," * @param ...args   array of application arguments"," */","Q.fbind = function (object /*...args*/) {","    var promise = Q(object);","    var args = array_slice(arguments, 1);","    return function fbound() {","        return promise.dispatch(\"apply\", [","            this,","            args.concat(array_slice(arguments))","        ]);","    };","};","Promise.prototype.fbind = function (/*...args*/) {","    var promise = this;","    var args = array_slice(arguments);","    return function fbound() {","        return promise.dispatch(\"apply\", [","            this,","            args.concat(array_slice(arguments))","        ]);","    };","};","","/**"," * Requests the names of the owned properties of a promised"," * object in a future turn."," * @param object    promise or immediate reference for target object"," * @return promise for the keys of the eventually settled object"," */","Q.keys = function (object) {","    return Q(object).dispatch(\"keys\", []);","};","","Promise.prototype.keys = function () {","    return this.dispatch(\"keys\", []);","};","","/**"," * Turns an array of promises into a promise for an array.  If any of"," * the promises gets rejected, the whole array is rejected immediately."," * @param {Array*} an array (or promise for an array) of values (or"," * promises for values)"," * @returns a promise for an array of the corresponding values"," */","// By Mark Miller","// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&amp;rev=1308776521#allfulfilled","Q.all = all;","function all(promises) {","    return when(promises, function (promises) {","        var countDown = 0;","        var deferred = defer();","        array_reduce(promises, function (undefined, promise, index) {","            var snapshot;","            if (","                isPromise(promise) &amp;&amp;","                (snapshot = promise.inspect()).state === \"fulfilled\"","            ) {","                promises[index] = snapshot.value;","            } else {","                ++countDown;","                when(","                    promise,","                    function (value) {","                        promises[index] = value;","                        if (--countDown === 0) {","                            deferred.resolve(promises);","                        }","                    },","                    deferred.reject,","                    function (progress) {","                        deferred.notify({ index: index, value: progress });","                    }","                );","            }","        }, void 0);","        if (countDown === 0) {","            deferred.resolve(promises);","        }","        return deferred.promise;","    });","}","","Promise.prototype.all = function () {","    return all(this);","};","","/**"," * Waits for all promises to be settled, either fulfilled or"," * rejected.  This is distinct from `all` since that would stop"," * waiting at the first rejection.  The promise returned by"," * `allResolved` will never be rejected."," * @param promises a promise for an array (or an array) of promises"," * (or values)"," * @return a promise for an array of promises"," */","Q.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");","function allResolved(promises) {","    return when(promises, function (promises) {","        promises = array_map(promises, Q);","        return when(all(array_map(promises, function (promise) {","            return when(promise, noop, noop);","        })), function () {","            return promises;","        });","    });","}","","Promise.prototype.allResolved = function () {","    return allResolved(this);","};","","/**"," * @see Promise#allSettled"," */","Q.allSettled = allSettled;","function allSettled(promises) {","    return Q(promises).allSettled();","}","","/**"," * Turns an array of promises into a promise for an array of their states (as"," * returned by `inspect`) when they have all settled."," * @param {Array[Any*]} values an array (or promise for an array) of values (or"," * promises for values)"," * @returns {Array[State]} an array of states for the respective values."," */","Promise.prototype.allSettled = function () {","    return this.then(function (promises) {","        return all(array_map(promises, function (promise) {","            promise = Q(promise);","            function regardless() {","                return promise.inspect();","            }","            return promise.then(regardless, regardless);","        }));","    });","};","","/**"," * Captures the failure of a promise, giving an oportunity to recover"," * with a callback.  If the given promise is fulfilled, the returned"," * promise is fulfilled."," * @param {Any*} promise for something"," * @param {Function} callback to fulfill the returned promise if the"," * given promise is rejected"," * @returns a promise for the return value of the callback"," */","Q.fail = // XXX legacy","Q[\"catch\"] = function (object, rejected) {","    return Q(object).then(void 0, rejected);","};","","Promise.prototype.fail = // XXX legacy","Promise.prototype[\"catch\"] = function (rejected) {","    return this.then(void 0, rejected);","};","","/**"," * Attaches a listener that can respond to progress notifications from a"," * promise's originating deferred. This listener receives the exact arguments"," * passed to ``deferred.notify``."," * @param {Any*} promise for something"," * @param {Function} callback to receive any progress notifications"," * @returns the given promise, unchanged"," */","Q.progress = progress;","function progress(object, progressed) {","    return Q(object).then(void 0, void 0, progressed);","}","","Promise.prototype.progress = function (progressed) {","    return this.then(void 0, void 0, progressed);","};","","/**"," * Provides an opportunity to observe the settling of a promise,"," * regardless of whether the promise is fulfilled or rejected.  Forwards"," * the resolution to the returned promise when the callback is done."," * The callback can return a promise to defer completion."," * @param {Any*} promise"," * @param {Function} callback to observe the resolution of the given"," * promise, takes no arguments."," * @returns a promise for the resolution of the given promise when"," * ``fin`` is done."," */","Q.fin = // XXX legacy","Q[\"finally\"] = function (object, callback) {","    return Q(object)[\"finally\"](callback);","};","","Promise.prototype.fin = // XXX legacy","Promise.prototype[\"finally\"] = function (callback) {","    callback = Q(callback);","    return this.then(function (value) {","        return callback.fcall().then(function () {","            return value;","        });","    }, function (reason) {","        // TODO attempt to recycle the rejection with \"this\".","        return callback.fcall().then(function () {","            throw reason;","        });","    });","};","","/**"," * Terminates a chain of promises, forcing rejections to be"," * thrown as exceptions."," * @param {Any*} promise at the end of a chain of promises"," * @returns nothing"," */","Q.done = function (object, fulfilled, rejected, progress) {","    return Q(object).done(fulfilled, rejected, progress);","};","","Promise.prototype.done = function (fulfilled, rejected, progress) {","    var onUnhandledError = function (error) {","        // forward to a future turn so that ``when``","        // does not catch it and turn it into a rejection.","        nextTick(function () {","            makeStackTraceLong(error, promise);","            if (Q.onerror) {","                Q.onerror(error);","            } else {","                throw error;","            }","        });","    };","","    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.","    var promise = fulfilled || rejected || progress ?","        this.then(fulfilled, rejected, progress) :","        this;","","    if (typeof process === \"object\" &amp;&amp; process &amp;&amp; process.domain) {","        onUnhandledError = process.domain.bind(onUnhandledError);","    }","","    promise.then(void 0, onUnhandledError);","};","","/**"," * Causes a promise to be rejected if it does not get fulfilled before"," * some milliseconds time out."," * @param {Any*} promise"," * @param {Number} milliseconds timeout"," * @param {String} custom error message (optional)"," * @returns a promise for the resolution of the given promise if it is"," * fulfilled before the timeout, otherwise rejected."," */","Q.timeout = function (object, ms, message) {","    return Q(object).timeout(ms, message);","};","","Promise.prototype.timeout = function (ms, message) {","    var deferred = defer();","    var timeoutId = setTimeout(function () {","        deferred.reject(new Error(message || \"Timed out after \" + ms + \" ms\"));","    }, ms);","","    this.then(function (value) {","        clearTimeout(timeoutId);","        deferred.resolve(value);","    }, function (exception) {","        clearTimeout(timeoutId);","        deferred.reject(exception);","    }, deferred.notify);","","    return deferred.promise;","};","","/**"," * Returns a promise for the given value (or promised value), some"," * milliseconds after it resolved. Passes rejections immediately."," * @param {Any*} promise"," * @param {Number} milliseconds"," * @returns a promise for the resolution of the given promise after milliseconds"," * time has elapsed since the resolution of the given promise."," * If the given promise rejects, that is passed immediately."," */","Q.delay = function (object, timeout) {","    if (timeout === void 0) {","        timeout = object;","        object = void 0;","    }","    return Q(object).delay(timeout);","};","","Promise.prototype.delay = function (timeout) {","    return this.then(function (value) {","        var deferred = defer();","        setTimeout(function () {","            deferred.resolve(value);","        }, timeout);","        return deferred.promise;","    });","};","","/**"," * Passes a continuation to a Node function, which is called with the given"," * arguments provided as an array, and returns a promise."," *"," *      Q.nfapply(FS.readFile, [__filename])"," *      .then(function (content) {"," *      })"," *"," */","Q.nfapply = function (callback, args) {","    return Q(callback).nfapply(args);","};","","Promise.prototype.nfapply = function (args) {","    var deferred = defer();","    var nodeArgs = array_slice(args);","    nodeArgs.push(deferred.makeNodeResolver());","    this.fapply(nodeArgs).fail(deferred.reject);","    return deferred.promise;","};","","/**"," * Passes a continuation to a Node function, which is called with the given"," * arguments provided individually, and returns a promise."," * @example"," * Q.nfcall(FS.readFile, __filename)"," * .then(function (content) {"," * })"," *"," */","Q.nfcall = function (callback /*...args*/) {","    var args = array_slice(arguments, 1);","    return Q(callback).nfapply(args);","};","","Promise.prototype.nfcall = function (/*...args*/) {","    var nodeArgs = array_slice(arguments);","    var deferred = defer();","    nodeArgs.push(deferred.makeNodeResolver());","    this.fapply(nodeArgs).fail(deferred.reject);","    return deferred.promise;","};","","/**"," * Wraps a NodeJS continuation passing function and returns an equivalent"," * version that returns a promise."," * @example"," * Q.nfbind(FS.readFile, __filename)(\"utf-8\")"," * .then(console.log)"," * .done()"," */","Q.nfbind =","Q.denodeify = function (callback /*...args*/) {","    var baseArgs = array_slice(arguments, 1);","    return function () {","        var nodeArgs = baseArgs.concat(array_slice(arguments));","        var deferred = defer();","        nodeArgs.push(deferred.makeNodeResolver());","        Q(callback).fapply(nodeArgs).fail(deferred.reject);","        return deferred.promise;","    };","};","","Promise.prototype.nfbind =","Promise.prototype.denodeify = function (/*...args*/) {","    var args = array_slice(arguments);","    args.unshift(this);","    return Q.denodeify.apply(void 0, args);","};","","Q.nbind = function (callback, thisp /*...args*/) {","    var baseArgs = array_slice(arguments, 2);","    return function () {","        var nodeArgs = baseArgs.concat(array_slice(arguments));","        var deferred = defer();","        nodeArgs.push(deferred.makeNodeResolver());","        function bound() {","            return callback.apply(thisp, arguments);","        }","        Q(bound).fapply(nodeArgs).fail(deferred.reject);","        return deferred.promise;","    };","};","","Promise.prototype.nbind = function (/*thisp, ...args*/) {","    var args = array_slice(arguments, 0);","    args.unshift(this);","    return Q.nbind.apply(void 0, args);","};","","/**"," * Calls a method of a Node-style object that accepts a Node-style"," * callback with a given array of arguments, plus a provided callback."," * @param object an object that has the named method"," * @param {String} name name of the method of object"," * @param {Array} args arguments to pass to the method; the callback"," * will be provided by Q and appended to these arguments."," * @returns a promise for the value or error"," */","Q.nmapply = // XXX As proposed by \"Redsandro\"","Q.npost = function (object, name, args) {","    return Q(object).npost(name, args);","};","","Promise.prototype.nmapply = // XXX As proposed by \"Redsandro\"","Promise.prototype.npost = function (name, args) {","    var nodeArgs = array_slice(args || []);","    var deferred = defer();","    nodeArgs.push(deferred.makeNodeResolver());","    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);","    return deferred.promise;","};","","/**"," * Calls a method of a Node-style object that accepts a Node-style"," * callback, forwarding the given variadic arguments, plus a provided"," * callback argument."," * @param object an object that has the named method"," * @param {String} name name of the method of object"," * @param ...args arguments to pass to the method; the callback will"," * be provided by Q and appended to these arguments."," * @returns a promise for the value or error"," */","Q.nsend = // XXX Based on Mark Miller's proposed \"send\"","Q.nmcall = // XXX Based on \"Redsandro's\" proposal","Q.ninvoke = function (object, name /*...args*/) {","    var nodeArgs = array_slice(arguments, 2);","    var deferred = defer();","    nodeArgs.push(deferred.makeNodeResolver());","    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);","    return deferred.promise;","};","","Promise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"","Promise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal","Promise.prototype.ninvoke = function (name /*...args*/) {","    var nodeArgs = array_slice(arguments, 1);","    var deferred = defer();","    nodeArgs.push(deferred.makeNodeResolver());","    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);","    return deferred.promise;","};","","/**"," * If a function would like to support both Node continuation-passing-style and"," * promise-returning-style, it can end its internal promise chain with"," * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user"," * elects to use a nodeback, the result will be sent there.  If they do not"," * pass a nodeback, they will receive the result promise."," * @param object a result (or a promise for a result)"," * @param {Function} nodeback a Node.js-style callback"," * @returns either the promise or nothing"," */","Q.nodeify = nodeify;","function nodeify(object, nodeback) {","    return Q(object).nodeify(nodeback);","}","","Promise.prototype.nodeify = function (nodeback) {","    if (nodeback) {","        this.then(function (value) {","            nextTick(function () {","                nodeback(null, value);","            });","        }, function (error) {","            nextTick(function () {","                nodeback(error);","            });","        });","    } else {","        return this;","    }","};","","// All code before this point will be filtered from stack traces.","var qEndingLine = captureLine();","","return Q;","","});","","/*!"," * HeadJS     The only script in your &lt;HEAD&gt;    "," * Author     Tero Piirainen  (tipiirai)"," * Maintainer Robert Hoffmann (itechnology)"," * License    MIT / http://bit.ly/mit-license"," *"," * Version 0.99"," * http://headjs.com"," */","; (function (win, undefined) {","    \"use strict\";","","    var doc = win.document,","        domWaiters = [],","        queue      = [], // waiters for the \"head ready\" event","        handlers   = {}, // user functions waiting for events","        assets     = {}, // loadable items in various states","        isAsync    = \"async\" in doc.createElement(\"script\") || \"MozAppearance\" in doc.documentElement.style || win.opera,","        isHeadReady,","        isDomReady,","","        /*** public API ***/","        headVar = win.head_conf &amp;&amp; win.head_conf.head || \"head\",","        api     = win[headVar] = (win[headVar] || function () { api.ready.apply(null, arguments); }),","","        // states","        PRELOADING = 1,","        PRELOADED  = 2,","        LOADING    = 3,","        LOADED     = 4;","","    // Method 1: simply load and let browser take care of ordering","    if (isAsync) {","        api.load = function () {","            ///&lt;summary&gt;","            /// INFO: use cases","            ///    head.load(\"http://domain.com/file.js\",\"http://domain.com/file.js\", callBack)","            ///    head.load({ label1: \"http://domain.com/file.js\" }, { label2: \"http://domain.com/file.js\" }, callBack)","            ///&lt;/summary&gt; ","            var args      = arguments,","                 callback = args[args.length - 1],","                 items    = {};","","            if (!isFunction(callback)) {","                callback = null;","            }","","            each(args, function (item, i) {","                if (item !== callback) {","                    item             = getAsset(item);","                    items[item.name] = item;","","                    load(item, callback &amp;&amp; i === args.length - 2 ? function () {","                        if (allLoaded(items)) {","                            one(callback);","                        }","","                    } : null);","                }","            });","","            return api;","        };","","","    // Method 2: preload with text/cache hack","    } else {","        api.load = function () {","            var args = arguments,","                rest = [].slice.call(args, 1),","                next = rest[0];","","            // wait for a while. immediate execution causes some browsers to ignore caching","            if (!isHeadReady) {","                queue.push(function () {","                    api.load.apply(null, args);","                });","","                return api;","            }            ","","            // multiple arguments","            if (!!next) {","                /* Preload with text/cache hack (not good!)","                 * http://blog.getify.com/on-script-loaders/","                 * http://www.nczonline.net/blog/2010/12/21/thoughts-on-script-loaders/","                 * If caching is not configured correctly on the server, then items could load twice !","                 *************************************************************************************/","                each(rest, function (item) {","                    if (!isFunction(item)) {","                        preLoad(getAsset(item));","                    }","                });","","                // execute","                load(getAsset(args[0]), isFunction(next) ? next : function () {","                    api.load.apply(null, rest);","                });                ","            }","            else {","                // single item","                load(getAsset(args[0]));","            }","","            return api;","        };","    }","","    // INFO: for retro compatibility","    api.js = api.load;","    ","    api.test = function (test, success, failure, callback) {","        ///&lt;summary&gt;","        /// INFO: use cases:","        ///    head.test(condition, null       , \"file.NOk\" , callback);","        ///    head.test(condition, \"fileOk.js\", null       , callback);        ","        ///    head.test(condition, \"fileOk.js\", \"file.NOk\" , callback);","        ///    head.test(condition, \"fileOk.js\", [\"file.NOk\", \"file.NOk\"], callback);","        ///    head.test({","        ///               test    : condition,","        ///               success : [{ label1: \"file1Ok.js\"  }, { label2: \"file2Ok.js\" }],","        ///               failure : [{ label1: \"file1NOk.js\" }, { label2: \"file2NOk.js\" }],","        ///               callback: callback","        ///    );  ","        ///    head.test({","        ///               test    : condition,","        ///               success : [\"file1Ok.js\" , \"file2Ok.js\"],","        ///               failure : [\"file1NOk.js\", \"file2NOk.js\"],","        ///               callback: callback","        ///    );         ","        ///&lt;/summary&gt;    ","        var obj = (typeof test === 'object') ? test : {","            test: test,","            success: !!success ? isArray(success) ? success : [success] : false,","            failure: !!failure ? isArray(failure) ? failure : [failure] : false,","            callback: callback || noop","        };","","        // Test Passed ?","        var passed = !!obj.test;","","        // Do we have a success case","        if (passed &amp;&amp; !!obj.success) {","            obj.success.push(obj.callback);","            api.load.apply(null, obj.success);","        }","            // Do we have a fail case","        else if (!passed &amp;&amp; !!obj.failure) {","            obj.failure.push(obj.callback);","            api.load.apply(null, obj.failure);","        }","        else {","            callback();","        }","","        return api;","    };","","    api.ready = function (key, callback) {","        ///&lt;summary&gt;","        /// INFO: use cases:","        ///    head.ready(callBack)","        ///    head.ready(document , callBack)","        ///    head.ready(\"file.js\", callBack);","        ///    head.ready(\"label\"  , callBack);        ","        ///&lt;/summary&gt;","","        // DOM ready check: head.ready(document, function() { });","        if (key === doc) {","            if (isDomReady) {","                one(callback);","            }","            else {","                domWaiters.push(callback);","            }","","            return api;","        }","","        // shift arguments","        if (isFunction(key)) {","            callback = key;","            key      = \"ALL\";","        }","","        // make sure arguments are sane","        if (typeof key !== 'string' || !isFunction(callback)) {","            return api;","        }","","        // This can also be called when we trigger events based on filenames &amp; labels","        var asset = assets[key];","","        // item already loaded --&gt; execute and return","        if (asset &amp;&amp; asset.state === LOADED || key === 'ALL' &amp;&amp; allLoaded() &amp;&amp; isDomReady) {","            one(callback);","            return api;","        }","","        var arr = handlers[key];","        if (!arr) {","            arr = handlers[key] = [callback];","        }","        else {","            arr.push(callback);","        }","","        return api;","    };","","","    // perform this when DOM is ready","    api.ready(doc, function () {","","        if (allLoaded()) {","            each(handlers.ALL, function (callback) {","                one(callback);","            });","        }","","        if (api.feature) {","            api.feature(\"domloaded\", true);","        }","    });","","","    /* private functions","    *********************/","    function noop() {","        // does nothing","    }","","    function each(arr, callback) {","        if (!arr) {","            return;","        }","","        // arguments special type","        if (typeof arr === 'object') {","            arr = [].slice.call(arr);","        }","","        // do the job","        for (var i = 0, l = arr.length; i &lt; l; i++) {","            callback.call(arr, arr[i], i);","        }","    }","","    /* A must read: http://bonsaiden.github.com/JavaScript-Garden","     ************************************************************/","    function is(type, obj) {","        var clas = Object.prototype.toString.call(obj).slice(8, -1);","        return obj !== undefined &amp;&amp; obj !== null &amp;&amp; clas === type;","    }","","    function isFunction(item) {","        return is(\"Function\", item);","    }","","    function isArray(item) {","        return is(\"Array\", item);","    }","","    function toLabel(url) {","        ///&lt;summary&gt;Converts a url to a file label&lt;/summary&gt;","        var items = url.split(\"/\"),","             name = items[items.length - 1],","             i    = name.indexOf(\"?\");","","        return i !== -1 ? name.substring(0, i) : name;","    }","","    // INFO: this look like a \"im triggering callbacks all over the place, but only wanna run it one time function\" ..should try to make everything work without it if possible","    // INFO: Even better. Look into promises/defered's like jQuery is doing","    function one(callback) {","        ///&lt;summary&gt;Execute a callback only once&lt;/summary&gt;","        callback = callback || noop;","","        if (callback._done) {","            return;","        }","","        callback();","        callback._done = 1;","    }","","    function getAsset(item) {","        ///&lt;summary&gt;","        /// Assets are in the form of","        /// { ","        ///     name : label,","        ///     url  : url,","        ///     state: state","        /// }","        ///&lt;/summary&gt;","        var asset = {};","","        if (typeof item === 'object') {","            for (var label in item) {","                if (!!item[label]) {","                    asset = {","                        name: label,","                        url : item[label],","                        charset: item[label].split(\"#\")[1]||\"utf-8\"","                    };","                }","            }","        }","        else {","            asset = {","                name: toLabel(item),","                url : item,","                charset: item.split(\"#\")[1]||\"utf-8\"","            };","        }","","        // is the item already existant","        var existing = assets[asset.name];","        if (existing &amp;&amp; existing.url === asset.url) {","            return existing;","        }","","        assets[asset.name] = asset;","        return asset;","    }","","    function allLoaded(items) {","        items = items || assets;","","        for (var name in items) {","            if (items.hasOwnProperty(name) &amp;&amp; items[name].state !== LOADED) {","                return false;","            }","        }","        ","        return true;","    }","","","    function onPreload(asset) {","        asset.state = PRELOADED;","","        each(asset.onpreload, function (afterPreload) {","            afterPreload.call();","        });","    }","","    function preLoad(asset, callback) {","        if (asset.state === undefined) {","","            asset.state     = PRELOADING;","            asset.onpreload = [];","","            loadAsset({ url: asset.url, type: 'cache', charset: asset.charset }, function () {","                onPreload(asset);","            });","        }","    }","","    function load(asset, callback) {","        ///&lt;summary&gt;Used with normal loading logic&lt;/summary&gt;","        callback = callback || noop;","","        if (asset.state === LOADED) {","            callback();","            return;","        }","","        // INFO: why would we trigger a ready event when its not really loaded yet ?","        if (asset.state === LOADING) {","            api.ready(asset.name, callback);","            return;","        }","","        if (asset.state === PRELOADING) {","            asset.onpreload.push(function () {","                load(asset, callback);","            });","            return;","        }","","        asset.state = LOADING;","        ","        loadAsset(asset, function () {","            asset.state = LOADED;","            callback();","","            // handlers for this asset","            each(handlers[asset.name], function (fn) {","                one(fn);","            });","","            // dom is ready &amp; no assets are queued for loading","            // INFO: shouldn't we be doing the same test above ?","            if (isDomReady &amp;&amp; allLoaded()) {","                each(handlers.ALL, function (fn) {","                    one(fn);","                });","            }","        });","    }","","    /* Parts inspired from: https://github.com/cujojs/curl","    ******************************************************/","    function loadAsset(asset, callback) {","        callback = callback || noop;","","        var ele;","        if (/\\.css[^\\.]*$/.test(asset.url)) {","            ele      = doc.createElement('link');","            ele.type = 'text/' + (asset.type || 'css');","            ele.rel  = 'stylesheet';","            ele.href = asset.url;","        }","        else {","            ele         = doc.createElement('script');","            ele.charset = asset.charset;","            ele.type    = 'text/' + (asset.type || 'javascript');","            ele.src     = asset.url;","        }","","        ele.onload  = ele.onreadystatechange = process;","        ele.onerror = error;","","        /* Good read, but doesn't give much hope !","         * http://blog.getify.com/on-script-loaders/","         * http://www.nczonline.net/blog/2010/12/21/thoughts-on-script-loaders/","         * https://hacks.mozilla.org/2009/06/defer/","         */","","        // ASYNC: load in parellel and execute as soon as possible","        ele.async = false;","        // DEFER: load in parallel but maintain execution order","        ele.defer = false;","","        function error(event) {","            event = event || win.event;","            ","            // need some more detailed error handling here","","            // release event listeners","            ele.onload = ele.onreadystatechange = ele.onerror = null;","                        ","            // do callback","            callback();","        }","","        function process(event) {","            event = event || win.event;","","            // IE 7/8 (2 events on 1st load)","            // 1) event.type = readystatechange, s.readyState = loading","            // 2) event.type = readystatechange, s.readyState = loaded","","            // IE 7/8 (1 event on reload)","            // 1) event.type = readystatechange, s.readyState = complete ","","            // event.type === 'readystatechange' &amp;&amp; /loaded|complete/.test(s.readyState)","","            // IE 9 (3 events on 1st load)","            // 1) event.type = readystatechange, s.readyState = loading","            // 2) event.type = readystatechange, s.readyState = loaded","            // 3) event.type = load            , s.readyState = loaded","","            // IE 9 (2 events on reload)","            // 1) event.type = readystatechange, s.readyState = complete ","            // 2) event.type = load            , s.readyState = complete ","","            // event.type === 'load'             &amp;&amp; /loaded|complete/.test(s.readyState)","            // event.type === 'readystatechange' &amp;&amp; /loaded|complete/.test(s.readyState)","","            // IE 10 (3 events on 1st load)","            // 1) event.type = readystatechange, s.readyState = loading","            // 2) event.type = load            , s.readyState = complete","            // 3) event.type = readystatechange, s.readyState = loaded","","            // IE 10 (3 events on reload)","            // 1) event.type = readystatechange, s.readyState = loaded","            // 2) event.type = load            , s.readyState = complete","            // 3) event.type = readystatechange, s.readyState = complete ","","            // event.type === 'load'             &amp;&amp; /loaded|complete/.test(s.readyState)","            // event.type === 'readystatechange' &amp;&amp; /complete/.test(s.readyState)","","            // Other Browsers (1 event on 1st load)","            // 1) event.type = load, s.readyState = undefined","","            // Other Browsers (1 event on reload)","            // 1) event.type = load, s.readyState = undefined            ","","            // event.type == 'load' &amp;&amp; s.readyState = undefined","","","            // !doc.documentMode is for IE6/7, IE8+ have documentMode","            if (event.type === 'load' || (/loaded|complete/.test(ele.readyState) &amp;&amp; (!doc.documentMode || doc.documentMode &lt; 9))) {","                // release event listeners               ","                ele.onload = ele.onreadystatechange = ele.onerror = null;","","                // do callback","                callback();","            }","","            // emulates error on browsers that don't create an exception","            // INFO: timeout not clearing ..why ?","            //asset.timeout = win.setTimeout(function () {","            //    error({ type: \"timeout\" });","            //}, 3000);","        }","","        // use insertBefore to keep IE from throwing Operation Aborted (thx Bryan Forbes!)","        var head = doc.head || doc.getElementsByTagName('head')[0];","        // but insert at end of head, because otherwise if it is a stylesheet, it will not ovverride values","        head.insertBefore(ele, head.lastChild);","    }","","    /* Mix of stuff from jQuery &amp; IEContentLoaded","     * http://dev.w3.org/html5/spec/the-end.html#the-end","     ***************************************************/","    function domReady() {","        // Make sure body exists, at least, in case IE gets a little overzealous (jQuery ticket #5443).","        if (!doc.body) {","            // let's not get nasty by setting a timeout too small.. (loop mania guaranteed if assets are queued)","            win.clearTimeout(api.readyTimeout);","            api.readyTimeout = win.setTimeout(domReady, 50);","            return;","        }","","        if (!isDomReady) {","            isDomReady = true;","            each(domWaiters, function (fn) {","                one(fn);","            });","        }","    }","","    function domContentLoaded() {","        // W3C","        if (doc.addEventListener) {","            doc.removeEventListener(\"DOMContentLoaded\", domContentLoaded, false);","            domReady();","        }","","        // IE","        else if (doc.readyState === \"complete\") {","            // we're here because readyState === \"complete\" in oldIE","            // which is good enough for us to call the dom ready!            ","            doc.detachEvent(\"onreadystatechange\", domContentLoaded);","            domReady();","        }","    }","","    // Catch cases where ready() is called after the browser event has already occurred.","    // we once tried to use readyState \"interactive\" here, but it caused issues like the one","    // discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15    ","    if (doc.readyState === \"complete\") {","        domReady();","    }","","    // W3C","    else if (doc.addEventListener) {","        doc.addEventListener(\"DOMContentLoaded\", domContentLoaded, false);","","        // A fallback to window.onload, that will always work","        win.addEventListener(\"load\", domReady, false);","    }","","    // IE","    else {","        // Ensure firing before onload, maybe late but safe also for iframes","        doc.attachEvent(\"onreadystatechange\", domContentLoaded);","","        // A fallback to window.onload, that will always work","        win.attachEvent(\"onload\", domReady);","","        // If IE and not a frame","        // continually check to see if the document is ready","        var top = false;","","        try {","            top = win.frameElement == null &amp;&amp; doc.documentElement;","        } catch (e) { }","","        if (top &amp;&amp; top.doScroll) {","            (function doScrollCheck() {","                if (!isDomReady) {","                    try {","                        // Use the trick by Diego Perini","                        // http://javascript.nwbox.com/IEContentLoaded/","                        top.doScroll(\"left\");","                    } catch (error) {","                        // let's not get nasty by setting a timeout too small.. (loop mania guaranteed if assets are queued)","                        win.clearTimeout(api.readyTimeout);","                        api.readyTimeout = win.setTimeout(doScrollCheck, 50);","                        return;","                    }","","                    // and execute any waiting functions","                    domReady();","                }","            })();","        }","    }","","    /*","        We wait for 300 ms before asset loading starts. for some reason this is needed","        to make sure assets are cached. Not sure why this happens yet. A case study:","","        https://github.com/headjs/headjs/issues/closed#issue/83","    */","    setTimeout(function () {","        isHeadReady = true;","        each(queue, function (fn) {","            fn();","        });","","    }, 300);","","})(window);","recipe = (function(global, head, Q){","  'use strict';","","  var base = '',","      method = '',","      cache = {},","      hasValue = function(value, array){","        var i, len;","","        for(i = 0, len = array.length; i &lt; len; i++){","          if(value === array[i]) {","            return true;","          }","        }","        return false;","      },","      dfd = {","        version: Q.defer(),","        dependencies: Q.defer()","      },","      uniq = function(array){","        var i,","            len,","            uniqued = [];","        for(i = 0, len = array.length; i &lt; len; i++){","          if( !hasValue(array[i], uniqued) ){","           uniqued.push(array[i]);","          }","        }","        return uniqued;","      },","      define = function(dependencies, callback){","        var exports = recipe.exports,","            variables = [],","            variable,","            i,","            length = dependencies.length;","","        for(i=0;i&lt;length;i++){","          if(dependencies[i] === 'exports'){","            variables.push(recipe.exports);","          } else {","            variable = recipe.exports[dependencies[i]];","            variables.push( variable );","          }","        }","","        callback.apply( global, variables);","      },","      recipe = function(options){","        var namespace,","            exports = (options||{}).exports||{},","            libraries = (options||{}).libraries||[],","            scripts = (options||{}).scripts||[],","            isAmd = (options||{}).amd||false,","            urls = [],","            args = [],","            dfd = Q.defer(),","            len,","            deps,","            set,","            i;","","        if(isAmd){","          global.define = define;","","          for(namespace in exports){","            recipe.exports[namespace] = exports[namespace];","          }","        }","","        recipe.get.version().promise.then(function(version){","          recipe.get.dependencies(isAmd).promise.then(function(dependencies){","            for( i = 0, len = libraries.length; i&lt;len; i++){","              namespace = libraries[i];","              deps = dependencies[namespace];","              if(!deps &amp;&amp; !recipe.exports[namespace]) {","                dfd.reject(\"Ingredients not found. namespace[\"+libraries[i]+\"]\");","                return dfd;","              }","              if(deps){","                urls = urls.concat( deps );","              }","            }","","            urls = uniq( urls.concat(scripts) );","            for( i = 0, len = urls.length; i&lt;len; i++){","              set = urls[i].split(\"#\");","              if(!set[0]){","                dfd.reject(\"Illegal URL were exists. [\\\"\"+urls.join(\"\\\", \\\"\")+\"\\\"]\");","                return dfd;","              }","              args.push(set[0]+\"?_=\"+version+(set[1]?\"#\"+set[1]:\"\"));","            }","","            if(args.length) {","              args.push(function(){","                dfd.resolve(recipe.get.variables(libraries, isAmd));","              });","              head.js.apply(head, args);","            } else {","              dfd.resolve(recipe.get.variables(libraries, isAmd));","            }","","          });","        });","        return dfd.promise;","      },","      methods = {","        init: function(){","          var menu = recipe.get.menu();","          ","          base = menu.replace(/\\/[^\\/]+$/, \"\");","          if(!menu) {","            throw \"You might forget to order because of menu was not founded.\";","          }","","          recipe.setExportsFromAttribute();","          recipe.get.version().promise.then(function(version){","            recipe.resolve(menu, version);","          });","","        },","        resolve: function(url, version){","          var set = url.split(\"#\");","          head.js(set[0]+\"?_=\"+version+(set[1]?\"#\"+set[1]:\"\"));","        },","        setExportsFromAttribute: function(){","          var script = recipe.get.recipeTag()|| {getAttribute: function(){}},","              exports = (script.getAttribute('data-exports')||'').split(','),","              jQueryNoConflict = script.getAttribute('data-jquery-noconflict'),","              i,","              len,","              namespace,","              variable;","","          for(i=0, len=exports.length; i &lt; len; i++){","            namespace = exports[i];","            if(namespace){","              variable = global[namespace];","              if(namespace === 'jQuery' &amp;&amp; jQueryNoConflict ){","                variable = global.jQuery.noConflict(jQueryNoConflict === \"true\" ? true : undefined);","              }","              recipe.exports[namespace] = variable;","            }","          }","        },","        get: {","          recipeTag: function(){","            var scripts,","                i,","                len,","                script,","                src;","","            if(cache.recipeTag){","              return cache.recipeTag;","            }","            scripts = document.getElementsByTagName(\"script\");","","            if(scripts){","              for(i=0, len = scripts.length; i&lt;len; i++){","                script = scripts[i];","                src = script.src || \"\";","                if( /\\/recipe\\.js(\\?.*)?$/.test( src ) &amp;&amp; script.getAttribute('data-menu')){","                  cache.recipeTag = script;","                  return script;","                }","              }","            }","          },","          menu: function(){","            var script = recipe.get.recipeTag() || {getAttribute:function(){}},","                menu = script.getAttribute(\"data-menu\"),","                url = (script.getAttribute(\"src\")||\"\").replace(/[^\\/]+$/, \"\")+menu+\".js\";","            return menu ? url : \"\";","          },","          version: function(){","            if( !recipe.version ) {","              head.js(base+'/recipe.version.js?_='+(new Date().getTime()), function(){","                dfd.version.resolve(recipe.version);","              });","            } else {","              dfd.version.resolve(recipe.version);","            }","            return dfd.version;","          },","          dependencies: function(isAmd){","            if(!recipe.dependencies) {","              head.js(base+'/recipe.'+(isAmd?'amd.':'')+'dependencies.js?_='+recipe.version, function(){","                dfd.dependencies.resolve(recipe.dependencies);","              });","            } else {","              dfd.dependencies.resolve(recipe.dependencies);","            }","            return dfd.dependencies;","          },","          variables: function(libraries, isAmd){","            var variables = {},","                exports = recipe.exports,","                namespace,","                i, len;","","            if(isAmd) {","              for(i=0, len=libraries.length; i&lt;len; i++){","                namespace = libraries[i];","                variables[namespace] = exports[namespace];","              }","              return variables;","            }","          }","        }","      };","","  for(method in methods){","    recipe[method] = methods[method];","  }","  recipe.exports = recipe.exports || {Q:Q};","","  recipe.init();","  return recipe;","})(this, head, Q);","})();"];
